Script started on 2020-04-02 19:52:42-04:00 [TERM="xterm" TTY="/dev/pts/14" COLUMNS="93" LINES="51"]
rgeary1@remote03:~/i240a/submit/lab9$ cd 3[Kexercises/3-stats/
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.cc" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                            [3;1H~                                                                                            [4;1H~                                                                                            [5;1H~                                                                                            [6;1H~                                                                                            [7;1H~                                                                                            [8;1H~                                                                                            [9;1H~                                                                                            [10;1H~                                                                                            [11;1H~                                                                                            [12;1H~                                                                                            [13;1H~                                                                                            [14;1H~                                                                                            [15;1H~                                                                                            [16;1H~                                                                                            [17;1H~                                                                                            [18;1H~                                                                                            [19;1H~                                                                                            [20;1H~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H0,0-1[9CAll[1;1H[?25h[?1000l[?1002h[?25l[51;66H#[1;1H[51;1H[1m[37m[41mE348: No string under cursor[m[51;66H[K[1;1H[51;76H0,0-1[9CAll[1;1H[?25h[?25l[51;66Hi[1;1H[51;66H [1;1H[51;1H[1m--[m[1m[37m[41m4[m[1m INSERT --[m[1m[37m[41mi[m[51;13H[K[51;76H0,1[11CAll[1;1H[?25h[?25ln[51;76H1,2[1;2H[?25h[?25lc[51;78H3[1;3H[?25h[?25ll[51;78H4[1;4H[?25h[?25lu[51;78H5[1;5H[?25h[?25ld[51;78H6[1;6H[?25h[?25le[51;78H7[1;7H[?25h[?25l[51;78H8[1;8H[?25h[?25l[51;78H7[1;7H[?25h[?25l[1;6H[K[51;78H6[1;6H[?25h[?25l[1;5H[K[51;78H5[1;5H[?25h[?25l[1;4H[K[51;78H4[1;4H[?25h[?25l[1;3H[K[51;78H3[1;3H[?25h[?25l[1;2H[K[51;78H2[1;2H[?25h[?25l[1;1H[K[51;78H1[1;1H[?25h[?25l#[51;78H2[1;2H[?25h[?25li[51;78H3[1;3H[?25h[?25ln[51;78H4[1;4H[?25h[?25lc[51;78H5[1;5H[?25h[?25ll[51;78H6[1;6H[?25h[?25lu[51;78H7[1;7H[?25h[?25ld[51;78H8[1;8H[?25h[?25le[51;78H9[1;9H[?25h[?25l[51;78H10[1;10H[?25h[?25l[35m#include [m[31m"[m[51;79H1[1;11H[?25h[?25l[31mo[m[51;79H2[1;12H[?25h[?25l[31mp[m[51;79H3[1;13H[?25h[?25l[31ms[m[51;79H4[1;14H[?25h[?25l[31m.[m[51;79H5[1;15H[?25h[?25l[31mh[m[51;79H6[1;16H[?25h[?25l[31mh[m[51;79H7[1;17H[?25h[?25l[31m"[m[51;79H8[1;18H[?25h[?25l[2;1H[K[51;76H2,1 [2;1H[?25h[?25l[3;1H[K[51;76H3[3;1H[?25h[51;1H[K[3;1H[?25l[51;66H^[[3;1H[51;66H  [3;1H[51;76H3,0-1[9CAll[3;1H[?25h[?25l[51;66H:[3;1H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.cc" [New] 3L, 20C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.cc[K[Khh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                            [3;1H~                                                                                            [4;1H~                                                                                            [5;1H~                                                                                            [6;1H~                                                                                            [7;1H~                                                                                            [8;1H~                                                                                            [9;1H~                                                                                            [10;1H~                                                                                            [11;1H~                                                                                            [12;1H~                                                                                            [13;1H~                                                                                            [14;1H~                                                                                            [15;1H~                                                                                            [16;1H~                                                                                            [17;1H~                                                                                            [18;1H~                                                                                            [19;1H~                                                                                            [20;1H~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H0,0-1[9CAll[1;1H[?25h[?1000l[?1002h[?25l[51;66H#[1;1H[51;1H[1m[37m[41mE348: No string under cursor[m[51;66H[K[1;1H[51;76H0,0-1[9CAll[1;1H[?25h[?25l[51;66Hi[1;1H[51;66H [1;1H[51;1H[1m--[m[1m[37m[41m4[m[1m INSERT --[m[1m[37m[41mi[m[51;13H[K[51;76H0,1[11CAll[1;1H[?25h[?25lf[51;76H1,2[1;2H[?25h[?25l[1;1H[K[51;78H1[1;1H[?25h[?25l#[51;78H2[1;2H[?25h[?25li[51;78H3[1;3H[?25h[?25l[35m#if[m[51;78H4[1;4H[?25h[?25l#ifn[51;78H5[1;5H[?25h[?25ld[51;78H6[1;6H[?25h[?25le[51;78H7[1;7H[?25h[?25l[35m#ifndef[m[51;78H8[1;8H[?25h[?25l[35m [m[51;78H9[1;9H[?25h[?25l[35mC[m[51;78H10[1;10H[?25h[?25l[35mO[m[51;79H1[1;11H[?25h[?25l[35mU[m[51;79H2[1;12H[?25h[?25l[35mN[m[51;79H3[1;13H[?25h[?25l[35mT[m[51;79H4[1;14H[?25h[?25l[35mE[m[51;79H5[1;15H[?25h[?25l[35mR[m[51;79H6[1;16H[?25h[?25l[35m_[m[51;79H7[1;17H[?25h[?25l[35mH[m[51;79H8[1;18H[?25h[?25l[35mH[m[51;79H9[1;19H[?25h[?25l[51;78H9 [1;9H[?25h[?25l[35m_COUNTER_HH[m[51;78H10[1;10H[?25h[?25l[51;79H1[1;11H[?25h[?25l[35mOUNTER_H[m[1;19H[K[51;79H0[1;10H[?25h[?25l[35mOUNTER_H[m[1;18H[K[51;78H9 [1;9H[?25h[?25l[35mCOUNTER_HH[m[51;78H10[1;10H[?25h[?25l[51;78H8 [1;8H[?25h[?25l[51;78H5[1;5H[?25h[?25l[51;78H19[1;19H[?25h[?25l[2;1H[K[51;76H2,1 [2;1H[?25h[?25l#[51;78H2[2;2H[?25h[?25ld[51;78H3[2;3H[?25h[?25le[51;78H4[2;4H[?25h[?25lf[51;78H5[2;5H[?25h[?25li[51;78H6[2;6H[?25h[?25ln[51;78H7[2;7H[?25h[?25l[35m#define[m[51;78H8[2;8H[?25h[?25l[35m [m[51;78H9[2;9H[?25h[?25l[35mC[m[51;78H10[2;10H[?25h[?25l[35mO[m[51;79H1[2;11H[?25h[?25l[35mU[m[51;79H2[2;12H[?25h[?25l[35mN[m[51;79H3[2;13H[?25h[?25l[35mT[m[51;79H4[2;14H[?25h[?25l[35mE[m[51;79H5[2;15H[?25h[?25l[35mR[m[51;79H6[2;16H[?25h[?25l[35m_[m[51;79H7[2;17H[?25h[?25l[35mH[m[51;79H8[2;18H[?25h[?25l[35mH[m[51;79H9[2;19H[?25h[?25l[3;1H[K[51;76H3,1 [3;1H[?25h[?25l[4;1H[K[51;76H4[4;1H[?25h[?25l#[51;78H2[4;2H[?25h[?25li[51;78H3[4;3H[?25h[?25ln[51;78H4[4;4H[?25h[?25ll[51;78H5[4;5H[?25h[?25l[4;4H[K[51;78H4[4;4H[?25h[?25lc[51;78H5[4;5H[?25h[?25ll[51;78H6[4;6H[?25h[?25lu[51;78H7[4;7H[?25h[?25ld[51;78H8[4;8H[?25h[?25le[51;78H9[4;9H[?25h[?25l[51;78H10[4;10H[?25h[?25l[35m#include [m[31m"[m[51;79H1[4;11H[?25h[?25l[31mO[m[51;79H2[4;12H[?25h[?25l[4;11H[K[51;79H1[4;11H[?25h[?25l[31mo[m[51;79H2[4;12H[?25h[?25l[31mp[m[51;79H3[4;13H[?25h[?25l[31ms[m[51;79H4[4;14H[?25h[?25l[31m.[m[51;79H5[4;15H[?25h[?25l[31mh[m[51;79H6[4;16H[?25h[?25l[31mh[m[51;79H7[4;17H[?25h[?25l[31m"[m[51;79H8[4;18H[?25h[?25l[5;1H[K[51;76H5,1 [5;1H[?25h[?25l[6;1H[K[51;76H6[6;1H[?25h[?25lc[51;78H2[6;2H[?25h[?25ll[51;78H3[6;3H[?25h[?25la[51;78H4[6;4H[?25h[?25ls[51;78H5[6;5H[?25h[?25l[32mclass[m[51;78H6[6;6H[?25h[?25l[51;78H7[6;7H[?25h[?25lC[51;78H8[6;8H[?25h[?25lo[51;78H9[6;9H[?25h[?25lu[51;78H10[6;10H[?25h[?25ln[51;79H1[6;11H[?25h[?25lt[51;79H2[6;12H[?25h[?25le[51;79H3[6;13H[?25h[?25lr[51;79H4[6;14H[?25h[?25l[51;79H5[6;15H[?25h[?25l:[51;79H6[6;16H[?25h[?25l[51;79H7[6;17H[?25h[?25lp[51;79H8[6;18H[?25h[?25lu[51;79H9[6;19H[?25h[?25lb[51;78H20[6;20H[?25h[?25l[33mpublic[m[51;79H3[6;23H[?25h[?25l[51;79H4[6;24H[?25h[?25lO[51;79H5[6;25H[?25h[?25lp[51;79H6[6;26H[?25h[?25ls[51;79H7[6;27H[?25h[?25l<[51;79H8[6;28H[?25h[?25l>[51;79H9[6;29H[?25h[?25l[6;28H[K[51;79H8[6;28H[?25h[?25l[6;27H[K[51;79H7[6;27H[?25h[?25l{[51;79H8[6;28H[?25h[?25l
        [7;9H[K[51;76H7,2-9[7;9H[?25h[?25l
        [8;9H[K[51;76H8[8;9H[?25h[?25l}[6;27H[46m{

}[m[51;79H  [8;2H[?25h[?25l[6;27H{

}[51;76H7,1[7;1H[?25h[?25l[51;78H2-9[7;9H[?25h[?25lp[51;78H3-10[7;10H[?25h[?25lu[51;78H4-11[7;11H[?25h[?25lb[51;78H5-12[7;12H[?25h[?25ll[51;78H6-13[7;13H[?25h[?25li[51;78H7-14[7;14H[?25h[?25l[33mpublic[m[51;78H8-15[7;15H[?25h[?25l[51;78H9-16[7;16H[?25h[?25li[51;78H10-17[7;17H[?25h[?25ln[51;79H1-18[7;18H[?25h[?25l[32mint[m[51;79H2-19[7;19H[?25h[?25lin[7;18H[K[51;79H1-18[7;18H[?25h[?25l[7;17H[K[51;79H0-17[7;17H[?25h[?25l[7;16H[K[51;78H9-16 [7;16H[?25h[?25l[51;78H8-15[7;15H[?25h[?25l:[51;78H9-16[7;16H[?25h[?25l[8;50r[8;1H[L[1;51r[51;76H[K[51;76H8,3-17[8CAll[8;17H[?25h[?25li[51;78H4-18[8;18H[?25h[?25ln[51;78H5-19[8;19H[?25h[?25l[32mint[m[51;78H6-20[8;20H[?25h[?25l[51;78H7-21[8;21H[?25h[?25lc[51;78H8-22[8;22H[?25h[?25lo[51;78H9-23[8;23H[?25h[?25lu[51;78H10-24[8;24H[?25h[?25ln[51;79H1-25[8;25H[?25h[?25lt[51;79H2-26[8;26H[?25h[?25le[51;79H3-27[8;27H[?25h[?25lr[51;79H4-28[8;28H[?25h[?25l[8;27H[K[51;79H3-27[8;27H[?25h[?25l[8;26H[K[51;79H2-26[8;26H[?25h[?25l[8;25H[K[51;79H1-25[8;25H[?25h[?25l[8;24H[K[51;79H0-24[8;24H[?25h[?25l[8;23H[K[51;78H9-23 [8;23H[?25h[?25l[8;22H[K[51;78H8-22[8;22H[?25h[?25lo[51;78H9-23[8;23H[?25h[?25lm[51;78H10-24[8;24H[?25h[?25lp[51;79H1-25[8;25H[?25h[?25la[51;79H2-26[8;26H[?25h[?25lr[51;79H3-27[8;27H[?25h[?25le[51;79H4-28[8;28H[?25h[?25lc[51;79H5-29[8;29H[?25h[?25ln[51;79H6-30[8;30H[?25h[?25lt[51;79H7-31[8;31H[?25h[?25l[8;30H[K[51;79H6-30[8;30H[?25h[?25l[8;29H[K[51;79H5-29[8;29H[?25h[?25l[8;28H[K[51;79H4-28[8;28H[?25h[?25l[8;27H[K[51;79H3-27[8;27H[?25h[?25l[8;26H[K[51;79H2-26[8;26H[?25h[?25l[8;25H[K[51;79H1-25[8;25H[?25h[?25lc[51;79H2-26[8;26H[?25h[?25l[51;79H3-27[8;27H[?25h[?25l=[51;79H4-28[8;28H[?25h[?25l[51;79H5-29[8;29H[?25h[?25l[31m0[m[51;79H6-30[8;30H[?25h[?25l;[51;79H7-31[8;31H[?25h[?25l[9;50r[9;1H[L[1;51r[51;76H[K[51;76H9,3-17[8CAll[9;17H[?25h[?25li[51;78H4-18[9;18H[?25h[?25ln[51;78H5-19[9;19H[?25h[?25l[32mint[m[51;78H6-20[9;20H[?25h[?25l[51;78H7-21[9;21H[?25h[?25lc[51;78H8-22[9;22H[?25h[?25lo[51;78H9-23[9;23H[?25h[?25lm[51;78H10-24[9;24H[?25h[?25lp[51;79H1-25[9;25H[?25h[?25ls[51;79H2-26[9;26H[?25h[?25l[9;25H[K[51;79H1-25[9;25H[?25h[?25l[9;24H[K[51;79H0-24[9;24H[?25h[?25l[9;23H[K[51;78H9-23 [9;23H[?25h[?25l[9;22H[K[51;78H8-22[9;22H[?25h[?25l[9;21H[K[51;78H7-21[9;21H[?25h[?25ls[51;78H8-22[9;22H[?25h[?25lw[51;78H9-23[9;23H[?25h[?25la[51;78H10-24[9;24H[?25h[?25lp[51;79H1-25[9;25H[?25h[?25lc[51;79H2-26[9;26H[?25h[?25l[51;79H3-27[9;27H[?25h[?25l=[51;79H4-28[9;28H[?25h[?25l[51;79H5-29[9;29H[?25h[?25l[31m0[m[51;79H6-30[9;30H[?25h[?25l;[51;79H7-31[9;31H[?25h[?25l[10;50r[10;1H[L[1;51r[51;76H[K[51;76H10,3-17[7CAll[10;17H[?25h[?25l[11;50r[11;1H[L[1;51r[51;76H[K[51;76H11,3-17[7CAll[11;17H[?25h[?25li[51;79H4-18[11;18H[?25h[?25ln[51;79H5-19[11;19H[?25h[?25l[32mint[m[51;79H6-20[11;20H[?25h[?25l[51;79H7-21[11;21H[?25h[?25lc[51;79H8-22[11;22H[?25h[?25lo[51;79H9-23[11;23H[?25h[?25lm[51;79H10-24[11;24H[?25h[?25lp[51;80H1-25[11;25H[?25h[?25la[51;80H2-26[11;26H[?25h[?25lr[51;80H3-27[11;27H[?25h[?25le[51;80H4-28[11;28H[?25h[?25l([51;80H5-29[11;29H[?25h[?25li[51;80H6-30[11;30H[?25h[?25ln[51;80H7-31[11;31H[?25h[?25la[51;80H8-32[11;32H[?25h[?25l[51;80H9-33[11;33H[?25h[?25la[51;79H20-34[11;34H[?25h[?25l[11;33H[K[51;79H19-33[11;33H[?25h[?25l[51;80H8-32[11;32H[?25h[?25l[11;31H[K[51;80H7-31[11;31H[?25h[?25l[32mint[m[51;80H8-32[11;32H[?25h[?25linta[51;80H9-33[11;33H[?25h[?25l[51;79H20-34[11;34H[?25h[?25l[51;79H19-33[11;33H[?25h[?25l[32mint[m[11;32H[K[51;80H8-32[11;32H[?25h[?25l[51;80H9-33[11;33H[?25h[?25la[51;79H20-34[11;34H[?25h[?25l[51;80H1-35[11;35H[?25h[?25l[51;80H0-34[11;34H[?25h[?25l,[51;80H1-35[11;35H[?25h[?25l[51;80H2-36[11;36H[?25h[?25li[51;80H3-37[11;37H[?25h[?25ln[51;80H4-38[11;38H[?25h[?25l[32mint[m[51;80H5-39[11;39H[?25h[?25l[51;80H6-40[11;40H[?25h[?25lb[51;80H7-41[11;41H[?25h[?25l)[11;28H[46m([12C)[m[51;80H8-42[11;42H[?25h[?25l{[11;28H([12C)[46m{
}[m[51;80H9-43[11;43H[?25h[?25l[12;50r[12;1H[L[1;51r[12;1H[46m        [m
}[51;76H[K[51;76H12,4-25[7CAll[11;42H{
        [16C[?25h[?25l[13;50r[13;1H[L[1;51r[51;76H[K[51;76H13,4-25[7CAll[13;25H[?25h[?25l[13;17H}[11;42H[46m{[13;17H}[m[51;81H18[13;18H[?25h[?25l[11;42H{[13;17H}[51;77H2,1   [12;1H[?25h[?25l[51;79H2-9[12;9H[?25h[?25l[51;79H3-17[12;17H[?25h[?25l[51;79H4-25[12;25H[?25h[?25lr[51;79H5-26[12;26H[?25h[?25le[51;79H6-27[12;27H[?25h[?25lt[51;79H7-28[12;28H[?25h[?25l[12;27H[K[51;79H6-27[12;27H[?25h[?25l[12;26H[K[51;79H5-26[12;26H[?25h[?25l[12;25H[K[51;79H4-25[12;25H[?25h[?25lc[51;79H5-26[12;26H[?25h[?25lo[51;79H6-27[12;27H[?25h[?25lm[51;79H7-28[12;28H[?25h[?25lp[51;79H8-29[12;29H[?25h[?25lc[51;79H9-30[12;30H[?25h[?25l+[51;79H10-31[12;31H[?25h[?25l+[51;80H1-32[12;32H[?25h[?25l;[51;80H2-33[12;33H[?25h[?25l[13;50r[13;1H[L[1;51r[51;76H[K[51;76H13,4-25[7CAll[13;25H[?25h[?25lr[51;79H5-26[13;26H[?25h[?25le[51;79H6-27[13;27H[?25h[?25lt[51;79H7-28[13;28H[?25h[?25lu[51;79H8-29[13;29H[?25h[?25lr[51;79H9-30[13;30H[?25h[?25l[33mreturn[m[51;79H10-31[13;31H[?25h[?25l[51;80H1-32[13;32H[?25h[?25lO[51;80H2-33[13;33H[?25h[?25lp[51;80H3-34[13;34H[?25h[?25ls[51;80H4-35[13;35H[?25h[?25l:[51;80H5-36[13;36H[?25h[?25l:[51;80H6-37[13;37H[?25h[?25lc[51;80H7-38[13;38H[?25h[?25lo[51;80H8-39[13;39H[?25h[?25lm[51;80H9-40[13;40H[?25h[?25lp[51;79H20-41[13;41H[?25h[?25la[51;80H1-42[13;42H[?25h[?25lr[51;80H2-43[13;43H[?25h[?25le[51;80H3-44[13;44H[?25h[?25l([51;80H4-45[13;45H[?25h[?25l)[46m()[m[51;80H5-46[13;46H[?25h[?25l;()[51;80H6-47[13;47H[?25h[?25l[51;79H11-32[13;32H[?25h[?25ltOps::compare();[51;80H2-33[13;33H[?25h[?25lhOps::compare();[51;80H3-34[13;34H[?25h[?25liOps::compare();[51;80H4-35[13;35H[?25h[?25lsOps::compare();[51;80H5-36[13;36H[?25h[?25l[33mthis[m Ops::compare();[51;80H6-37[13;37H[?25h[?25l-Ops::compare();[51;80H7-38[13;38H[?25h[?25l>Ops::compare();[51;80H8-39[13;39H[?25h[?25l Ops::compare();[51;80H9-40[13;40H[?25h[51;1H[K[13;39H[?25l[51;66H^[[13;39H[51;66H  [13;40H[51;76H13,18-39      All[13;39H[?25h[?25l[11;42H[46m{[14;17H}[m[51;77H4,3-17 [14;17H[?25h[?25l[51;66Hi[14;17H[51;66H [14;17H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H14,3-17[7CAll[14;17H[?25h[?25l[51;79H4-18[14;18H[?25h[?25l[15;50r[15;1H[L[1;51r[51;76H[K[51;76H15,3-17[7CAll[11;42H{[14;17H}[15;17H[?25h[?25li[51;79H4-18[15;18H[?25h[?25ln[51;79H5-19[15;19H[?25h[?25l[32mint[m[51;79H6-20[15;20H[?25h[?25l[51;79H7-21[15;21H[?25h[?25ls[51;79H8-22[15;22H[?25h[?25lw[51;79H9-23[15;23H[?25h[?25la[51;79H10-24[15;24H[?25h[?25lp[51;80H1-25[15;25H[?25h[?25lc[51;80H2-26[15;26H[?25h[?25l[51;80H3-27[15;27H[?25h[?25l=[51;80H4-28[15;28H[?25h[?25l[51;80H5-29[15;29H[?25h[?25l[51;80H4-28[15;28H[?25h[?25l[15;27H[K[51;80H3-27[15;27H[?25h[?25l[51;80H2-26[15;26H[?25h[?25l[15;25H[K[51;80H1-25[15;25H[?25h[?25l([51;80H2-26[15;26H[?25h[?25li[51;80H3-27[15;27H[?25h[?25ln[51;80H4-28[15;28H[?25h[?25l[32mint[m[51;80H5-29[15;29H[?25h[?25l[51;80H6-30[15;30H[?25h[?25la[51;80H7-31[15;31H[?25h[?25l[
[1m[37m[41m}[m[51;80H8-32[15;32H[?25h[?25l]
}[15;31H[46m[][m[51;80H9-33[15;33H[?25h[?25l,[][51;79H20-34[15;34H[?25h[?25l[51;80H1-35[15;35H[?25h[?25li[51;80H2-36[15;36H[?25h[?25ln[51;80H3-37[15;37H[?25h[?25l[32mint[m[51;80H4-38[15;38H[?25h[?25l[51;80H5-39[15;39H[?25h[?25li[51;80H6-40[15;40H[?25h[?25l,[51;80H7-41[15;41H[?25h[?25l[51;80H8-42[15;42H[?25h[?25li[51;80H9-43[15;43H[?25h[?25ln[51;79H30-44[15;44H[?25h[?25l[32mint[m[51;80H1-45[15;45H[?25h[?25l[51;80H2-46[15;46H[?25h[?25lj[51;80H3-47[15;47H[?25h[?25l)[15;25H[46m([21C)[m[51;80H4-48[15;48H[?25h[?25l{[15;25H([21C)[46m{
}[m[51;80H5-49[15;49H[?25h[?25l[16;50r[16;1H[L[1;51r[16;1H[46m        [m
}[51;76H[K[51;76H16,4-25[7CAll[15;48H{
        [16C[?25h[?25l[17;50r[17;1H[L[1;51r[51;76H[K[51;76H17,4-25[7CAll[17;25H[?25h[?25l[17;17H}[15;48H[46m{[17;17H}[m[51;81H18[17;18H[?25h[?25l[15;48H{[17;17H}[51;77H6,1   [16;1H[?25h[?25l[51;79H2-9[16;9H[?25h[?25l[51;79H3-17[16;17H[?25h[?25l[51;79H4-25[16;25H[?25h[?25ls[51;79H5-26[16;26H[?25h[?25lw[51;79H6-27[16;27H[?25h[?25la[51;79H7-28[16;28H[?25h[?25lp[51;79H8-29[16;29H[?25h[?25lc[51;79H9-30[16;30H[?25h[?25l[51;79H10-31[16;31H[?25h[?25l[51;79H9-30 [16;30H[?25h[?25l+[51;79H10-31[16;31H[?25h[?25l+[51;80H1-32[16;32H[?25h[?25l;[51;80H2-33[16;33H[?25h[?25l[17;50r[17;1H[L[1;51r[51;76H[K[51;76H17,4-25[7CAll[17;25H[?25h[?25lt[51;79H5-26[17;26H[?25h[?25l[17;25H[K[51;79H4-25[17;25H[?25h[?25lr[51;79H5-26[17;26H[?25h[?25le[51;79H6-27[17;27H[?25h[?25lt[51;79H7-28[17;28H[?25h[?25lu[51;79H8-29[17;29H[?25h[?25lr[51;79H9-30[17;30H[?25h[?25l[33mreturn[m[51;79H10-31[17;31H[?25h[?25l[51;80H1-32[17;32H[?25h[?25lt[51;80H2-33[17;33H[?25h[?25lh[51;80H3-34[17;34H[?25h[?25li[51;80H4-35[17;35H[?25h[?25l[33mthis[m[51;80H5-36[17;36H[?25h[?25l[51;80H6-37[17;37H[?25h[?25l-[51;80H7-38[17;38H[?25h[?25l>[51;80H8-39[17;39H[?25h[?25l[51;80H9-40[17;40H[?25h[?25lO[51;79H20-41[17;41H[?25h[?25lp[51;80H1-42[17;42H[?25h[?25ls[51;80H2-43[17;43H[?25h[?25l:[51;80H3-44[17;44H[?25h[?25l:[51;80H4-45[17;45H[?25h[?25ls[51;80H5-46[17;46H[?25h[?25lw[51;80H6-47[17;47H[?25h[?25la[51;80H7-48[17;48H[?25h[?25lp[51;80H8-49[17;49H[?25h[?25l([51;80H9-50[17;50H[?25h[?25l)[46m()[m[51;79H30-51[17;51H[?25h[?25l;()[51;80H1-52[17;52H[?25h[51;1H[K[17;51H[?25l[51;66H^[[17;51H[51;66H  [17;52H[51;76H17,30-51      All[17;51H[?25h[?25l[51;66H:[17;51H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" [New] 19L, 293C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile
g++ -MT sorts.o -MMD -MP -MF .deps/sorts.d -g -Wall -std=c++17 -c sorts.cc
g++ -MT ops.o -MMD -MP -MF .deps/ops.d -g -Wall -std=c++17 -c ops.cc
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ -MT counter.o -MMD -MP -MF .deps/counter.d -g -Wall -std=c++17 -c counter.cc
g++ sorts.o ops.o main.o counter.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main sorts.o ops.o main.o counter.o; do echo $t >>.gitignore; done
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile[5Pvim counter.hh[K[K[K[K[K[K[K[K[K[Kmain.[K[K[K[K[K[K[K[K[Kls
counter.cc  counter.o  main.cc	ops.cc	ops.o	  sorts.hh
counter.hh  main       main.o	ops.hh	sorts.cc  sorts.o
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim main.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 122L, 3016C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"ops.hh"[m
[35m#include [m[31m"sorts.hh"[m

[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath, [32mint[m n)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream file;
  [33mif[m (!isStdin) file.open(filePath);
  std::istream& in = (isStdin) ? std::cin : file;
  [33mif[m (!in) {
    [33mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[24;33H[31m": "[m + std::strerror(errno));
  }
  std::vector<[32mint[m> ints;
  [33mfor[m ([32mint[m i = [31m0[m; n < [31m0[m || i < n; ++i) {
    [32mint[m v;
    in >> v;
    [33mif[m (in.eof()) {[31;7H[33mif[m (n > [31m0[m) {[32;9Hstd::cerr << [31m"got eof on while reading "[m << filePath[33;19H<< [31m" after reading "[m << i << [31m" ints; expected "[m << n[34;19H<< std::endl;[35;9Hstd::exit([31m1[m);[36;7H}[37;7H[33mbreak[m;
    }
    ints.push_back(v);
  }
  [33mreturn[m ints;
}

[34m//type for pointer to a sorting function [m
[33musing[m SortP = [32mvoid[m (*)([32mint[m a[], [32mint[m n, Ops* ops);

[34m//map algorithm name to corresponding function[m
[32mstruct[m Algorithm {
  std::string name;
  SortP sort;[51;76H1,1[11CTop[1;1H[?25h[?1000l[?1002h[?25l[1;50r[1;1H[3M[1;51r[48;1H};

[32mstatic[m Algorithm algorithms[] = {[51;1H[K[51;76H9,1[12C4%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"insertionSort"[m, insertionSort },
  { [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },[51;76H[K[51;76H12,1[11C8%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"mergeSort"[m, mergeSort },
  { [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H15,1[10C12%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.[m[51;76H[K[51;76H18,1[10C16%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m */[m
[32mstatic[m SortP
getSort(std::string name)[51;76H[K[51;76H21,1[10C20%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H{
  std::string names;
  [33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {[51;76H[K[51;76H24,1-8[8C25%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;[51;76H[K[51;76H27,1[10C29%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hnames += algName;
  }
  std::cerr << [31m"unknown algorithm "[m << name[51;76H[K[51;76H30,1[10C33%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);
}[51;76H[K[51;76H33,1-8[8C37%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m[51;76H[K[51;76H36,1[10C41%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1HoutArray([32mint[m a[], [32mint[m n)
{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[51;76H[K[51;76H39,1[10C45%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hstd::cout << a[i] << [31m" "[m;
  }
  std::cout << std::endl;[51;76H[K[51;76H42,1[10C50%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H}

[32mstatic[m [32mvoid[m[51;76H[K[51;76H45,1[10C54%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1Hgo(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)
{
  std::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);[51;76H[K[51;76H48,1[10C58%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;18H[46m{


}[m[48;3H[32mint[m* a = ints.data();
  [32mint[m n = ints.size();
  Ops ops;[51;76H[K[51;76H51,1[10C62%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;1H}[48;3Hsort(a, n, &ops);
  [33mif[m (isVerbose) outArray(a, n);
}[51;76H[K[51;76H54,1[10C66%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mint[m
main([32mint[m argc, [32mchar[m* argv[]) {[51;76H[K[51;76H57,1[10C70%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mif[m (argc < [31m3[m) {
    std::cerr << [31m"usage: "[m << argv[[31m0[m][50;15H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;[51;76H[K[51;76H60,0-1[8C75%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hstd::exit([31m1[m);
  }
  [32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;[51;76H[K[51;76H63,1[10C79%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;1H[46m{[17;1H}[m[48;3H[32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;
  [32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];
  [32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);[51;76H[K[51;76H66,1[10C83%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;1H{[14;1H}[48;3HSortP sort = getSort(algorithm);
  [32mint[m sizeArgsIndex = [31m3[m + nVerbose;
  [33mif[m (sizeArgsIndex == argc) {[51;76H[K[51;76H69,1[10C87%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hgo(sort, filePath, isVerbose, -[31m1[m);
  }
  [33melse[m {[51;76H[K[51;76H72,1[10C91%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[49;7H[32mint[m nRead = atoi(argv[i]);[50;7Hgo(sort, filePath, isVerbose, nRead);[51;76H[K[51;76H75,1-8[8C95%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H}
  }
}[51;76H[K[51;76H78,0-1[8CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H81,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H84,1[10CBot[6;1H[?25h[?25l[51;66H^[[6;1H[51;66H  [6;1H[51;66H^[[6;1H[51;66H  [6;1H[?25h[?25l[51;66H:[6;1H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"main.cc" 122L, 3016C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ ./main quickSort ../../random.dat `se q 10000 10000 100000`
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ ./main quickSort ../../random.dat `seq 10000 10000 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvim main.cc[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kvim main.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 122L, 3016C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.
 */[m
[32mstatic[m SortP
getSort(std::string name)
{
  std::string names;
  [33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;
  }
  std::cerr << [31m"unknown algorithm "[m << name[16;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);
}

[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)
{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;
  }
  std::cout << std::endl;
}

[32mstatic[m [32mvoid[m
go(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)
{
  std::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);
  [32mint[m* a = ints.data();
  [32mint[m n = ints.size();
  Ops ops;
  sort(a, n, &ops);
  [33mif[m (isVerbose) outArray(a, n);
}

[32mint[m
main([32mint[m argc, [32mchar[m* argv[]) {
  [33mif[m (argc < [31m3[m) {
    std::cerr << [31m"usage: "[m << argv[[31m0[m][45;15H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;
    std::exit([31m1[m);
  }
  [32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;
  [32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;
  [32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];[51;76H84,1[10C81%[25;1H[?25h[?1000l[?1002h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);
  SortP sort = getSort(algorithm);
  [32mint[m sizeArgsIndex = [31m3[m + nVerbose;[51;1H[K[51;76H84,1[10C86%[22;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mif[m (sizeArgsIndex == argc) {
    go(sort, filePath, isVerbose, -[31m1[m);
  }[51;76H[K[51;76H84,1[10C90%[19;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33melse[m {
    [33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[50;7H[32mint[m nRead = atoi(argv[i]);[51;76H[K[51;76H84,1[10C94%[16;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;7Hgo(sort, filePath, isVerbose, nRead);
    }
  }[51;76H[K[51;76H84,1[10C98%[13;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H}
[1m[34m~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H84,1[10CBot[10;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H84,1[10CBot[7;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H86,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H89,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H92,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H95,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H98,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H101,1[9CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H104,1-8[7CBot[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H107,1[9CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H110,1[9CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H113,1[9CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H116,1[9CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H119,1[9CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H122,1[9CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H122,1[9CBot[3;1H[?25h[?25l[1;50r[1;1H[2M[1;51r[49;1H[1m[34m~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H122,1[9CBot[1;1H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1;50r[1;1H[3L[1;51r[1;7Hgo(sort, filePath, isVerbose, nRead);
    }
  }[51;76H[K[51;76H122,1[9CBot[4;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33melse[m {
    [33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[3;7H[32mint[m nRead = atoi(argv[i]);[51;76H[K[51;76H122,1[9CBot[7;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mif[m (sizeArgsIndex == argc) {
    go(sort, filePath, isVerbose, -[31m1[m);
  }[51;76H[K[51;76H122,1[9CBot[10;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);
  SortP sort = getSort(algorithm);
  [32mint[m sizeArgsIndex = [31m3[m + nVerbose;[51;76H[K[51;76H122,1[9CBot[13;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;
  [32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;
  [32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];[51;76H[K[51;76H122,1[9CBot[16;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;15H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;
    std::exit([31m1[m);
  }[51;76H[K[51;76H122,1[9CBot[19;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1Hmain([32mint[m argc, [32mchar[m* argv[]) {
  [33mif[m (argc < [31m3[m) {
    std::cerr << [31m"usage: "[m << argv[[31m0[m][51;76H[K[51;76H122,1[9CBot[22;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H}

[32mint[m[51;76H[K[51;76H122,1[9CBot[25;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3HOps ops;
  sort(a, n, &ops);
  [33mif[m (isVerbose) outArray(a, n);[51;76H[K[51;76H122,1[9CBot[28;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);
  [32mint[m* a = ints.data();
  [32mint[m n = ints.size();[51;76H[K[51;76H122,1[9CBot[31;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m [32mvoid[m
go(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)
{[51;76H[K[51;76H122,1[9CBot[34;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::cout << std::endl;
}[51;76H[K[51;76H122,1[9CBot[37;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;
  }[51;76H[K[51;76H122,1[9CBot[40;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)
{[51;76H[K[51;76H122,1[9CBot[43;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H}

[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m[51;76H[K[51;76H122,1[9CBot[46;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::cerr << [31m"unknown algorithm "[m << name[2;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);[51;76H[K[51;76H122,1[9CBot[49;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;
  }[51;76H[K[51;76H115,1[9C97%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;[51;76H[K[51;76H112,1[9C93%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1HgetSort(std::string name)
{
  std::string names;[51;76H[K[51;76H109,1[9C88%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m *  if not valid.
 */[m
[32mstatic[m SortP[51;76H[K[51;76H106,1[9C84%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H};

[34m/** Return sorting function specified by name; terminate program[m[51;76H[K[51;76H103,1[9C80%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },
  { [31m"quickSort"[m, quickSort },[51;76H[K[51;76H100,1[9C76%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },
  { [31m"bubbleSort"[m, bubbleSort },[51;76H[K[51;76H97,1[10C72%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3HSortP sort;
};[51;76H[K[51;76H94,1[10C68%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m//map algorithm name to corresponding function[m
[32mstruct[m Algorithm {
  std::string name;[51;76H[K[51;76H91,1[10C63%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m//type for pointer to a sorting function [m
[33musing[m SortP = [32mvoid[m (*)([32mint[m a[], [32mint[m n, Ops* ops);[51;76H[K[51;76H88,0-1[8C59%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mreturn[m ints;
}[51;76H[K[51;76H85,1[10C55%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H}
    ints.push_back(v);
  }[45;1H[46m{[50;1H}[m[51;76H[K[51;76H82,1[10C51%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9Hstd::exit([31m1[m);[2;7H}[3;7H[33mbreak[m;[48;1H{[51;76H[K[51;76H79,1[10C47%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9Hstd::cerr << [31m"got eof on while reading "[m << filePath[2;19H<< [31m" after reading "[m << i << [31m" ints; expected "[m << n[3;19H<< std::endl;[51;76H[K[51;76H76,1[10C43%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5Hin >> v;
    [33mif[m (in.eof()) {[3;7H[33mif[m (n > [31m0[m) {[51;76H[K[51;76H73,1[10C38%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::vector<[32mint[m> ints;
  [33mfor[m ([32mint[m i = [31m0[m; n < [31m0[m || i < n; ++i) {
    [32mint[m v;[51;76H[K[51;76H70,1[10C34%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[2;33H[31m": "[m + std::strerror(errno));
  }[51;76H[K[51;76H67,1[10C30%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mif[m (!isStdin) file.open(filePath);
  std::istream& in = (isStdin) ? std::cin : file;
  [33mif[m (!in) {[51;76H[K[51;76H64,1[10C26%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream file;[51;76H[K[51;76H61,1[10C22%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath, [32mint[m n)[51;76H[K[51;76H58,1[10C18%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.[m[51;76H[K[51;76H55,1[10C13%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[35m#include [m[31m"ops.hh"[m
[35m#include [m[31m"sorts.hh"[m[51;76H[K[51;76H52,0-1[9C9%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m[51;76H[K[51;76H49,1[11C5%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<vector>[m[51;76H[K[51;76H46,0-1[9C1%[45;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },[51;76H[K[51;76H46,0-1[9C5%[42;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },[51;76H[K[51;76H46,0-1[9C9%[39;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H46,0-1[8C13%[36;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.
 */[m[51;76H[K[51;76H46,0-1[8C18%[33;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[32mstatic[m SortP
getSort(std::string name)
{[51;76H[K[51;76H46,0-1[8C22%[30;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::string names;
  [33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;[51;76H[K[51;76H46,0-1[8C26%[27;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;[51;76H[K[51;76H46,0-1[8C30%[24;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  std::cerr << [31m"unknown algorithm "[m << name[50;13H<< [31m" must be one of "[m << names << std::endl;[51;76H[K[51;76H46,0-1[8C34%[21;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::exit([31m1[m);
}[51;76H[K[51;76H46,0-1[8C38%[18;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)[51;76H[K[51;76H46,0-1[8C43%[15;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;[51;76H[K[51;76H46,0-1[8C47%[12;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  std::cout << std::endl;
}[51;76H[K[51;76H46,0-1[8C51%[9;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mstatic[m [32mvoid[m
go(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)[51;76H[K[51;76H46,0-1[8C55%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H{
  std::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);
  [32mint[m* a = ints.data();[51;76H[K[51;76H49,1[10C59%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mint[m n = ints.size();
  Ops ops;
  sort(a, n, &ops);[51;76H[K[51;76H52,0-1[8C63%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mif[m (isVerbose) outArray(a, n);
}[51;76H[K[51;76H55,1[10C68%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[32mint[m
main([32mint[m argc, [32mchar[m* argv[]) {
  [33mif[m (argc < [31m3[m) {[51;76H[K[51;76H58,1[10C72%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hstd::cerr << [31m"usage: "[m << argv[[31m0[m][49;15H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;
    std::exit([31m1[m);[51;76H[K[51;76H61,1[10C76%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  [32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;
  [32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;[51;76H[K[51;76H64,1[10C80%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];
  [32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);
  SortP sort = getSort(algorithm);[51;76H[K[51;76H67,1[10C84%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mint[m sizeArgsIndex = [31m3[m + nVerbose;
  [33mif[m (sizeArgsIndex == argc) {
    go(sort, filePath, isVerbose, -[31m1[m);[51;76H[K[51;76H70,1[10C88%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  [33melse[m {
    [33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[51;76H[K[51;76H73,1[10C93%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;7H[32mint[m nRead = atoi(argv[i]);[49;7Hgo(sort, filePath, isVerbose, nRead);
    }[51;76H[K[51;76H76,1[10C97%[6;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;[51;76H[K[51;76H76,1[10C93%[9;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;7H[32mint[m nRead = atoi(argv[i]);[49;7Hgo(sort, filePath, isVerbose, nRead);
    }[51;76H[K[51;76H76,1[10C97%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
}
[1m[34m~                                                                                            [m[51;76H[K[51;76H79,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;1H[46m{[11;1H}[m[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H82,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;1H{[8;1H}[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H85,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H88,0-1[8CBot[6;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)
{[51;76H[K[51;76H88,0-1[8CBot[9;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H}

[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m[51;76H[K[51;76H88,0-1[8CBot[12;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::cerr << [31m"unknown algorithm "[m << name[2;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);[51;76H[K[51;76H88,0-1[8CBot[15;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;
  }[51;76H[K[51;76H88,0-1[8C97%[18;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;[51;76H[K[51;76H88,0-1[8C93%[21;1H[?25h[?25l[51;66H^[[21;1H[51;68H[[21;1H[51;66H   [21;1H[1;50r[1;1H[3L[1;51r[1;1HgetSort(std::string name)
{
  std::string names;[51;76H[K[51;76H88,0-1[8C88%[24;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m *  if not valid.
 */[m
[32mstatic[m SortP[51;76H[K[51;76H88,0-1[8C84%[27;1H[?25h[?25l[51;76H95,10 [34;10H[?25h[?25l[51;66H2[33;23H
[7m  Ops ops;[m[51;1H[1m-- VISUAL --[m[51;66H[K[51;66H2[33;23H[51;76H94,23[9C84%[33;23H[?25h[?25l[51;66H [33;23H[?25h[?25l[51;66H2[33;23H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[51;66H3[32;24H
[7m  [m[7m[32mint[m[7m n = ints.size(); [m[51;77H3,24[32;24H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[51;66H [32;23H
  [32mint[m n = ints.size();[33;23H[K[34;1H  Ops ops;[51;1H[K[51;76H93,23[9C84%[32;23H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mint[m sizeArgsIndex = [31m3[m + nVerbose;
  [33mif[m (sizeArgsIndex == argc) {
    go(sort, filePath, isVerbose, -[31m1[m);[51;76H[K[51;76H93,23[9C88%[29;23H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  [33melse[m {
    [33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[51;76H[K[51;76H93,23[9C93%[26;23H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;7H[32mint[m nRead = atoi(argv[i]);[49;7Hgo(sort, filePath, isVerbose, nRead);
    }[51;76H[K[51;76H93,23[9C97%[23;23H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
}
[1m[34m~                                                                                            [m[51;76H[K[51;76H93,23[9CBot[20;23H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H93,23[9CBot[17;23H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::cerr << [31m"unknown algorithm "[m << name[2;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);[51;76H[K[51;76H93,23[9CBot[20;23H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;
  }[51;76H[K[51;76H93,23[9C97%[23;23H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;[51;76H[K[51;76H93,23[9C93%[26;23H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1HgetSort(std::string name)
{
  std::string names;[51;76H[K[51;76H93,23[9C88%[29;23H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m *  if not valid.
 */[m
[32mstatic[m SortP[51;76H[K[51;76H93,23[9C84%[32;23H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H};

[34m/** Return sorting function specified by name; terminate program[m[51;76H[K[51;76H93,23[9C80%[35;23H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },
  { [31m"quickSort"[m, quickSort },[51;76H[K[51;76H93,23[9C76%[38;23H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },
  { [31m"bubbleSort"[m, bubbleSort },[51;76H[K[51;76H93,23[9C72%[41;23H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3HSortP sort;
};[51;76H[K[51;76H93,23[9C68%[44;23H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m//map algorithm name to corresponding function[m
[32mstruct[m Algorithm {
  std::string name;[51;76H[K[51;76H91,1[10C63%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m//type for pointer to a sorting function [m
[33musing[m SortP = [32mvoid[m (*)([32mint[m a[], [32mint[m n, Ops* ops);[51;76H[K[51;76H88,0-1[8C59%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mreturn[m ints;
}[43;31H[46m{

[m  [46m}[m[51;76H[K[51;76H85,3[10C55%[45;3H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H}
    ints.push_back(v);
  }[45;1H[46m{[m[46;31H{

  }

[46m}[m[51;76H[K[51;76H82,1[10C51%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9Hstd::exit([31m1[m);[2;7H}[3;7H[33mbreak[m;[48;1H{[51;76H[K[51;76H79,56[9C47%[45;56H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9Hstd::cerr << [31m"got eof on while reading "[m << filePath[2;19H<< [31m" after reading "[m << i << [31m" ints; expected "[m << n[3;19H<< std::endl;[51;76H[K[51;76H76,15[9C43%[45;15H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5Hin >> v;
    [33mif[m (in.eof()) {[3;7H[33mif[m (n > [31m0[m) {[51;76H[K[51;76H73,4[10C38%[45;4H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::vector<[32mint[m> ints;
  [33mfor[m ([32mint[m i = [31m0[m; n < [31m0[m || i < n; ++i) {
    [32mint[m v;[51;76H[K[51;76H70,51[9C34%[45;51H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[2;33H[31m": "[m + std::strerror(errno));
  }[51;76H[K[51;76H67,20[9C30%[45;20H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mif[m (!isStdin) file.open(filePath);
  std::istream& in = (isStdin) ? std::cin : file;
  [33mif[m (!in) {[51;76H[K[51;76H64,12[9C26%[45;12H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream file;[51;76H[K[51;76H61,56[9C22%[45;56H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath, [32mint[m n)[51;76H[K[51;76H58,29[9C18%[45;29H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.[m[51;76H[K[51;76H55,31[9C13%[45;31H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[35m#include [m[31m"ops.hh"[m
[35m#include [m[31m"sorts.hh"[m[51;76H[K[51;76H52,0-1[9C9%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m[51;76H[K[51;76H49,19[10C5%[45;19H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<vector>[m[51;76H[K[51;76H46,0-1[9C1%[45;1H[?25h[?25l[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m<fstream>[m[51;76H[K[51;76H45,49[9CTop[45;49H[?25h[?25l[?25h[?25l[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H};

[32mstatic[m Algorithm algorithms[] = {[51;76H[K[51;76H45,49[10C4%[42;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"insertionSort"[m, insertionSort },
  { [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },[51;76H[K[51;76H45,49[10C8%[39;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"mergeSort"[m, mergeSort },
  { [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H45,49[9C12%[36;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.[m[51;76H[K[51;76H45,49[9C16%[33;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m */[m
[32mstatic[m SortP
getSort(std::string name)[51;76H[K[51;76H45,49[9C20%[30;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H{
  std::string names;
  [33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {[51;76H[K[51;76H45,49[9C25%[27;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;[51;76H[K[51;76H45,49[9C29%[24;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hnames += algName;
  }
  std::cerr << [31m"unknown algorithm "[m << name[51;76H[K[51;76H45,49[9C33%[21;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);
}[51;76H[K[51;76H45,49[9C37%[18;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m[51;76H[K[51;76H45,49[9C41%[15;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1HoutArray([32mint[m a[], [32mint[m n)
{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[51;76H[K[51;76H45,49[9C45%[12;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hstd::cout << a[i] << [31m" "[m;
  }
  std::cout << std::endl;[51;76H[K[51;76H45,49[9C50%[9;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H}

[32mstatic[m [32mvoid[m[51;76H[K[51;76H45,49[9C54%[6;49H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;18H[46m{


}[m[48;1Hgo(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)
{
  std::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);[51;76H[K[51;76H48,18[9C58%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;18H{


}[48;3H[32mint[m* a = ints.data();
  [32mint[m n = ints.size();
  Ops ops;[51;76H[K[51;76H51,2[10C62%[6;2H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hsort(a, n, &ops);
  [33mif[m (isVerbose) outArray(a, n);
}[51;76H[K[51;76H54,37[9C66%[6;37H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mint[m
main([32mint[m argc, [32mchar[m* argv[]) {[51;76H[K[51;76H57,29[9C70%[6;29H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mif[m (argc < [31m3[m) {
    std::cerr << [31m"usage: "[m << argv[[31m0[m][50;15H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;[51;76H[K[51;76H60,0-1[8C75%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hstd::exit([31m1[m);
  }
  [32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;[51;76H[K[51;76H63,3[10C79%[6;3H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;1H[46m{[17;1H}[m[48;3H[32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;
  [32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];
  [32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);[51;76H[K[51;76H66,1[10C83%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;1H{[14;1H}[48;3HSortP sort = getSort(algorithm);
  [32mint[m sizeArgsIndex = [31m3[m + nVerbose;
  [33mif[m (sizeArgsIndex == argc) {[51;76H[K[51;76H69,51[9C87%[6;51H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hgo(sort, filePath, isVerbose, -[31m1[m);
  }
  [33melse[m {[51;76H[K[51;76H72,21[9C91%[6;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[49;7H[32mint[m nRead = atoi(argv[i]);[50;7Hgo(sort, filePath, isVerbose, nRead);[51;76H[K[51;76H75,49-56      95%[6;56H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H}
  }
}[51;76H[K[51;76H78,0-1[8CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;9H[46m([14C)[m[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H81,24[9CBot[6;24H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;9H([14C)[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H84,29[9CBot[6;29H[?25h[?25l[1;50r[1;1H[3M[1;51r[1;1H[46m{[6;1H}[m[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H87,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;1H}[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H90,56[9CBot[6;56H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;[51;76H[K[51;76H90,56[9CBot[9;56H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)[51;76H[K[51;76H90,56[9CBot[12;56H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::exit([31m1[m);
}[51;76H[K[51;76H90,56[9CBot[15;56H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H}
  std::cerr << [31m"unknown algorithm "[m << name[3;13H<< [31m" must be one of "[m << names << std::endl;[51;76H[K[51;76H90,56[9CBot[18;56H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;[51;76H[K[51;76H90,56[9C95%[21;56H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H}
  }
}[51;76H[K[51;76H90,56[9CBot[18;56H[?25h[?25l[51;77H5,6 [23;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;[51;76H[K[51;76H95,6[10C95%[26;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::string names;
  [33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;[51;76H[K[51;76H95,6[10C91%[29;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m SortP
getSort(std::string name)
{[51;76H[K[51;76H95,6[10C87%[32;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.
 */[m[51;76H[K[51;76H95,6[10C83%[35;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H95,6[10C79%[38;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },[51;76H[K[51;76H95,6[10C75%[41;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },[51;76H[K[51;76H95,6[10C70%[44;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::string name;
  SortP sort;
};[51;76H[K[51;76H93,6[10C66%[45;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[34m//map algorithm name to corresponding function[m
[32mstruct[m Algorithm {[51;76H[K[51;76H90,6[10C62%[45;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[34m//type for pointer to a sorting function [m
[33musing[m SortP = [32mvoid[m (*)([32mint[m a[], [32mint[m n, Ops* ops);[40;1H[46m{[45;1H}[m[51;76H[K[51;76H87,1[10C58%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H}
  [33mreturn[m ints;
}[43;1H{[48;1H}[51;76H[K[51;76H84,6[10C54%[45;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;7H[33mbreak[m;
    }
    ints.push_back(v);[51;76H[K[51;76H81,6[10C50%[45;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;19H<< std::endl;[2;9Hstd::exit([31m1[m);[3;7H}[51;76H[K[51;76H78,0-1[8C45%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;7H[33mif[m (n > [31m0[m) {[2;9Hstd::cerr << [31m"got eof on while reading "[m << filePath[3;19H<< [31m" after reading "[m << i << [31m" ints; expected "[m << n[51;76H[K[51;76H75,1-8[8C41%[45;8H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[32mint[m v;
    in >> v;
    [33mif[m (in.eof()) {[51;76H[K[51;76H72,6[10C37%[45;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H}
  std::vector<[32mint[m> ints;
  [33mfor[m ([32mint[m i = [31m0[m; n < [31m0[m || i < n; ++i) {[51;76H[K[51;76H69,6[10C33%[45;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mif[m (!in) {
    [33mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[3;33H[31m": "[m + std::strerror(errno));[51;76H[K[51;76H66,1[10C29%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::ifstream file;
  [33mif[m (!isStdin) file.open(filePath);
  std::istream& in = (isStdin) ? std::cin : file;[51;76H[K[51;76H63,3[10C25%[45;3H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1HreadIntsFromFile([32mconst[m std::string filePath, [32mint[m n)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;[51;76H[K[51;76H60,0-1[8C20%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.
 */[m
[32mstatic[m std::vector<[32mint[m>[51;76H[K[51;76H57,6[10C16%[45;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m"sorts.hh"[m

[34m/** Return vector of n int's read from filePath into a[].  If filePath[m[51;76H[K[51;76H54,6[10C12%[45;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<cstring>[m

[35m#include [m[31m"ops.hh"[m[51;76H[K[51;76H51,2[11C8%[45;2H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m[51;76H[K[51;76H48,6[11C4%[45;6H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<string>[m[51;76H[K[51;76H45,6[10CTop[45;6H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[51;76H10,19[10;19H[?25h[?25l[51;66Hi[10;19H[51;66H [10;19H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H10,19[9CTop[10;19H[?25h[?25l[51;79H20[10;20H[?25h[?25l[11;50r[11;1H[L[1;51r[51;76H[K[51;76H11,1[10CTop[11;1H[?25h[?25l#[51;79H2[11;2H[?25h[?25li[51;79H3[11;3H[?25h[?25ln[51;79H4[11;4H[?25h[?25ll[51;79H5[11;5H[?25h[?25lc[51;79H6[11;6H[?25h[?25lu[51;79H7[11;7H[?25h[?25ld[51;79H8[11;8H[?25h[?25le[51;79H9[11;9H[?25h[?25l[51;79H10[11;10H[?25h[?25l[51;79H9 [11;9H[?25h[?25l[11;8H[K[51;79H8[11;8H[?25h[?25l[11;7H[K[51;79H7[11;7H[?25h[?25l[11;6H[K[51;79H6[11;6H[?25h[?25l[11;5H[K[51;79H5[11;5H[?25h[?25l[11;4H[K[51;79H4[11;4H[?25h[?25lc[51;79H5[11;5H[?25h[?25ll[51;79H6[11;6H[?25h[?25lu[51;79H7[11;7H[?25h[?25ld[51;79H8[11;8H[?25h[?25le[51;79H9[11;9H[?25h[?25l[51;79H10[11;10H[?25h[?25l[35m#include [m[31m"

/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[1C-[1C[31m read from stdin.  If n < 0, read entire contents of file.[m
 [1m[37m[41m*/[m[51;80H1[11;11H[?25h[?25l[31mc[m[51;80H2[11;12H[?25h[?25l[31mo[m[51;80H3[11;13H[?25h[?25l[31mu[m[51;80H4[11;14H[?25h[?25l[31mn[m[51;80H5[11;15H[?25h[?25l[31mt[m[51;80H6[11;16H[?25h[?25l[31me[m[51;80H7[11;17H[?25h[?25l[31mr[m[51;80H8[11;18H[?25h[?25l[31m.[m[51;80H9[11;19H[?25h[?25l[31mh[m[51;79H20[11;20H[?25h[?25l[31mh[m[51;80H1[11;21H[?25h[?25l[31m"[m

[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[1C[31m-[m[1C[34m read from stdin.  If n < [1C, read entire contents of file.
 */[m[51;80H2[11;22H[?25h[51;1H[K[11;21H[?25l[51;66H^[[11;21H[51;66H  [11;22H[51;76H11,21[9CTop[11;21H[?25h[?25l[51;66H:[11;21H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"main.cc" 123L, 3038C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ ls
counter.cc  counter.o  main.cc	ops.cc	ops.o	  sorts.hh
counter.hh  main       main.o	ops.hh	sorts.cc  sorts.o
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ rm -f counter [K.cc
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ rm -f counter.ccls[Kvim main.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 123L, 3038C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"ops.hh"[m
[35m#include [m[31m"sorts.hh"[m
[35m#include [m[31m"counter.hh"[m

[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath, [32mint[m n)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream file;
  [33mif[m (!isStdin) file.open(filePath);
  std::istream& in = (isStdin) ? std::cin : file;
  [33mif[m (!in) {
    [33mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[25;33H[31m": "[m + std::strerror(errno));
  }
  std::vector<[32mint[m> ints;
  [33mfor[m ([32mint[m i = [31m0[m; n < [31m0[m || i < n; ++i) {
    [32mint[m v;
    in >> v;
    [33mif[m (in.eof()) {[32;7H[33mif[m (n > [31m0[m) {[33;9Hstd::cerr << [31m"got eof on while reading "[m << filePath[34;19H<< [31m" after reading "[m << i << [31m" ints; expected "[m << n[35;19H<< std::endl;[36;9Hstd::exit([31m1[m);[37;7H}[38;7H[33mbreak[m;
    }
    ints.push_back(v);
  }
  [33mreturn[m ints;
}

[34m//type for pointer to a sorting function [m
[33musing[m SortP = [32mvoid[m (*)([32mint[m a[], [32mint[m n, Ops* ops);

[34m//map algorithm name to corresponding function[m
[32mstruct[m Algorithm {
  std::string name;[51;76H11,21[9CTop[11;21H[?25h[?1000l[?1002h[?25l[1;50r[1;1H[3M[1;51r[48;3HSortP sort;
};[51;1H[K[51;76H11,21[10C4%[8;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },
  { [31m"bubbleSort"[m, bubbleSort },[51;76H[K[51;76H12,0-1[9C8%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },
  { [31m"quickSort"[m, quickSort },[51;76H[K[51;76H15,3[10C12%[6;3H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;1H[46m{[31;1H}[m[48;1H};

[34m/** Return sorting function specified by name; terminate program[m[51;76H[K[51;76H18,1[10C16%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;1H{[28;1H}[48;1H[34m *  if not valid.
 */[m
[32mstatic[m SortP[51;76H[K[51;76H21,21[9C20%[6;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1HgetSort(std::string name)
{
  std::string names;[51;76H[K[51;76H24,21[9C24%[6;21H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath, [32mint[m n)
{[51;76H[K[51;76H24,21[9C20%[9;21H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.
 */[m[51;76H[K[51;76H24,21[9C16%[12;21H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m"sorts.hh"[m
[35m#include [m[31m"counter.hh"[m[51;76H[K[51;76H24,21[9C12%[15;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H};

[34m/** Return sorting function specified by name; terminate program[m[51;76H[K[51;76H24,21[9C16%[12;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m *  if not valid.
 */[m
[32mstatic[m SortP[51;76H[K[51;76H24,21[9C20%[9;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1HgetSort(std::string name)
{
  std::string names;[51;76H[K[51;76H24,21[9C24%[6;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;[51;76H[K[51;76H27,21[9C28%[6;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;
  }[51;76H[K[51;76H30,12[9C32%[6;12H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::cerr << [31m"unknown algorithm "[m << name[49;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);[51;76H[K[51;76H33,14-21      36%[6;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H}

[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m[51;76H[K[51;76H36,14-21      41%[6;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)
{[51;76H[K[51;76H39,5[10C45%[6;5H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;
  }[51;76H[K[51;76H42,14[9C49%[6;14H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::cout << std::endl;
}[51;76H[K[51;76H45,21[9C53%[6;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[32mstatic[m [32mvoid[m
go(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)
{[51;76H[K[51;76H48,21[9C57%[6;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);
  [32mint[m* a = ints.data();
  [32mint[m n = ints.size();[51;76H[K[51;76H51,13[9C61%[6;13H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3HOps ops;
  sort(a, n, &ops);
  [33mif[m (isVerbose) outArray(a, n);[51;76H[K[51;76H54,21[9C65%[6;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H}

[32mint[m[51;76H[K[51;76H57,21[9C69%[6;21H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1Hmain([32mint[m argc, [32mchar[m* argv[]) {
  [33mif[m (argc < [31m3[m) {
    std::cerr << [31m"usage: "[m << argv[[31m0[m][51;76H[K[51;76H60,2[10C73%[6;2H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;15H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;
    std::exit([31m1[m);
  }[51;76H[K[51;76H63,17[9C78%[6;17H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;
  [32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;
  [32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];[51;76H[K[51;76H66,21[9C82%[6;21H[?25h[?25l[51;76H96,6 [36;6H[?25h[?25l[51;66Hi[36;6H[51;66H [36;6H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H96,6[10C82%[36;6H[?25h[?25l ops;[36;10H[K[51;79H5[36;5H[?25h[?25l ops;[36;9H[K[51;79H4[36;4H[?25h[?25l ops;[36;8H[K[51;79H3[36;3H[?25h[?25lC ops;[51;79H4[36;4H[?25h[?25lo ops;[51;79H5[36;5H[?25h[?25lu ops;[51;79H6[36;6H[?25h[?25ln ops;[51;79H7[36;7H[?25h[?25lt ops;[51;79H8[36;8H[?25h[?25le ops;[51;79H9[36;9H[?25h[?25lr ops;[51;79H10[36;10H[?25h[51;1H[K[36;9H[?25l[51;66H^[[36;9H[51;66H  [36;10H[51;76H96,9[10C82%[36;9H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);
  SortP sort = getSort(algorithm);
  [32mint[m sizeArgsIndex = [31m3[m + nVerbose;[51;76H[K[51;76H96,9[10C86%[33;9H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mif[m (sizeArgsIndex == argc) {
    go(sort, filePath, isVerbose, -[31m1[m);
  }[51;76H[K[51;76H96,9[10C90%[30;9H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33melse[m {
    [33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[50;7H[32mint[m nRead = atoi(argv[i]);[51;76H[K[51;76H96,9[10C94%[27;9H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;7Hgo(sort, filePath, isVerbose, nRead);
    }
  }[51;76H[K[51;76H96,9[10C98%[24;9H[?25h[?25l[51;79H10[24;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;[51;76H[K[51;76H96,10[9C94%[27;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H{
  std::string names;
  [33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {[51;76H[K[51;76H96,10[9C90%[30;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m */[m
[32mstatic[m SortP
getSort(std::string name)[51;76H[K[51;76H96,10[9C86%[33;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.[m[51;76H[K[51;76H96,10[9C82%[36;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"mergeSort"[m, mergeSort },
  { [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H96,10[9C78%[39;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"insertionSort"[m, insertionSort },
  { [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },[51;76H[K[51;76H96,10[9C73%[42;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H};

[32mstatic[m Algorithm algorithms[] = {[51;76H[K[51;76H96,10[9C69%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstruct[m Algorithm {
  std::string name;
  SortP sort;[51;76H[K[51;76H93,10[9C65%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[33musing[m SortP = [32mvoid[m (*)([32mint[m a[], [32mint[m n, Ops* ops);

[34m//map algorithm name to corresponding function[m[51;76H[K[51;76H90,10[9C61%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H}

[34m//type for pointer to a sorting function [m[51;76H[K[51;76H87,10[9C57%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5Hints.push_back(v);
  }
  [33mreturn[m ints;[51;76H[K[51;76H84,10[9C53%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;7H}[2;7H[33mbreak[m;
    }[51;76H[K[51;76H81,10[9C49%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;19H<< [31m" after reading "[m << i << [31m" ints; expected "[m << n[2;19H<< std::endl;[3;9Hstd::exit([31m1[m);[34;1H[46m{[45;1H}[m[51;76H[K[51;76H78,1[10C45%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mif[m (in.eof()) {[2;7H[33mif[m (n > [31m0[m) {[3;9Hstd::cerr << [31m"got eof on while reading "[m << filePath[37;1H{[48;1H}[51;76H[K[51;76H75,10[9C41%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mfor[m ([32mint[m i = [31m0[m; n < [31m0[m || i < n; ++i) {
    [32mint[m v;
    in >> v;[51;76H[K[51;76H72,10[9C36%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;33H[31m": "[m + std::strerror(errno));
  }
  std::vector<[32mint[m> ints;[51;76H[K[51;76H69,10[9C32%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::istream& in = (isStdin) ? std::cin : file;
  [33mif[m (!in) {
    [33mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[51;76H[K[51;76H66,10[9C28%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream file;
  [33mif[m (!isStdin) file.open(filePath);[51;76H[K[51;76H63,10[9C24%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath, [32mint[m n)
{[51;76H[K[51;76H60,2[10C20%[45;2H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.
 */[m[51;76H[K[51;76H57,10[9C16%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m"sorts.hh"[m
[35m#include [m[31m"counter.hh"[m[51;76H[K[51;76H54,10[9C12%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<cstring>[m

[35m#include [m[31m"ops.hh"[m[51;76H[K[51;76H51,10[10C8%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m[51;76H[K[51;76H48,10[10C4%[45;10H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<string>[m[51;76H[K[51;76H45,10[9CTop[45;10H[?25h[?25l[51;76H15,3 [15;3H[?25h[?25l[51;66Hi[15;3H[51;66H [15;3H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H15,3[10CTop[15;3H[?25h[?25l[51;79H4[15;4H[?25h[?25l[16;50r[16;1H[L[1;51r[51;76H[K[51;76H16,1[10CTop[16;1H[?25h[?25lC[51;79H2[16;2H[?25h[?25lo[51;79H3[16;3H[?25h[?25lu[51;79H4[16;4H[?25h[?25ln[51;79H5[16;5H[?25h[?25lt[51;79H6[16;6H[?25h[?25le[51;79H7[16;7H[?25h[?25lr[51;79H8[16;8H[?25h[?25l[51;79H9[16;9H[?25h[?25lo[51;79H10[16;10H[?25h[?25lp[51;80H1[16;11H[?25h[?25ls[51;80H2[16;12H[?25h[?25l;[51;80H3[16;13H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::string name;
  SortP sort;
};[51;76H[K[51;76H16,13[10C4%[13;13H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },[51;76H[K[51;76H16,13[10C8%[10;13H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },[51;76H[K[51;76H16,13[9C12%[7;13H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H18,13[9C16%[6;13H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.
 */[m[51;76H[K[51;76H21,13[9C20%[6;13H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[32mstatic[m SortP
getSort(std::string name)
{[51;76H[K[51;76H24,13[9C24%[6;13H[[51;66H^[[6;13H[51;68H[[6;13H[51;66H   [6;13H [1;50r[1;1H[3M[1;51r[48;3Hstd::string names;
  [33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;[51;76H[K[51;76H27,4[10C28%[3;12H[46m{[6;3H}[?25h[?25l[1;50r[m[1;1H[3M[1;51r[48;5H[33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;[51;76H[K[51;76H30,11[9C32%[3;3H}[6;11H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  std::cerr << [31m"unknown algorithm "[m << name[50;13H<< [31m" must be one of "[m << names << std::endl;[51;76H[K[51;76H33,13[9C36%[6;13H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::exit([31m1[m);
}[51;76H[K[51;76H36,2-9[8C40%[6;9H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)[51;76H[K[51;76H39,13[9C44%[6;13H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;[51;76H[K[51;76H42,4[10C48%[6;4H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  std::cout << std::endl;
}[51;76H[K[51;76H45,1[10C52%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mstatic[m [32mvoid[m
go(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)[51;76H[K[51;76H48,1[10C56%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H{
  std::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);
  [32mint[m* a = ints.data();[51;76H[K[51;76H51,13[9C60%[6;13H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mint[m n = ints.size();
  Counter ops;
  sort(a, n, &ops);[51;76H[K[51;76H54,1[10C64%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mif[m (isVerbose) outArray(a, n);
}[51;76H[K[51;76H57,13[9C68%[6;13H[?25h[?25l[1;50r[1;1H[2M[1;51r[49;1H[32mint[m
main([32mint[m argc, [32mchar[m* argv[]) {[51;76H[K[51;76H98,15[9C71%[45;15H[?25h[?25l[51;77H7[44;15H[?25h[?25l[44;14H[K[51;80H4[44;14H[?25h[?25l[44;13H[K[51;80H3[44;13H[?25h[?25l[44;12H[K[51;80H2[44;12H[?25h[?25l[44;11H[K[51;80H1[44;11H[?25h[?25l[51;80H0[44;10H[?25h[?25l[44;9H[K[51;79H9 [44;9H[?25h[?25l[44;8H[K[51;79H8[44;8H[?25h[?25l[44;7H[K[51;79H7[44;7H[?25h[?25l[44;6H[K[51;79H6[44;6H[?25h[?25l[44;5H[K[51;79H5[44;5H[?25h[?25l[44;4H[K[51;79H4[44;4H[?25h[?25l[44;3H[K[51;79H3[44;3H[?25h[?25l[51;79H2[44;2H[?25h[?25l[51;79H1[44;1H[?25h[?25l[43;50r[50;1H
[1;51r[43;3H[32mint[m n = ints.size();[50;3H[33mif[m (argc < [31m3[m) {[51;76H[K[51;76H96,23[9C72%[43;23H[?25h[?25l[51;76H75,5 [22;5H[?25h[?25l[51;77H6,44[23;44H[?25h[?25l[51;77H7,44-51[24;51H[?25h[?25l[51;77H8,16   [25;16H[?25h[?25l[15;1H[46m{[26;1H}[m[51;77H9,2 [26;2H[?25h[?25l[15;1H{[26;1H}[51;76H80,1[27;1H[?25h[?25l[51;77H1,51[28;51H[?25h[?25l[51;77H2,12[29;12H[?25h[?25l[30;9H[46m([14C)[m[51;77H3,25[30;25H[?25h[?25l[30;9H([14C)
[46m{[36;1H}[m[51;77H4,2 [31;2H[?25h[?25l{[32;31H[46m{

[m  [46m}[m

}[51;77H5,32[32;32H[?25h[?25l{

  }[51;77H6,30[33;30H[?25h[?25l[32;31H[46m{

[m  [46m}[m[51;77H7,4 [34;4H[?25h[?25l[32;31H{

  }[51;77H8,26[35;26H[?25h[?25l[31;1H[46m{[36;1H}[m[51;77H9,2 [36;2H[?25h[?25l[31;1H{[36;1H}[51;76H90,1[37;1H[?25h[?25l[51;77H1,12[38;12H[?25h[?25l[51;77H2,51[39;51H[?25h[?25l
[46m{[46;1H}[m[51;77H3,2 [40;2H[?25h[?25l{[46;1H}[51;77H4,51[41;51H[?25h[?25l[51;77H5,24[42;24H[?25h[?25l[51;77H6,23[43;23H[?25h[?25l[51;77H7,20[44;20H[?25h[?25l[51;77H8,33[45;33H[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hstd::cerr << [31m"usage: "[m << argv[[31m0[m][51;76H[K[51;76H99,2[10C73%[39;1H[46m{[45;1H}[?25h[?25l[1;50r[m[50;1H
[1;51r[50;15H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;[51;76H[K[51;76H100,1[9C75%[38;1H{[44;1H}
[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hstd::exit([31m1[m);[51;76H[K[51;76H101,4[9C76%[45;4H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H}[51;76H[K[51;76H102,31[8C78%[45;31H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;[51;76H[K[51;76H103,18[8C79%[45;17H[46m{[49;3H}[45;18H[?25h[?25l[1;50r[m[50;1H
[1;51r[50;3H[32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;[51;76H[K[51;76H104,38[8C80%[44;17H{[45;35H[46m[[1C][m[48;3H}[45;38H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];[51;76H[K[51;76H105,44-51     82%[44;35H[[1C][45;51H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);[51;76H[K[51;76H106,18[8C83%[45;18H[?25h[?25l[1;50r[50;1H
[1;51r[50;3HSortP sort = getSort(algorithm);[51;76H[K[51;76H107,4[9C84%[41;17H[46m{[45;3H}[?25h[?25l[1;50r[m[50;1H
[1;51r[50;3H[32mint[m sizeArgsIndex = [31m3[m + nVerbose;[51;76H[K[51;76H108,51[8C86%[40;17H{[44;3H}[45;51H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[33mif[m (sizeArgsIndex == argc) {[51;76H[K[51;76H109,39[8C87%[45;39H[?25h[?25l[1;50r[50;1H
[1;51r[50;5Hgo(sort, filePath, isVerbose, -[31m1[m);[51;76H[K[51;76H110,46[8C89%[45;46H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H}[51;76H[K[51;76H111,50[8C90%[45;50H[?25h[?25l[1;50r[50;1H
[1;51r[50;3H[33melse[m {[51;76H[K[51;76H112,35[8C91%[45;35H[?25h[?25l[1;50r[50;1H
[1;51r[50;5H[33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[51;76H[K[51;76H113,36[8C93%[45;36H[?25h[?25l[1;50r[50;1H
[1;51r[50;7H[32mint[m nRead = atoi(argv[i]);[51;76H[K[51;76H114,31[8C94%[45;30H[46m{

[m  [46m}[45;31H[?25h[?25l[1;50r[m[50;1H
[1;51r[50;7Hgo(sort, filePath, isVerbose, nRead);[51;76H[K[51;76H115,39[8C95%[44;30H{

  }[45;39H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H}
  }
}[51;76H[K[51;76H115,39[8CBot[42;39H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H115,39[8CBot[39;39H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H115,39[8CBot[36;39H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H115,39[8CBot[33;39H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H115,39[8CBot[30;39H[?25h[?25l[51;77H20,44[35;44H[?25h[?25l[36;50r[36;1H[L[1;51r[51;76H[K[51;76H121,7[9CBot[36;7H[?25h[?25ls[51;80H8[36;8H[?25h[?25lt[51;80H9[36;9H[?25h[?25ld[51;80H10[36;10H[?25h[?25l[51;77H03,3 [18;3H[?25h[?25l[19;50r[19;1H[L[1;51r[18;3H[K[19;9H[33mif[m (argc < [31m3[m) {[51;76H[K[51;76H104,2-9[7CBot[19;9H[?25h[?25l[33mif[m (argc < [31m3[m) {[19;16H[K[51;80H1  [19;1H[?25h[?25l        [33mif[m (argc < [31m3[m) {[51;80H2-9[19;9H[?25h[?25l[33mif[m (argc < [31m3[m) {[19;16H[K[51;80H1  [19;1H[?25h[?25l [33mif[m (argc < [31m3[m) {[51;80H2[19;2H[?25h[?25l [33mif[m (argc < [31m3[m) {[51;80H3[19;3H[?25h[?25l [33mif[m (argc < [31m3[m) {[51;80H4[19;4H[?25h[?25l [33mif[m (argc < [31m3[m) {[51;80H5[19;5H[?25h[?25l[51;78H3,3[18;3H[?25h[?25l[51;78H4,5[19;5H[?25h[?25l[51;80H4[19;4H[?25h[?25l[51;80H5[19;5H[?25h[?25l[33mif[m (argc < [31m3[m) {[19;19H[K[51;80H4[19;4H[?25h[?25l[51;78H5[20;4H[?25h[?25lstd::cerr << [31m"usage: "[m << argv[[31m0[m][20;37H[K[51;80H3[20;3H[?25h[?25l[51;78H6,1[21;1H[?25h[?25l[20;47H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m <<<[21;1H std::endl;[21;15H[K[20;34H[46m[[1C][m[56C<<[21;1H [51;78H5,37[20;37H[?25h[?25l[20;47H[K[21;2H          << [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;[20;34H[[1C][51;78H6,1 [21;1H[?25h[?25l[51;78H7[22;1H[?25h[?25l[51;78H6[21;1H[?25h[?25l[51;80H2-9[21;9H[?25h[?25l[51;80H1  [21;1H[?25h[?25l[51;78H7[22;1H[?25h[?25l[51;80H2[22;2H[?25h[?25l[51;80H3[22;3H[?25h[?25l[51;80H4[22;4H[?25h[?25lstd::exit([31m1[m);[22;17H[K[51;80H3[22;3H[?25h[?25l[51;78H3[18;3H[?25h[?25l[51;80H4[18;4H[?25h[?25ls[51;80H5[18;5H[?25h[?25lt[51;80H6[18;6H[?25h[?25ld[51;80H7[18;7H[?25h[?25l[33mstd[m:[51;80H8[18;8H[?25h[?25lstd::[51;80H9[18;9H[?25h[?25lc[51;80H10[18;10H[?25h[?25lo[51;81H1[18;11H[?25h[?25lu[51;81H2[18;12H[?25h[?25lt[51;81H3[18;13H[?25h[?25l<[51;81H4[18;14H[?25h[?25l<[51;81H5[18;15H[?25h[?25le[51;81H6[18;16H[?25h[?25ln[51;81H7[18;17H[?25h[?25ld[51;81H8[18;18H[?25h[?25ll[51;81H9[18;19H[?25h[?25l<[51;80H20[18;20H[?25h[?25l<[51;81H1[18;21H[?25h[?25l[18;20H[K[51;81H0[18;20H[?25h[?25l[18;19H[K[51;80H19[18;19H[?25h[?25l[18;18H[K[51;81H8[18;18H[?25h[?25l[18;17H[K[51;81H7[18;17H[?25h[?25l[18;16H[K[51;81H6[18;16H[?25h[?25l[18;15H[K[51;81H5[18;15H[?25h[?25l[31m"[m[51;81H6[18;16H[?25h[?25l[31mn[m[51;81H7[18;17H[?25h[?25l[31m [m[51;81H8[18;18H[?25h[?25l[31m [m[51;81H9[18;19H[?25h[?25l[31m [m[51;80H20[18;20H[?25h[?25l[31m [m[51;81H1[18;21H[?25h[?25l[31m [m[51;81H2[18;22H[?25h[?25l[31m [m[51;81H3[18;23H[?25h[?25l[31m [m[51;81H4[18;24H[?25h[?25l[31mc[m[51;81H5[18;25H[?25h[?25l[31mo[m[51;81H6[18;26H[?25h[?25l[31mm[m[51;81H7[18;27H[?25h[?25l[31mp[m[51;81H8[18;28H[?25h[?25l[31ma[m[51;81H9[18;29H[?25h[?25l[31mr[m[51;80H30[18;30H[?25h[?25l[31me[m[51;81H1[18;31H[?25h[?25l[31ms[m[51;81H2[18;32H[?25h[?25l[31m [m[51;81H3[18;33H[?25h[?25l[31m [m[51;81H4[18;34H[?25h[?25l[31m [m[51;81H5[18;35H[?25h[?25l[31m [m[51;81H6[18;36H[?25h[?25l[31m [m[51;81H7[18;37H[?25h[?25l[31m [m[51;81H8[18;38H[?25h[?25l[31m [m[51;81H9[18;39H[?25h[?25l[31ms[m[51;80H40[18;40H[?25h[?25l[31mw[m[51;81H1[18;41H[?25h[?25l[31ma[m[51;81H2[18;42H[?25h[?25l[31mp[m[51;81H3[18;43H[?25h[?25l[31ms[m[51;81H4[18;44H[?25h[?25l[31m"[m[51;81H5[18;45H[?25h[?25l<[51;81H6[18;46H[?25h[?25l<[51;81H7[18;47H[?25h[?25ls[51;81H8[18;48H[?25h[?25lt[51;81H9[18;49H[?25h[?25ld[51;80H50[18;50H[?25h[?25l:[51;81H1[18;51H[?25h[?25l:[51;81H2[18;52H[?25h[?25le[51;81H3[18;53H[?25h[?25ln[51;81H4[18;54H[?25h[?25ld[51;81H5[18;55H[?25h[?25ll[51;81H6[18;56H[?25h[?25l[51;77H22,10[37;10H[?25h[?25l[33mstd[m:[37;7H[K[51;80H5 [37;5H[?25h[?25l      std::[51;80H12[37;12H[?25h[?25lc[51;81H3[37;13H[?25h[?25lo[51;81H4[37;14H[?25h[?25lu[51;81H5[37;15H[?25h[?25lt[51;81H6[37;16H[?25h[?25l<[51;81H7[37;17H[?25h[?25l<[51;81H8[37;18H[?25h[?25ln[51;81H9[37;19H[?25h[?25lR[51;80H20[37;20H[?25h[?25le[51;81H1[37;21H[?25h[?25la[51;81H2[37;22H[?25h[?25ld[51;81H3[37;23H[?25h[?25l<[51;81H4[37;24H[?25h[?25l<[51;81H5[37;25H[?25h[?25l[31m"[m[51;81H6[37;26H[?25h[?25l[31m [m[51;81H7[37;27H[?25h[?25l[31m [m[51;81H8[37;28H[?25h[?25l[31m [m[51;81H9[37;29H[?25h[?25l[31m [m[51;80H30[37;30H[?25h[?25l[31m"[m[51;81H1[37;31H[?25h[?25l[51;81H2[37;32H[?25h[?25l<[51;81H3[37;33H[?25h[?25l<[51;81H4[37;34H[?25h[?25l[51;81H5[37;35H[?25h[?25lo[51;81H6[37;36H[?25h[?25lp[51;81H7[37;37H[?25h[?25ls[51;81H8[37;38H[?25h[?25l.[51;81H9[37;39H[?25h[?25lc[51;80H40[37;40H[?25h[?25lo[51;81H1[37;41H[?25h[?25lm[51;81H2[37;42H[?25h[?25lp[51;81H3[37;43H[?25h[?25lc[51;81H4[37;44H[?25h[?25l[37;43H[K[51;81H3[37;43H[?25h[?25l[37;42H[K[51;81H2[37;42H[?25h[?25l[37;41H[K[51;81H1[37;41H[?25h[?25l[37;40H[K[51;81H0[37;40H[?25h[?25l[37;39H[K[51;80H39[37;39H[?25h[?25l[37;38H[K[51;81H8[37;38H[?25h[?25l-[51;81H9[37;39H[?25h[?25l>[51;80H40[37;40H[?25h[?25lc[51;81H1[37;41H[?25h[?25lo[51;81H2[37;42H[?25h[?25lm[51;81H3[37;43H[?25h[?25lp[51;81H4[37;44H[?25h[?25lc[51;81H5[37;45H[?25h[?25l;[51;81H6[37;46H[?25h[?25l[37;45H[K[51;81H5[37;45H[?25h[?25l[51;81H6[37;46H[?25h[?25l<[51;81H7[37;47H[?25h[?25l<[51;81H8[37;48H[?25h[?25l[51;81H9[37;49H[?25h[?25l[31m"[m[51;80H50[37;50H[?25h[?25l[31m"[m[51;81H1[37;51H[?25h[?25l[37;50H[K[51;81H0[37;50H[?25h[?25l[31m [m[51;81H1[37;51H[?25h[?25l[31m [m[51;81H2[37;52H[?25h[?25l[31m [m[51;81H3[37;53H[?25h[?25l[31m [m[51;81H4[37;54H[?25h[?25l[31m"[m[51;81H5[37;55H[?25h[?25l[51;81H6[37;56H[?25h[?25l<[51;81H7[37;57H[?25h[?25l<[51;81H8[37;58H[?25h[?25lo[51;81H9[37;59H[?25h[?25lp[51;80H60[37;60H[?25h[?25ls[51;81H1[37;61H[?25h[?25l-[51;81H2[37;62H[?25h[?25l>[51;81H3[37;63H[?25h[?25ls[51;81H4[37;64H[?25h[?25lw[51;81H5[37;65H[?25h[?25la[51;81H6[37;66H[?25h[?25lp[51;81H7[37;67H[?25h[?25lc[51;81H8[37;68H[?25h[?25l;[51;81H9[37;69H[?25h[?25l[37;68H[K[51;81H8[37;68H[?25h[?25l<[51;81H9[37;69H[?25h[?25l<[51;80H70[37;70H[?25h[?25ls[51;81H1[37;71H[?25h[?25lt[51;81H2[37;72H[?25h[?25ld[51;81H3[37;73H[?25h[?25l:[51;81H4[37;74H[?25h[?25l:[51;81H5[37;75H[?25h[?25le[51;81H6[37;76H[?25h[?25ln[51;81H7[37;77H[?25h[?25ld[51;81H8[37;78H[?25h[?25ll[51;81H9[37;79H[?25h[?25l;[51;80H80[37;80H[?25h[51;1H[K[37;79H[?25l[51;66H^[[37;79H[51;66H  [37;80H[51;76H122,79[8CBot[37;79H[?25h[?25l[51;66H:[37;79H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"main.cc" 125L, 3172C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim main.ccrm -f counter.ccls[Kvim main.cc./main quickSort ../../random.dat `seq 10000 10000 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvim main.cc[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./main quickSort ../../random.dat `seq 10000 10000 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvim main.cc[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:1:[m[K [01;31m[Kerror: [m[Kunterminated #ifndef
 #ifndef COUNTER_HH
 
[01m[Kcounter.hh:15:7:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™
   int [01;31m[Kswap[m[K(int a[], int i, int j){
       [01;31m[K^~~~[m[K
In file included from [01m[Kmain.cc:9[m[K:
[01m[Kops.hh:12:16:[m[K [01;36m[Knote: [m[Koverridden function is â€˜[01m[Kvirtual void Ops::swap(int*, int, int)[m[Kâ€™
   virtual void [01;36m[Kswap[m[K(int a[], int i, int j);
                [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:[m[K In member function â€˜[01m[Kvirtual int Counter::compare(int, int)[m[Kâ€™:
[01m[Kcounter.hh:13:32:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KCounter::compare()[m[Kâ€™
    return this -> Ops::compare([01;31m[K)[m[K;
                                [01;31m[K^[m[K
In file included from [01m[Kmain.cc:9[m[K:
[01m[Kops.hh:9:15:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvirtual int Ops::compare(int, int)[m[Kâ€™
   virtual int [01;36m[Kcompare[m[K(int a, int b);
               [01;36m[K^~~~~~~[m[K
[01m[Kops.hh:9:15:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 0 provided
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:[m[K In member function â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™:
[01m[Kcounter.hh:17:29:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KCounter::swap()[m[Kâ€™
    return this -> Ops::swap([01;31m[K)[m[K;
                             [01;31m[K^[m[K
In file included from [01m[Kmain.cc:9[m[K:
[01m[Kops.hh:12:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvirtual void Ops::swap(int*, int, int)[m[Kâ€™
   virtual void [01;36m[Kswap[m[K(int a[], int i, int j);
                [01;36m[K^~~~[m[K
[01m[Kops.hh:12:16:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 0 provided
[01m[Kmain.cc:[m[K At global scope:
[01m[Kmain.cc:16:9:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kops[m[Kâ€™
 Counter [01;31m[Kops[m[K;
         [01;31m[K^~~[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:15:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
   sort(a, n, &[01;31m[Kops[m[K);
               [01;31m[K^~~[m[K
[01m[Kmain.cc:97:15:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
   sort(a, n, &[01;36m[Kops[m[K);
               [01;36m[K^~~[m[K
               [32m[KOps[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc < 3) {
    [32m[K~~[m[K                                                   
[01m[Kmain.cc:122:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
       std::cout<<nRead<<"    " << [01;31m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;31m[K^~~[m[K
[01m[Kmain.cc:122:35:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
       std::cout<<nRead<<"    " << [01;36m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;36m[K^~~[m[K
                                   [32m[KOps[m[K
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ [Amake -f ../Makefile[8Pvim main.ccrm -f counter.ccls[Kvim main.cc./main quickSort ../../random.dat `seq 10000 10000 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cvim main.cc[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kmake -f ../Makefile[5Pvim counter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 19L, 293C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH
#define COUNTER_HH

#include [m[31m"ops.hh"[m

[32mclass[m Counter : [33mpublic[m Ops{[7;9H[33mpublic[m:[8;17H[32mint[m compc = [31m0[m;[9;17H[32mint[m swapc = [31m0[m;[11;17H[32mint[m compare([32mint[m a, [32mint[m b){[12;25Hcompc++;[13;25H[33mreturn[m [33mthis[m -> Ops::compare();[14;17H}[15;17H[32mint[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[16;25Hswapc++;[17;25H[33mreturn[m [33mthis[m -> Ops::swap();[18;17H}
}
[1m[34m~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H17,30-51      All[17;51H[?25h[?1000l[?1002h[?25l[51;77H3,19-40[13;40H[?25h[?25l[51;66Hi[13;40H[51;66H [13;40H[51;1H[1m-- INSERT --[m[51;14H[K[51;76H13,19-40      All[13;40H[?25h[?25lOps::compare();[13;54H[K[51;80H8-39[13;39H[?25h[?25lOps::compare();[13;53H[K[51;80H7-38[13;38H[?25h[?25lOps::compare();[13;52H[K[51;80H6-37[13;37H[?25h[?25lthisOps::compare();[13;51H[K[51;80H5-36[13;36H[?25h[?25lOps::compare();[13;50H[K[51;80H4-35[13;35H[?25h[?25lOps::compare();[13;49H[K[51;80H3-34[13;34H[?25h[?25lOps::compare();[13;48H[K[51;80H2-33[13;33H[?25h[?25lOps::compare();[13;47H[K[51;80H1-32[13;32H[?25h[?25l[12C[46m()[m[51;79H24-45[13;45H[?25h[?25l[46ma[m);a[46m)[m[51;80H5-46[13;46H[?25h[?25l[46m,[m);,[46m)[m[51;80H6-47[13;47H[?25h[?25l[46mb[m);b[46m)[m[51;80H7-48[13;48H[?25h[?25l(a,b)[17;49H[46m()[m[51;77H7,29-50[17;50H[?25h[?25l[46ma[m);a[46m)[m[51;79H30-51[17;51H[?25h[?25l[46m,[m);,[46m)[m[51;80H1-52[17;52H[?25h[?25l[46mi[m);i[46m)[m[51;80H2-53[17;53H[?25h[?25l[46m,[m);,[46m)[m[51;80H3-54[17;54H[?25h[?25l[46mj[m);j[46m)[m[51;80H4-55[17;55H[?25h[51;1H[K[17;54H[?25l[51;66H^[[17;54H[51;66H  [17;55H(a,i,j)[51;76H17,33-54      All[17;54H[?25h[?25l[51;66H:[17;54H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 19L, 293C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.hhmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:1:[m[K [01;31m[Kerror: [m[Kunterminated #ifndef
 #ifndef COUNTER_HH
 
[01m[Kcounter.hh:15:7:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™
   int [01;31m[Kswap[m[K(int a[], int i, int j){
       [01;31m[K^~~~[m[K
In file included from [01m[Kmain.cc:9[m[K:
[01m[Kops.hh:12:16:[m[K [01;36m[Knote: [m[Koverridden function is â€˜[01m[Kvirtual void Ops::swap(int*, int, int)[m[Kâ€™
   virtual void [01;36m[Kswap[m[K(int a[], int i, int j);
                [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:[m[K In member function â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™:
[01m[Kcounter.hh:17:34:[m[K [01;31m[Kerror: [m[Kvoid value not ignored as it ought to be
    return this -> Ops::swap(a,i,j[01;31m[K)[m[K;
                                  [01;31m[K^[m[K
[01m[Kmain.cc:[m[K At global scope:
[01m[Kmain.cc:16:9:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kops[m[Kâ€™
 Counter [01;31m[Kops[m[K;
         [01;31m[K^~~[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:15:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
   sort(a, n, &[01;31m[Kops[m[K);
               [01;31m[K^~~[m[K
[01m[Kmain.cc:97:15:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
   sort(a, n, &[01;36m[Kops[m[K);
               [01;36m[K^~~[m[K
               [32m[KOps[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc < 3) {
    [32m[K~~[m[K                                                   
[01m[Kmain.cc:122:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
       std::cout<<nRead<<"    " << [01;31m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;31m[K^~~[m[K
[01m[Kmain.cc:122:35:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
       std::cout<<nRead<<"    " << [01;36m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;36m[K^~~[m[K
                                   [32m[KOps[m[K
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile[Kmake -f ../Makefile[5Pvim counter.hhmake -f ../Makefile[5Pvim counter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 19L, 293C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH
#define COUNTER_HH

#include [m[31m"ops.hh"[m

[32mclass[m Counter : [33mpublic[m Ops{[7;9H[33mpublic[m:[8;17H[32mint[m compc = [31m0[m;[9;17H[32mint[m swapc = [31m0[m;[11;17H[32mint[m compare([32mint[m a, [32mint[m b){[12;25Hcompc++;[13;25H[33mreturn[m Ops::compare(a,b);[14;17H}[15;17H[32mint[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[16;25Hswapc++;[17;25H[33mreturn[m [33mthis[m -> Ops::swap(a,i,j);[18;17H}
}
[1m[34m~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H17,33-54      All[17;54H[?25h[?1000l[?1002h[?25l[6;27H[46m{[19;1H}[m[51;77H9,1    [19;1H[?25h[?25l[51;66Hi[19;1H[51;66H [19;1H[51;1H[1m-- INSERT --[m[51;14H[K[51;76H19,1[10CAll[19;1H[?25h[?25l[51;79H2[19;2H[?25h[?25l[20;1H[K[6;27H{[19;1H}[51;76H20,1[20;1H[?25h[?25l#[51;79H2[20;2H[?25h[?25le[51;79H3[20;3H[?25h[?25ln[51;79H4[20;4H[?25h[?25ld[51;79H5[20;5H[?25h[?25li[51;79H6[20;6H[?25h[?25l[35m#endif[m[51;79H7[20;7H[?25h[51;1H[K[20;6H[?25l[51;66H^[[20;6H[51;66H  [20;7H[51;76H20,6[10CAll[20;6H[?25h[?25l[51;66H:[20;6H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 20L, 300C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ ma[K[Kvim counter.hhmake -f ../Makefile[5Pvim counter.hhmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:15:7:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™
   int [01;31m[Kswap[m[K(int a[], int i, int j){
       [01;31m[K^~~~[m[K
In file included from [01m[Kmain.cc:9[m[K:
[01m[Kops.hh:12:16:[m[K [01;36m[Knote: [m[Koverridden function is â€˜[01m[Kvirtual void Ops::swap(int*, int, int)[m[Kâ€™
   virtual void [01;36m[Kswap[m[K(int a[], int i, int j);
                [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:[m[K In member function â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™:
[01m[Kcounter.hh:17:34:[m[K [01;31m[Kerror: [m[Kvoid value not ignored as it ought to be
    return this -> Ops::swap(a,i,j[01;31m[K)[m[K;
                                  [01;31m[K^[m[K
[01m[Kmain.cc:[m[K At global scope:
[01m[Kmain.cc:16:9:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kops[m[Kâ€™
 Counter [01;31m[Kops[m[K;
         [01;31m[K^~~[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:15:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
   sort(a, n, &[01;31m[Kops[m[K);
               [01;31m[K^~~[m[K
[01m[Kmain.cc:97:15:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
   sort(a, n, &[01;36m[Kops[m[K);
               [01;36m[K^~~[m[K
               [32m[KOps[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc < 3) {
    [32m[K~~[m[K                                                   
[01m[Kmain.cc:122:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
       std::cout<<nRead<<"    " << [01;31m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;31m[K^~~[m[K
[01m[Kmain.cc:122:35:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
       std::cout<<nRead<<"    " << [01;36m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;36m[K^~~[m[K
                                   [32m[KOps[m[K
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile[5Pvim counter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 20L, 300C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH
#define COUNTER_HH

#include [m[31m"ops.hh"[m

[32mclass[m Counter : [33mpublic[m Ops{[7;9H[33mpublic[m:[8;17H[32mint[m compc = [31m0[m;[9;17H[32mint[m swapc = [31m0[m;[11;17H[32mint[m compare([32mint[m a, [32mint[m b){[12;25Hcompc++;[13;25H[33mreturn[m Ops::compare(a,b);[14;17H}[15;17H[32mint[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[16;25Hswapc++;[17;25H[33mreturn[m [33mthis[m -> Ops::swap(a,i,j);[18;17H}
}
[35m#endif[m
[1m[34m~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H20,6[10CAll[20;6H[?25h[?1000l[?1002h[?25l[51;76H17,19-40[17;40H[?25h[?25l[51;66Hi[17;40H[51;66H [17;40H[51;1H[1m-- INSERT --[m[51;14H[K[51;76H17,19-40      All[17;40H[?25h[?25lOps::swap(a,i,j);[17;56H[K[51;80H8-39[17;39H[?25h[?25lOps::swap(a,i,j);[17;55H[K[51;80H7-38[17;38H[?25h[?25lOps::swap(a,i,j);[17;54H[K[51;80H6-37[17;37H[?25h[?25lthisOps::swap(a,i,j);[17;53H[K[51;80H5-36[17;36H[?25h[?25lOps::swap(a,i,j);[17;52H[K[51;80H4-35[17;35H[?25h[?25lOps::swap(a,i,j);[17;51H[K[51;80H3-34[17;34H[?25h[?25lOps::swap(a,i,j);[17;50H[K[51;80H2-33[17;33H[?25h[?25lOps::swap(a,i,j);[17;49H[K[51;80H1-32[17;32H[?25h[?25l[51;76H4,17    [4;17H[?25h[?25l[31m"[m[4;17H[K[51;79H6[4;16H[?25h[?25l[31m"[m[4;16H[K[51;79H5[4;15H[?25h[?25l[31mc"[m[51;79H6[4;16H[?25h[?25l[31mc"[m[51;79H7[4;17H[?25h[51;1H[K[4;16H[?25l[51;66H^[[4;16H[51;66H  [4;17H[51;76H4,16[10CAll[4;16H[?25h[?25l[51;66H:[4;16H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 20L, 292C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 20L, 292C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH
#define COUNTER_HH

#include [m[31m"ops.cc"[m

[32mclass[m Counter : [33mpublic[m Ops{[7;9H[33mpublic[m:[8;17H[32mint[m compc = [31m0[m;[9;17H[32mint[m swapc = [31m0[m;[11;17H[32mint[m compare([32mint[m a, [32mint[m b){[12;25Hcompc++;[13;25H[33mreturn[m Ops::compare(a,b);[14;17H}[15;17H[32mint[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[16;25Hswapc++;[17;25H[33mreturn[m Ops::swap(a,i,j);[18;17H}
}
[35m#endif[m
[1m[34m~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H4,16[10CAll[4;16H[?25h[?1000l[?1002h[?25l[51;79H7[4;17H[?25h[?25l[51;66Hi[4;17H[51;66H [4;17H[51;1H[1m-- INSERT --[m[51;14H[K[51;76H4,17[10CAll[4;17H[?25h[?25l[51;79H8[4;18H[?25h[?25l[5;50r[5;1H[L[1;51r[51;76H[K[51;76H5,1[11CAll[5;1H[?25h[?25l[51;76H3[3;1H[?25h[?25l[4;50r[4;1H[L[1;51r[51;76H[K[51;76H4,1[11CAll[4;1H[?25h[?25l#[51;78H2[4;2H[?25h[?25li[51;78H3[4;3H[?25h[?25ln[51;78H4[4;4H[?25h[?25lc[51;78H5[4;5H[?25h[?25ll[51;78H6[4;6H[?25h[?25lu[51;78H7[4;7H[?25h[?25ld[51;78H8[4;8H[?25h[?25le[51;78H9[4;9H[?25h[?25l[51;78H10[4;10H[?25h[?25l[35m#include [m[31m"
#include [m[1Cops.cc[51;79H1[4;11H[?25h[?25l[31mo[m[51;79H2[4;12H[?25h[?25l[31mp[m[51;79H3[4;13H[?25h[?25l[31ms[m[51;79H4[4;14H[?25h[?25l[31m.[m[51;79H5[4;15H[?25h[?25l[31mh[m[51;79H6[4;16H[?25h[?25l[31mh[m[51;79H7[4;17H[?25h[?25l[31m"[m
[35m#include [m[1C[31mops.cc[m[51;79H8[4;18H[?25h[51;1H[K[4;17H[?25l[51;66H^[[4;17H[51;66H  [4;18H[51;76H4,17[10CAll[4;17H[?25h[?25l[51;66H:[4;17H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 22L, 311C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.hhmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:17:7:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™
   int [01;31m[Kswap[m[K(int a[], int i, int j){
       [01;31m[K^~~~[m[K
In file included from [01m[Kcounter.hh:5[m[K,
                 from [01m[Kmain.cc:11[m[K:
[01m[Kops.cc:11:1:[m[K [01;36m[Knote: [m[Koverridden function is â€˜[01m[Kvirtual void Ops::swap(int*, int, int)[m[Kâ€™
 [01;36m[KOps[m[K::swap(int a[], int i, int j)
 [01;36m[K^~~[m[K
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:[m[K In member function â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™:
[01m[Kcounter.hh:19:26:[m[K [01;31m[Kerror: [m[Kvoid value not ignored as it ought to be
    return Ops::swap(a,i,j[01;31m[K)[m[K;
                          [01;31m[K^[m[K
[01m[Kmain.cc:[m[K At global scope:
[01m[Kmain.cc:16:9:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kops[m[Kâ€™
 Counter [01;31m[Kops[m[K;
         [01;31m[K^~~[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:15:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
   sort(a, n, &[01;31m[Kops[m[K);
               [01;31m[K^~~[m[K
[01m[Kmain.cc:97:15:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
   sort(a, n, &[01;36m[Kops[m[K);
               [01;36m[K^~~[m[K
               [32m[KOps[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc < 3) {
    [32m[K~~[m[K                                                   
[01m[Kmain.cc:122:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
       std::cout<<nRead<<"    " << [01;31m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;31m[K^~~[m[K
[01m[Kmain.cc:122:35:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
       std::cout<<nRead<<"    " << [01;36m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;36m[K^~~[m[K
                                   [32m[KOps[m[K
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile[5Pvim counter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 22L, 311C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH
#define COUNTER_HH

#include [m[31m"ops.hh"[m
[35m#include [m[31m"ops.cc"[m


[32mclass[m Counter : [33mpublic[m Ops{[9;9H[33mpublic[m:[10;17H[32mint[m compc = [31m0[m;[11;17H[32mint[m swapc = [31m0[m;[13;17H[32mint[m compare([32mint[m a, [32mint[m b){[14;25Hcompc++;[15;25H[33mreturn[m Ops::compare(a,b);[16;17H}[17;17H[32mint[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[18;25Hswapc++;[19;25H[33mreturn[m Ops::swap(a,i,j);[20;17H}
}
[35m#endif[m
[1m[34m~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H4,17[10CAll[4;17H[?25h[?1000l[?1002h[?25l[51;66H:[4;17H[51;1H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 22L, 311C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.hhmake -f ../Makefile[5Pvim counter.hhmake -f ../Makefile[5Pvim counter.hhmake -f ../Makefile[5Pvim counter.hhmake -f ../Makefile[5Pvim counter.hhmake -f ../Makefile[8Pvim main.cc
\[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 125L, 3172C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;3Hstd::cerr << [31m"unknown algorithm "[m << name[2;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);
}

[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)
{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;
  }
  std::cout << std::endl;
}

[32mstatic[m [32mvoid[m
go(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)
{
  std::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);
  [32mint[m* a = ints.data();
  [32mint[m n = ints.size();
  sort(a, n, &ops);
  [33mif[m (isVerbose) outArray(a, n);
}

[32mint[m
main([32mint[m argc, [32mchar[m* argv[]) {
   std::cout<<[31m"n       compares       swaps"[m<<std::endl
   [33mif[m (argc < [31m3[m) {
   std::cerr << [31m"usage: "[m << argv[[31m0[m][31;12H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;
   std::exit([31m1[m);
  }
  [32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;
  [32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;
  [32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];
  [32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);
  SortP sort = getSort(algorithm);
  [32mint[m sizeArgsIndex = [31m3[m + nVerbose;
  [33mif[m (sizeArgsIndex == argc) {
    go(sort, filePath, isVerbose, -[31m1[m);
  }
  [33melse[m {
    [33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[45;7H[32mint[m nRead = atoi(argv[i]);[46;7Hgo(sort, filePath, isVerbose, nRead);[47;7Hstd::cout<<nRead<<[31m"    "[m << ops->compc << [31m"    "[m <<ops->swapc<<std::endl;
    }
  }
}[51;76H122,79[8CBot[47;79H[?25h[?25l[51;66H\[47;79H[51;66H [47;79H[?25h[?1000l[?1002h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;
  }[43;30H[46m{

[m  [46m}[m[51;1H[K[51;76H117,3[9C96%[45;3H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;[46;30H{

  }[51;76H[K[51;76H114,35[8C92%[45;35H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1HgetSort(std::string name)
{
  std::string names;[51;76H[K[51;76H111,45[8C88%[45;45H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m *  if not valid.
 */[m
[32mstatic[m SortP[41;18H[46m{[45;3H}[m[51;76H[K[51;76H108,3[9C84%[45;3H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H};

[34m/** Return sorting function specified by name; terminate program[m[44;18H{[45;34H[46m[[1C][m[48;3H}[51;76H[K[51;76H105,36[8C80%[45;36H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },
  { [31m"quickSort"[m, quickSort },[48;34H[[1C][51;76H[K[51;76H102,30[8C76%[45;30H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },
  { [31m"bubbleSort"[m, bubbleSort },[39;1H[46m{[45;1H}[m[51;76H[K[51;76H99,1[10C72%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3HSortP sort;
};[42;1H{[48;1H}[51;76H[K[51;76H96,22[9C68%[45;22H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m//map algorithm name to corresponding function[m
[32mstruct[m Algorithm {
  std::string name;[51;76H[K[51;76H93,1[10C64%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m//type for pointer to a sorting function [m
[33musing[m SortP = [32mvoid[m (*)([32mint[m a[], [32mint[m n, Ops* ops);[51;76H[K[51;76H90,0-1[8C60%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mreturn[m ints;
}[43;31H[46m{

[m  [46m}[m[51;76H[K[51;76H87,3[10C56%[45;3H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H}
    ints.push_back(v);
  }[45;1H[46m{[m[46;31H{

  }

[46m}[m[51;76H[K[51;76H84,1[10C52%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9Hstd::exit([31m1[m);[2;7H}[3;7H[33mbreak[m;[48;1H{[51;76H[K[51;76H81,73[9C48%[45;73H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9Hstd::cerr << [31m"got eof on while reading "[m << filePath[2;19H<< [31m" after reading "[m << i << [31m" ints; expected "[m << n[3;19H<< std::endl;[51;76H[K[51;76H78,15[9C44%[45;15H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5Hin >> v;
    [33mif[m (in.eof()) {[3;7H[33mif[m (n > [31m0[m) {[51;76H[K[51;76H75,4[10C40%[45;4H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::vector<[32mint[m> ints;
  [33mfor[m ([32mint[m i = [31m0[m; n < [31m0[m || i < n; ++i) {
    [32mint[m v;[51;76H[K[51;76H72,51[9C36%[45;51H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[2;33H[31m": "[m + std::strerror(errno));
  }[51;76H[K[51;76H69,20[9C32%[45;20H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mif[m (!isStdin) file.open(filePath);
  std::istream& in = (isStdin) ? std::cin : file;
  [33mif[m (!in) {[51;76H[K[51;76H66,12[9C28%[45;12H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream file;[51;76H[K[51;76H63,64[9C24%[45;64H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1HCounter ops;
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath, [32mint[m n)[51;76H[K[51;76H60,29[9C20%[45;29H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.
 */[m[51;76H[K[51;76H57,31[9C16%[45;31H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m"sorts.hh"[m
[35m#include [m[31m"counter.hh"[m[51;76H[K[51;76H54,0-1[8C12%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<cstring>[m

[35m#include [m[31m"ops.hh"[m[51;76H[K[51;76H51,19[10C8%[45;19H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m[51;76H[K[51;76H48,0-1[9C4%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<string>[m[51;76H[K[51;76H45,0-1[8CTop[45;1H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[51;76H16,12 [16;12H[?25h[?25l[51;66Hi[16;12H[51;66H [16;12H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H16,12[9CTop[16;12H[?25h[?25l(;[51;80H3[16;13H[?25h[?25l);[46m()[m[51;80H4[16;14H[?25h[51;1H[K[16;13H[?25l[51;66H^[[16;13H[51;66H  [16;14H[51;76H16,13[9CTop[16;13H[?25h[?25l[51;66H:[16;13H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"main.cc" 125L, 3174C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim main.cccounter.hhmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:17:7:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™
   int [01;31m[Kswap[m[K(int a[], int i, int j){
       [01;31m[K^~~~[m[K
In file included from [01m[Kcounter.hh:5[m[K,
                 from [01m[Kmain.cc:11[m[K:
[01m[Kops.cc:11:1:[m[K [01;36m[Knote: [m[Koverridden function is â€˜[01m[Kvirtual void Ops::swap(int*, int, int)[m[Kâ€™
 [01;36m[KOps[m[K::swap(int a[], int i, int j)
 [01;36m[K^~~[m[K
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:[m[K In member function â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™:
[01m[Kcounter.hh:19:26:[m[K [01;31m[Kerror: [m[Kvoid value not ignored as it ought to be
    return Ops::swap(a,i,j[01;31m[K)[m[K;
                          [01;31m[K^[m[K
[01m[Kmain.cc:[m[K At global scope:
[01m[Kmain.cc:16:9:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kops[m[Kâ€™
 Counter [01;31m[Kops[m[K();
         [01;31m[K^~~[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:15:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
   sort(a, n, &[01;31m[Kops[m[K);
               [01;31m[K^~~[m[K
[01m[Kmain.cc:97:15:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
   sort(a, n, &[01;36m[Kops[m[K);
               [01;36m[K^~~[m[K
               [32m[KOps[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc < 3) {
    [32m[K~~[m[K                                                   
[01m[Kmain.cc:122:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
       std::cout<<nRead<<"    " << [01;31m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;31m[K^~~[m[K
[01m[Kmain.cc:122:35:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
       std::cout<<nRead<<"    " << [01;36m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;36m[K^~~[m[K
                                   [32m[KOps[m[K
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ 
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile[8Pvim main.cccounter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 22L, 311C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH
#define COUNTER_HH

#include [m[31m"ops.hh"[m
[35m#include [m[31m"ops.cc"[m


[32mclass[m Counter : [33mpublic[m Ops{[9;9H[33mpublic[m:[10;17H[32mint[m compc = [31m0[m;[11;17H[32mint[m swapc = [31m0[m;[13;17H[32mint[m compare([32mint[m a, [32mint[m b){[14;25Hcompc++;[15;25H[33mreturn[m Ops::compare(a,b);[16;17H}[17;17H[32mint[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[18;25Hswapc++;[19;25H[33mreturn[m Ops::swap(a,i,j);[20;17H}
}
[35m#endif[m
[1m[34m~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H4,17[10CAll[4;17H[?25h[?1000l[?1002h[?25l[15;44H[46m([ma,b[46m)[m[51;76H15,27-48[15;48H[?25h[?25l[51;66Hi[15;48H[51;66H [15;48H[51;1H[1m-- INSERT --[m[51;14H[K[51;76H15,27-48      All[15;48H[?25h[?25l[51;80H8-49[15;49H[?25h[?25l[46m;[m[15;49H[K[15;44H(a,b;[51;80H7-48[15;48H[?25h[?25l;[15;48H[K[51;80H6-47[15;47H[?25h[?25l;[15;47H[K[51;80H5-46[15;46H[?25h[?25l;[15;46H[K[51;80H4-45[15;45H[?25h[?25l;[15;45H[K[51;80H3-44[15;44H[?25h[?25l;[15;44H[K[51;80H2-43[15;43H[?25h[?25l;[15;43H[K[51;80H1-42[15;42H[?25h[?25l;[15;42H[K[51;80H0-41[15;41H[?25h[?25l;[15;41H[K[51;79H19-40[15;40H[?25h[?25l;[15;40H[K[51;80H8-39[15;39H[?25h[?25l;[15;39H[K[51;80H7-38[15;38H[?25h[?25l;[15;38H[K[51;80H6-37[15;37H[?25h[?25l;[15;37H[K[51;80H5-36[15;36H[?25h[?25l;[15;36H[K[51;80H4-35[15;35H[?25h[?25l;[15;35H[K[51;80H3-34[15;34H[?25h[?25l;[15;34H[K[51;80H2-33[15;33H[?25h[?25l;[15;33H[K[51;80H1-32[15;32H[?25h[?25la;[51;80H2-33[15;33H[?25h[?25l ;[51;80H3-34[15;34H[?25h[?25l-;[51;80H4-35[15;35H[?25h[?25l ;[51;80H5-36[15;36H[?25h[?25lb;[51;80H6-37[15;37H[?25h[?25l[19;41H[46m([ma,i,j[46m)[m[51;77H9,26-4[19;47H[?25h[?25l[51;80H7-48[19;48H[?25h[?25l[46m;[m[19;48H[K[19;41H(a,i,j;[51;80H6-47[19;47H[?25h[?25l;[19;47H[K[51;80H5-46[19;46H[?25h[?25l;[19;46H[K[51;80H4-45[19;45H[?25h[?25l;[19;45H[K[51;80H3-44[19;44H[?25h[?25l;[19;44H[K[51;80H2-43[19;43H[?25h[?25l;[19;43H[K[51;80H1-42[19;42H[?25h[?25l;[19;42H[K[51;80H0-41[19;41H[?25h[?25l;[19;41H[K[51;79H19-40[19;40H[?25h[?25l;[19;40H[K[51;80H8-39[19;39H[?25h[?25l;[19;39H[K[51;80H7-38[19;38H[?25h[?25l;[19;38H[K[51;80H6-37[19;37H[?25h[?25l;[19;37H[K[51;80H5-36[19;36H[?25h[?25l;[19;36H[K[51;80H4-35[19;35H[?25h[?25l;[19;35H[K[51;80H3-34[19;34H[?25h[?25l;[19;34H[K[51;80H2-33[19;33H[?25h[?25l;[19;33H[K[51;80H1-32[19;32H[?25h[?25l;[19;32H[K[51;80H0-31[19;31H[?25h[?25lretur;[19;31H[K[51;79H9-30 [19;30H[?25h[?25l;[19;30H[K[51;79H8-29[19;29H[?25h[?25l;[19;29H[K[51;79H7-28[19;28H[?25h[?25l;[19;28H[K[51;79H6-27[19;27H[?25h[?25l;[19;27H[K[51;79H5-26[19;26H[?25h[?25l;[19;26H[K[51;79H4-25[19;25H[?25h[?25l[51;77H5,16-37[15;37H[?25h[?25l[51;77H7,6-20 [17;20H[?25h[?25lin swap([32mint[m a[], [32mint[m i, [32mint[m j){[17;48H[K[51;79H5-19[17;19H[?25h[?25l swap([32mint[m a[], [32mint[m i, [32mint[m j){[17;47H[K[51;79H4-18[17;18H[?25h[?25l swap([32mint[m a[], [32mint[m i, [32mint[m j){[17;46H[K[51;79H3-17[17;17H[?25h[?25lv swap([32mint[m a[], [32mint[m i, [32mint[m j){[51;79H4-18[17;18H[?25h[?25lo swap([32mint[m a[], [32mint[m i, [32mint[m j){[51;79H5-19[17;19H[?25h[?25li swap([32mint[m a[], [32mint[m i, [32mint[m j){[51;79H6-20[17;20H[?25h[?25l[32mvoid[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[51;79H7-21[17;21H[?25h[?25l[51;77H9,4-25[19;25H[?25h[?25lr;[51;79H5-26[19;26H[?25h[?25le;[51;79H6-27[19;27H[?25h[?25lt;[51;79H7-28[19;28H[?25h[?25lu;[51;79H8-29[19;29H[?25h[?25lr;[51;79H9-30[19;30H[?25h[?25l[33mreturn[m;[51;79H10-31[19;31H[?25h[?25l ;[51;80H1-32[19;32H[?25h[51;1H[K[19;31H[?25l[51;66H^[[19;31H[51;66H  [19;32H[51;76H19,10-31      All[19;31H[?25h[?25l[51;66H:[19;31H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 22L, 284C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.hhmake -f ../Makefile[8Pvim main.ccmake -f ../Makefile[5Pvim counter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 22L, 284C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH
#define COUNTER_HH

#include [m[31m"ops.hh"[m
[35m#include [m[31m"ops.cc"[m


[32mclass[m Counter : [33mpublic[m Ops{[9;9H[33mpublic[m:[10;17H[32mint[m compc = [31m0[m;[11;17H[32mint[m swapc = [31m0[m;[13;17H[32mint[m compare([32mint[m a, [32mint[m b){[14;25Hcompc++;[15;25H[33mreturn[m a - b;[16;17H}[17;17H[32mvoid[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[18;25Hswapc++;[19;25H[33mreturn[m ;[20;17H}
}
[35m#endif[m
[1m[34m~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H19,10-31      All[19;31H[?25h[?1000l[?1002h[?25l[51;66H~@k[19;31H[51;66H   [19;32H[51;80H1-32[19;32H[?25h[?25l[51;66Ht[19;32H[?25h[?25l[51;67Hh[19;32H[51;66H  [19;32H[?25h[?25l[51;66Hi[19;32H[51;66H [19;32H[51;1H[1m-- INSERT --[m[51;14H[K[51;76H19,11-32      All[19;32H[?25h[?25ls;[51;80H2-33[19;33H[?25h[?25l;[19;33H[K[51;80H1-32[19;32H[?25h[?25lt;[51;80H2-33[19;33H[?25h[?25lh;[51;80H3-34[19;34H[?25h[?25li;[51;80H4-35[19;35H[?25h[?25l[33mthis[m;[51;80H5-36[19;36H[?25h[?25l ;[51;80H6-37[19;37H[?25h[?25l-;[51;80H7-38[19;38H[?25h[?25l>;[51;80H8-39[19;39H[?25h[?25l ;[51;80H9-40[19;40H[?25h[?25lO;[51;79H20-41[19;41H[?25h[?25lp;[51;80H1-42[19;42H[?25h[?25ls;[51;80H2-43[19;43H[?25h[?25l:;[51;80H3-44[19;44H[?25h[?25l:;[51;80H4-45[19;45H[?25h[?25lc;[51;80H5-46[19;46H[?25h[?25lo;[51;80H6-47[19;47H[?25h[?25lm;[51;80H7-48[19;48H[?25h[?25l;[19;48H[K[51;80H6-47[19;47H[?25h[?25l;[19;47H[K[51;80H5-46[19;46H[?25h[?25l;[19;46H[K[51;80H4-45[19;45H[?25h[?25ls;[51;80H5-46[19;46H[?25h[?25lw;[51;80H6-47[19;47H[?25h[?25la;[51;80H7-48[19;48H[?25h[?25lp;[51;80H8-49[19;49H[?25h[?25l(;[51;80H9-50[19;50H[?25h[?25l;[19;50H[K[51;80H8-49[19;49H[?25h[?25l(;[51;80H9-50[19;50H[?25h[?25l);[46m()[m[51;79H30-51[19;51H[?25h[51;1H[K[19;50H[?25l[51;66H^[[19;50H[51;66H  [19;51H[51;76H19,29-50      All[19;50H[?25h[?25l()[51;77H5,16-37[15;37H[?25h[?25l[51;66H~@k[15;37H[51;66H   [15;36H[51;80H5-36[15;36H[?25h[?25l[51;66H~@k[15;36H[51;66H   [15;35H[51;80H4-35[15;35H[?25h[?25l[51;66H~@k[15;35H[51;66H   [15;34H[51;80H3-34[15;34H[?25h[?25l[51;66H~@k[15;34H[51;66H   [15;33H[51;80H2-33[15;33H[?25h[?25l[51;66H~@k[15;33H[51;66H   [15;32H[51;80H1-32[15;32H[?25h[?25l[51;66H~@k[15;32H[51;66H   [15;33H[51;80H2-33[15;33H[?25h[?25l[51;66H~@k[15;33H[51;66H   [15;34H[51;80H3-34[15;34H[?25h[?25l[51;66H~@k[15;34H[51;66H   [15;35H[51;80H4-35[15;35H[?25h[?25l[51;66H~@k[15;35H[51;66H   [15;36H[51;80H5-36[15;36H[?25h[?25l[51;66H~@k[15;36H[51;66H   [15;37H[51;80H6-37[15;37H[?25h[?25l[51;66Hi[15;37H[51;66H [15;37H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H15,16-37      All[15;37H[?25h[?25l=;[51;80H7-38[15;38H[?25h[?25l;[15;38H[K[51;80H6-37[15;37H[?25h[?25l;[15;37H[K[51;80H5-36[15;36H[?25h[?25l;[15;36H[K[51;80H4-35[15;35H[?25h[?25l;[15;35H[K[51;80H3-34[15;34H[?25h[?25l;[15;34H[K[51;80H2-33[15;33H[?25h[?25l;[15;33H[K[51;80H1-32[15;32H[?25h[?25lt;[51;80H2-33[15;33H[?25h[?25lh;[51;80H3-34[15;34H[?25h[?25li;[51;80H4-35[15;35H[?25h[?25l[33mthis[m;[51;80H5-36[15;36H[?25h[?25l ;[51;80H6-37[15;37H[?25h[?25l-;[51;80H7-38[15;38H[?25h[?25l>;[51;80H8-39[15;39H[?25h[?25l ;[51;80H9-40[15;40H[?25h[?25lO;[51;79H20-41[15;41H[?25h[?25lp;[51;80H1-42[15;42H[?25h[?25ls;[51;80H2-43[15;43H[?25h[?25l:;[51;80H3-44[15;44H[?25h[?25l:;[51;80H4-45[15;45H[?25h[?25lc;[51;80H5-46[15;46H[?25h[?25lo;[51;80H6-47[15;47H[?25h[?25lm;[51;80H7-48[15;48H[?25h[?25lp;[51;80H8-49[15;49H[?25h[?25la;[51;80H9-50[15;50H[?25h[?25lr;[51;79H30-51[15;51H[?25h[?25le;[51;80H1-52[15;52H[?25h[?25l(;[51;80H2-53[15;53H[?25h[?25l);[46m()[m[51;80H3-54[15;54H[?25h[51;1H[K[15;53H[?25l[51;66H^[[15;53H[51;66H  [15;54H[51;76H15,32-53      All[15;53H[?25h[?25l[51;66H:[15;53H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 22L, 320C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.hhmake -f ../Makefile[8Pvim main.ccmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:[m[K In member function â€˜[01m[Kvirtual int Counter::compare(int, int)[m[Kâ€™:
[01m[Kcounter.hh:15:32:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KCounter::compare()[m[Kâ€™
    return this -> Ops::compare([01;31m[K)[m[K;
                                [01;31m[K^[m[K
In file included from [01m[Kcounter.hh:5[m[K,
                 from [01m[Kmain.cc:11[m[K:
[01m[Kops.cc:5:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvirtual int Ops::compare(int, int)[m[Kâ€™
 [01;36m[KOps[m[K::compare(int a, int b) {
 [01;36m[K^~~[m[K
[01m[Kops.cc:5:1:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 0 provided
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:[m[K In member function â€˜[01m[Kvirtual void Counter::swap(int*, int, int)[m[Kâ€™:
[01m[Kcounter.hh:19:29:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KCounter::swap()[m[Kâ€™
    return this -> Ops::swap([01;31m[K)[m[K;
                             [01;31m[K^[m[K
In file included from [01m[Kcounter.hh:5[m[K,
                 from [01m[Kmain.cc:11[m[K:
[01m[Kops.cc:11:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvirtual void Ops::swap(int*, int, int)[m[Kâ€™
 [01;36m[KOps[m[K::swap(int a[], int i, int j)
 [01;36m[K^~~[m[K
[01m[Kops.cc:11:1:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 0 provided
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:19:29:[m[K [01;31m[Kerror: [m[Kreturn-statement with a value, in function returning â€˜[01m[Kvoid[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
    return this -> Ops::swap([01;31m[K)[m[K;
                             [01;31m[K^[m[K
[01m[Kmain.cc:[m[K At global scope:
[01m[Kmain.cc:16:9:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kops[m[Kâ€™
 Counter [01;31m[Kops[m[K();
         [01;31m[K^~~[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:15:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
   sort(a, n, &[01;31m[Kops[m[K);
               [01;31m[K^~~[m[K
[01m[Kmain.cc:97:15:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
   sort(a, n, &[01;36m[Kops[m[K);
               [01;36m[K^~~[m[K
               [32m[KOps[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc < 3) {
    [32m[K~~[m[K                                                   
[01m[Kmain.cc:122:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
       std::cout<<nRead<<"    " << [01;31m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;31m[K^~~[m[K
[01m[Kmain.cc:122:35:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
       std::cout<<nRead<<"    " << [01;36m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;36m[K^~~[m[K
                                   [32m[KOps[m[K
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile[5Pvim counter.hh[K[Kcc[K[Khh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 22L, 320C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH
#define COUNTER_HH

#include [m[31m"ops.hh"[m
[35m#include [m[31m"ops.cc"[m


[32mclass[m Counter : [33mpublic[m Ops{[9;9H[33mpublic[m:[10;17H[32mint[m compc = [31m0[m;[11;17H[32mint[m swapc = [31m0[m;[13;17H[32mint[m compare([32mint[m a, [32mint[m b){[14;25Hcompc++;[15;25H[33mreturn[m [33mthis[m -> Ops::compare[46m()[m;[16;17H}[17;17H[32mvoid[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[18;25Hswapc++;[19;25H[33mreturn[m [33mthis[m -> Ops::swap();[20;17H}
}
[35m#endif[m
[1m[34m~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H15,32-53      All[15;53H[?25h[?1000l[?1002h[?25l[51;66H^[[15;53H[51;66H  [15;53H[51;66H^[[15;53H[51;66H  [15;53H[?25h[?25l[51;66H:[15;53H[51;1H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 22L, 320C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 22L, 320C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH
#define COUNTER_HH

#include [m[31m"ops.hh"[m
[35m#include [m[31m"ops.cc"[m


[32mclass[m Counter : [33mpublic[m Ops{[9;9H[33mpublic[m:[10;17H[32mint[m compc = [31m0[m;[11;17H[32mint[m swapc = [31m0[m;[13;17H[32mint[m compare([32mint[m a, [32mint[m b){[14;25Hcompc++;[15;25H[33mreturn[m [33mthis[m -> Ops::compare[46m()[m;[16;17H}[17;17H[32mvoid[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[18;25Hswapc++;[19;25H[33mreturn[m [33mthis[m -> Ops::swap();[20;17H}
}
[35m#endif[m
[1m[34m~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H15,32-53      All[15;53H[?25h[?1000l[?1002h[?25l()[51;79H19-40[15;40H[?25h[?25l[51;66Hi[15;40H[51;66H [15;40H[51;1H[1m-- INSERT --[m[51;14H[K[51;76H15,19-40      All[15;40H[?25h[?25lOps::compare();[15;54H[K[51;80H8-39[15;39H[?25h[?25lOps::compare();[15;53H[K[51;80H7-38[15;38H[?25h[?25lOps::compare();[15;52H[K[51;80H6-37[15;37H[?25h[?25lthisOps::compare();[15;51H[K[51;80H5-36[15;36H[?25h[?25lOps::compare();[15;50H[K[51;80H4-35[15;35H[?25h[?25lOps::compare();[15;49H[K[51;80H3-34[15;34H[?25h[?25lOps::compare();[15;48H[K[51;80H2-33[15;33H[?25h[?25lOps::compare();[15;47H[K[51;80H1-32[15;32H[?25h[?25l[12C[46m()[m[51;79H24-45[15;45H[?25h[?25l[46ma[m);a[46m)[m[51;80H5-46[15;46H[?25h[?25l[46m,[m);,[46m)[m[51;80H6-47[15;47H[?25h[?25l[46mb[m);b[46m)[m[51;80H7-48[15;48H[?25h[?25l(a,b)[51;77H9,18-39[19;39H[?25h[51;1H[K[19;38H[?25l[51;66H^[[19;38H[51;66H  [19;39H[51;76H19,17-38      All[19;38H[?25h[?25l[51;66H:[19;38H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 22L, 315C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.hhmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:[m[K In member function â€˜[01m[Kvirtual void Counter::swap(int*, int, int)[m[Kâ€™:
[01m[Kcounter.hh:19:29:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KCounter::swap()[m[Kâ€™
    return this -> Ops::swap([01;31m[K)[m[K;
                             [01;31m[K^[m[K
In file included from [01m[Kcounter.hh:5[m[K,
                 from [01m[Kmain.cc:11[m[K:
[01m[Kops.cc:11:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvirtual void Ops::swap(int*, int, int)[m[Kâ€™
 [01;36m[KOps[m[K::swap(int a[], int i, int j)
 [01;36m[K^~~[m[K
[01m[Kops.cc:11:1:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 0 provided
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:19:29:[m[K [01;31m[Kerror: [m[Kreturn-statement with a value, in function returning â€˜[01m[Kvoid[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
    return this -> Ops::swap([01;31m[K)[m[K;
                             [01;31m[K^[m[K
[01m[Kmain.cc:[m[K At global scope:
[01m[Kmain.cc:16:9:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kops[m[Kâ€™
 Counter [01;31m[Kops[m[K();
         [01;31m[K^~~[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:15:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
   sort(a, n, &[01;31m[Kops[m[K);
               [01;31m[K^~~[m[K
[01m[Kmain.cc:97:15:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
   sort(a, n, &[01;36m[Kops[m[K);
               [01;36m[K^~~[m[K
               [32m[KOps[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc < 3) {
    [32m[K~~[m[K                                                   
[01m[Kmain.cc:122:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
       std::cout<<nRead<<"    " << [01;31m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;31m[K^~~[m[K
[01m[Kmain.cc:122:35:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
       std::cout<<nRead<<"    " << [01;36m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;36m[K^~~[m[K
                                   [32m[KOps[m[K
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile[5Pvim counter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 22L, 315C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH
#define COUNTER_HH

#include [m[31m"ops.hh"[m
[35m#include [m[31m"ops.cc"[m


[32mclass[m Counter : [33mpublic[m Ops{[9;9H[33mpublic[m:[10;17H[32mint[m compc = [31m0[m;[11;17H[32mint[m swapc = [31m0[m;[13;17H[32mint[m compare([32mint[m a, [32mint[m b){[14;25Hcompc++;[15;25H[33mreturn[m Ops::compare(a,b);[16;17H}[17;17H[32mvoid[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[18;25Hswapc++;[19;25H[33mreturn[m [33mthis[m -> Ops::swap();[20;17H}
}
[35m#endif[m
[1m[34m~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H19,17-38      All[19;38H[?25h[?1000l[?1002h[?25l[51;80H9-40[19;40H[?25h[?25l[51;66Hi[19;40H[51;66H [19;40H[51;1H[1m-- INSERT --[m[51;14H[K[51;76H19,19-40      All[19;40H[?25h[?25lOps::swap();[19;51H[K[51;80H8-39[19;39H[?25h[?25lOps::swap();[19;50H[K[51;80H7-38[19;38H[?25h[?25lOps::swap();[19;49H[K[51;80H6-37[19;37H[?25h[?25lthisOps::swap();[19;48H[K[51;80H5-36[19;36H[?25h[?25lOps::swap();[19;47H[K[51;80H4-35[19;35H[?25h[?25lOps::swap();[19;46H[K[51;80H3-34[19;34H[?25h[?25lOps::swap();[19;45H[K[51;80H2-33[19;33H[?25h[?25lOps::swap();[19;44H[K[51;80H1-32[19;32H[?25h[?25l[51;80H9-40[19;40H[?25h[?25l[51;4H[1m(insert)- VISUAL --[m[51;76H[K[51;66H2[19;41H[51;76H19,20-41      All[19;41H[7mp[m[46m()[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[m[51;66H [19;41H[51;4H[1mINSERTt --[m[51;13H[K[51;76H19,20-41      All[19;40Hp[?25h[?25l[51;80H1-42[19;42H[?25h[?25l[46ma[m);a[46m)[m[51;80H2-43[19;43H[?25h[?25l[46m,[m);,[46m)[m[51;80H3-44[19;44H[?25h[?25l[46mi[m);i[46m)[m[51;80H4-45[19;45H[?25h[?25l[46m,[m);,[46m)[m[51;80H5-46[19;46H[?25h[?25l[46mj[m);j[46m)[m[51;80H6-47[19;47H[?25h[51;1H[K[19;46H[?25l[51;66H^[[19;46H[51;66H  [19;47H(a,i,j)[51;76H19,25-46      All[19;46H[?25h[?25l[51;66H:[19;46H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 22L, 312C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote03:~/i240a/submit/lab9/exercises/3-stats$ vim counter.hh[Kvim counter.hhmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:16:9:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kops[m[Kâ€™
 Counter [01;31m[Kops[m[K();
         [01;31m[K^~~[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:15:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
   sort(a, n, &[01;31m[Kops[m[K);
               [01;31m[K^~~[m[K
[01m[Kmain.cc:97:15:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
   sort(a, n, &[01;36m[Kops[m[K);
               [01;36m[K^~~[m[K
               [32m[KOps[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc Script started on 2020-04-02 21:00:07-04:00 [TERM="xterm" TTY="/dev/pts/6" COLUMNS="93" LINES="51"]
rgeary1@remote05:~/i240a/submit/lab9$ cd exercises/3-stats/
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ vim [K[K[K[Kmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:16:8:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[K*[m[Kâ€™ token
 Counter[01;31m[K*[m[K ops;
        [01;31m[K^[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:15:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
   sort(a, n, &[01;31m[Kops[m[K);
               [01;31m[K^~~[m[K
[01m[Kmain.cc:97:15:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
   sort(a, n, &[01;36m[Kops[m[K);
               [01;36m[K^~~[m[K
               [32m[KOps[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc < 3) {
    [32m[K~~[m[K                                                   
[01m[Kmain.cc:122:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kops[m[Kâ€™ was not declared in this scope
       std::cout<<nRead<<"    " << [01;31m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;31m[K^~~[m[K
[01m[Kmain.cc:122:35:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KOps[m[Kâ€™
       std::cout<<nRead<<"    " << [01;36m[Kops[m[K->compc << "    " <<ops->swapc<<std::endl;
                                   [01;36m[K^~~[m[K
                                   [32m[KOps[m[K
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefilecd exercises/3-stats/[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kvim v[Kcounter.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.cc" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                            [3;1H~                                                                                            [4;1H~                                                                                            [5;1H~                                                                                            [6;1H~                                                                                            [7;1H~                                                                                            [8;1H~                                                                                            [9;1H~                                                                                            [10;1H~                                                                                            [11;1H~                                                                                            [12;1H~                                                                                            [13;1H~                                                                                            [14;1H~                                                                                            [15;1H~                                                                                            [16;1H~                                                                                            [17;1H~                                                                                            [18;1H~                                                                                            [19;1H~                                                                                            [20;1H~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H0,0-1[9CAll[1;1H[?25h[?1000l[?1002h[?25l[51;66H:[1;1H[51;1H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.cc" [New] 0L, 0C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ rm -f counter.cc
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ rm -f counter.cc[K[Khh
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ vim counter ..h
2 files to edit
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                            [3;1H~                                                                                            [4;1H~                                                                                            [5;1H~                                                                                            [6;1H~                                                                                            [7;1H~                                                                                            [8;1H~                                                                                            [9;1H~                                                                                            [10;1H~                                                                                            [11;1H~                                                                                            [12;1H~                                                                                            [13;1H~                                                                                            [14;1H~                                                                                            [15;1H~                                                                                            [16;1H~                                                                                            [17;1H~                                                                                            [18;1H~                                                                                            [19;1H~                                                                                            [20;1H~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H0,0-1[9CAll[1;1H[?25h[?1000l[?1002h[?25l[51;66H:[1;1H[51;1H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l"counter" [New] 0L, 0C written
[1m[37m[41mE173: 1 more file to edit[?2004h[?1002l[m
[32mPress ENTER or type command to continue[?25h[?1002h[?25l[1;1H[m[2L[2;1H[1m[34m~                                                                                            [m[51;1H[K[51;76H0,0-1[9CAll[1;1H[?25h[?25l[51;66H:[1;1H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter" 0L, 0C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ vim counter ..hrm -f counter.hh .hh[C.hh
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ vom[K[Kim counter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                            [3;1H~                                                                                            [4;1H~                                                                                            [5;1H~                                                                                            [6;1H~                                                                                            [7;1H~                                                                                            [8;1H~                                                                                            [9;1H~                                                                                            [10;1H~                                                                                            [11;1H~                                                                                            [12;1H~                                                                                            [13;1H~                                                                                            [14;1H~                                                                                            [15;1H~                                                                                            [16;1H~                                                                                            [17;1H~                                                                                            [18;1H~                                                                                            [19;1H~                                                                                            [20;1H~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H0,0-1[9CAll[1;1H[?25h[?1000l[?1002h[?25l[51;66H#[1;1H[51;1H[1m[37m[41mE348: No string under cursor[m[51;66H[K[1;1H[51;76H0,0-1[9CAll[1;1H[?25h[?25l[51;66Hf[1;1H[?25h[?25l[51;67H~@k[1;1H[51;66H    [1;1H[?25h[?25l[51;66H;[1;1H[51;66H [1;1H[?25h[?25l[51;66Hi[1;1H[51;66H [1;1H[51;1H[1m--[m[1m[37m[41m4[m[1m INSERT --[m[1m[37m[41mi[m[51;13H[K[51;76H0,1[11CAll[1;1H[?25h[?25l#[51;76H1,2[1;2H[?25h[?25li[51;78H3[1;3H[?25h[?25ln[51;78H4[1;4H[?25h[?25l[1;3H[K[51;78H3[1;3H[?25h[?25l[35m#if[m[51;78H4[1;4H[?25h[?25l#ifn[51;78H5[1;5H[?25h[?25ld[51;78H6[1;6H[?25h[?25le[51;78H7[1;7H[?25h[?25l[35m#ifndef[m[51;78H8[1;8H[?25h[?25l[35m [m[51;78H9[1;9H[?25h[?25l[35mC[m[51;78H10[1;10H[?25h[?25l[35mO[m[51;79H1[1;11H[?25h[?25l[35mU[m[51;79H2[1;12H[?25h[?25l[35mN[m[51;79H3[1;13H[?25h[?25l[35mT[m[51;79H4[1;14H[?25h[?25l[35mE[m[51;79H5[1;15H[?25h[?25l[35mR[m[51;79H6[1;16H[?25h[?25l[35m_[m[51;79H7[1;17H[?25h[?25l[35mH[m[51;79H8[1;18H[?25h[?25l[35mH[m[51;79H9[1;19H[?25h[?25l[35m_[m[51;78H20[1;20H[?25h[?25l[2;1H[K[51;76H2,1 [2;1H[?25h[?25l#[51;78H2[2;2H[?25h[?25ld[51;78H3[2;3H[?25h[?25le[51;78H4[2;4H[?25h[?25lf[51;78H5[2;5H[?25h[?25li[51;78H6[2;6H[?25h[?25ln[51;78H7[2;7H[?25h[?25l[35m#define[m[51;78H8[2;8H[?25h[?25l[35m [m[51;78H9[2;9H[?25h[?25l[35mC[m[51;78H10[2;10H[?25h[?25l[35mO[m[51;79H1[2;11H[?25h[?25l[35mU[m[51;79H2[2;12H[?25h[?25l[35mN[m[51;79H3[2;13H[?25h[?25l[35mT[m[51;79H4[2;14H[?25h[?25l[35mE[m[51;79H5[2;15H[?25h[?25l[35mR[m[51;79H6[2;16H[?25h[?25l[35m_[m[51;79H7[2;17H[?25h[?25l[35mH[m[51;79H8[2;18H[?25h[?25l[35mH[m[51;79H9[2;19H[?25h[?25l[35m_[m[51;78H20[2;20H[?25h[?25l[3;1H[K[51;76H3,1 [3;1H[?25h[?25l[4;1H[K[51;76H4[4;1H[?25h[?25lC[51;78H2[4;2H[?25h[?25ll[51;78H3[4;3H[?25h[?25la[51;78H4[4;4H[?25h[?25ls[51;78H5[4;5H[?25h[?25ls[51;78H6[4;6H[?25h[?25l[51;78H7[4;7H[?25h[?25lC[51;78H8[4;8H[?25h[?25lo[51;78H9[4;9H[?25h[?25lu[51;78H10[4;10H[?25h[?25ln[51;79H1[4;11H[?25h[?25lt[51;79H2[4;12H[?25h[?25le[51;79H3[4;13H[?25h[?25lr[51;79H4[4;14H[?25h[?25l{[51;79H5[4;15H[?25h[?25l
        [5;9H[K[51;76H5,2-9[5;9H[?25h[?25l
        [6;9H[K[51;76H6[6;9H[?25h[?25l}[4;14H[46m{

}[m[51;79H  [6;2H[?25h[?25l[4;14H{

}[51;76H5,1[5;1H[?25h[?25l[51;78H2-9[5;9H[?25h[?25l[51;76H4,2  [4;2H[?25h[?25llass Counter{[4;14H[K[51;78H1[4;1H[?25h[?25l[32mclass[m Counter{[51;78H2[4;2H[?25h[?25l[51;76H5,1[5;1H[?25h[?25l[51;78H2-9[5;9H[?25h[?25l[4;14H[46m{

}[m[51;76H4,14 [4;14H[?25h[?25l[46m [m{ [46m{[m[51;79H5[4;15H[?25h[?25l[46m:[m{:[46m{[m[51;79H6[4;16H[?25h[?25l[46m [m{ [46m{[m[51;79H7[4;17H[?25h[?25l[46mp[m{p[46m{[m[51;79H8[4;18H[?25h[?25l[46mu[m{u[46m{[m[51;79H9[4;19H[?25h[?25l[46mb[m{b[46m{[m[51;78H20[4;20H[?25h[?25l[46ml[m{l[46m{[m[51;79H1[4;21H[?25h[?25l[46mi[m{i[46m{[m[51;79H2[4;22H[?25h[?25l[33mpubli[m[33m[46mc[m{[33mc[m[46m{[m[51;79H3[4;23H[?25h[?25l[46m [m{ [46m{[m[51;79H4[4;24H[?25h[?25l[46mO[m{O[46m{[m[51;79H5[4;25H[?25h[?25l[46mp[m{p[46m{[m[51;79H6[4;26H[?25h[?25l[46ms[m{s[46m{[m[51;79H7[4;27H[?25h[?25l{

}[51;76H5,2-9[5;9H[?25h[?25lp[51;78H3-10[5;10H[?25h[?25l [51;78H2-9 [5;9H[?25h[?25lp[51;78H3-10[5;10H[?25h[?25lu[51;78H4-11[5;11H[?25h[?25lb[51;78H5-12[5;12H[?25h[?25ll[51;78H6-13[5;13H[?25h[?25li[51;78H7-14[5;14H[?25h[?25l[33mpublic[m[51;78H8-15[5;15H[?25h[?25l:[51;78H9-16[5;16H[?25h[?25l:[51;78H10-17[5;17H[?25h[?25l[6;50r[6;1H[L[1;51r[51;76H[K[51;76H6,2-9[9CAll[6;9H[?25h[?25l[51;78H1  [6;1H[?25h[?25l[5;50r[50;1H
[1;51r[5;9H[33mpublic[m::[50;1H[1m[34m~                                                                                            [m[51;76H[K[51;76H5,10-17[7CAll[5;17H[?25h[?25l [51;78H9-16 [5;16H[?25h[?25l[6;50r[6;1H[L[1;51r[51;76H[K[51;76H6,2-9[9CAll[6;9H[?25h[?25l[51;78H3-17[6;17H[?25h[?25li[51;78H4-18[6;18H[?25h[?25ln[51;78H5-19[6;19H[?25h[?25l[32mint[m[51;78H6-20[6;20H[?25h[?25l[51;78H7-21[6;21H[?25h[?25lc[51;78H8-22[6;22H[?25h[?25lo[51;78H9-23[6;23H[?25h[?25lm[51;78H10-24[6;24H[?25h[?25lp[51;79H1-25[6;25H[?25h[?25lc[51;79H2-26[6;26H[?25h[?25l[51;79H3-27[6;27H[?25h[?25l=[51;79H4-28[6;28H[?25h[?25l[51;79H5-29[6;29H[?25h[?25l[31m0[m[51;79H6-30[6;30H[?25h[?25l;[51;79H7-31[6;31H[?25h[?25l[7;50r[7;1H[L[1;51r[51;76H[K[51;76H7,2-9[9CAll[7;9H[?25h[?25l[51;78H3-17[7;17H[?25h[?25li[51;78H4-18[7;18H[?25h[?25ln[51;78H5-19[7;19H[?25h[?25l[32mint[m[51;78H6-20[7;20H[?25h[?25l[51;78H7-21[7;21H[?25h[?25ls[51;78H8-22[7;22H[?25h[?25lw[51;78H9-23[7;23H[?25h[?25la[51;78H10-24[7;24H[?25h[?25lp[51;79H1-25[7;25H[?25h[?25lc[51;79H2-26[7;26H[?25h[?25l;[51;79H3-27[7;27H[?25h[?25l [51;79H2-26[7;26H[?25h[?25l[51;79H3-27[7;27H[?25h[?25l=[51;79H4-28[7;28H[?25h[?25l[51;79H5-29[7;29H[?25h[?25l[31m0[m[51;79H6-30[7;30H[?25h[?25l;[51;79H7-31[7;31H[?25h[?25l[8;50r[8;1H[L[1;51r[51;76H[K[51;76H8,2-9[9CAll[8;9H[?25h[?25l[51;78H3-17[8;17H[?25h[?25li[51;78H4-18[8;18H[?25h[?25ln[51;78H5-19[8;19H[?25h[?25l[32mint[m[51;78H6-20[8;20H[?25h[?25l[51;78H7-21[8;21H[?25h[?25lc[51;78H8-22[8;22H[?25h[?25lo[51;78H9-23[8;23H[?25h[?25lm[51;78H10-24[8;24H[?25h[?25lp[51;79H1-25[8;25H[?25h[?25la[51;79H2-26[8;26H[?25h[?25lr[51;79H3-27[8;27H[?25h[?25le[51;79H4-28[8;28H[?25h[?25l([51;79H5-29[8;29H[?25h[?25li[51;79H6-30[8;30H[?25h[?25ln[51;79H7-31[8;31H[?25h[?25l[32mint[m[51;79H8-32[8;32H[?25h[?25l[51;79H9-33[8;33H[?25h[?25la[51;78H20-34[8;34H[?25h[?25l,[51;79H1-35[8;35H[?25h[?25l[51;79H2-36[8;36H[?25h[?25li[51;79H3-37[8;37H[?25h[?25ln[51;79H4-38[8;38H[?25h[?25l[32mint[m[51;79H5-39[8;39H[?25h[?25l[51;79H6-40[8;40H[?25h[?25lb[51;79H7-41[8;41H[?25h[?25l)[8;28H[46m([12C)[m[51;79H8-42[8;42H[?25h[?25l{[8;28H([12C)[46m{
}[m[51;79H9-43[8;43H[?25h[?25l[9;50r[9;1H[L[1;51r[9;1H[46m        [m
}[51;76H[K[51;76H9,3-17[8CAll[8;42H{
        [8C[?25h[?25l[10;50r[10;1H[L[1;51r[51;76H[K[51;76H10,3-17[7CAll[10;17H[?25h[?25l}[8;42H[46m{[10;17H}[m[51;79H4-18[10;18H[?25h[?25l[8;42H{[10;17H}[51;76H9,1    [9;1H[?25h[?25l[51;78H2-9[9;9H[?25h[?25l[51;78H3-17[9;17H[?25h[?25l[51;78H4-25[9;25H[?25h[?25lc[51;78H5-26[9;26H[?25h[?25lo[51;78H6-27[9;27H[?25h[?25lm[51;78H7-28[9;28H[?25h[?25lp[51;78H8-29[9;29H[?25h[?25la[51;78H9-30[9;30H[?25h[?25lr[51;78H10-31[9;31H[?25h[?25le[51;79H1-32[9;32H[?25h[?25lc[51;79H2-33[9;33H[?25h[?25l[9;32H[K[51;79H1-32[9;32H[?25h[?25l[9;31H[K[51;79H0-31[9;31H[?25h[?25l[9;30H[K[51;78H9-30 [9;30H[?25h[?25l[9;29H[K[51;78H8-29[9;29H[?25h[?25lc[51;78H9-30[9;30H[?25h[?25l[51;78H10-31[9;31H[?25h[?25l=[51;79H1-32[9;32H[?25h[?25l[51;79H2-33[9;33H[?25h[?25l[51;79H1-32[9;32H[?25h[?25l[9;31H[K[51;79H0-31[9;31H[?25h[?25l[51;78H9-30 [9;30H[?25h[?25l+[51;78H10-31[9;31H[?25h[?25l+[51;79H1-32[9;32H[?25h[?25l;[51;79H2-33[9;33H[?25h[?25l[10;50r[10;1H[L[1;51r[51;76H[K[51;76H10,4-25[7CAll[10;25H[?25h[?25lr[51;79H5-26[10;26H[?25h[?25le[51;79H6-27[10;27H[?25h[?25lt[51;79H7-28[10;28H[?25h[?25lu[51;79H8-29[10;29H[?25h[?25lr[51;79H9-30[10;30H[?25h[?25l[33mreturn[m[51;79H10-31[10;31H[?25h[?25l[51;80H1-32[10;32H[?25h[?25lO[51;80H2-33[10;33H[?25h[?25lp[51;80H3-34[10;34H[?25h[?25ls[51;80H4-35[10;35H[?25h[?25l:[51;80H5-36[10;36H[?25h[?25l:[51;80H6-37[10;37H[?25h[?25lc[51;80H7-38[10;38H[?25h[?25lo[51;80H8-39[10;39H[?25h[?25lm[51;80H9-40[10;40H[?25h[?25lp[51;79H20-41[10;41H[?25h[?25la[51;80H1-42[10;42H[?25h[?25lr[51;80H2-43[10;43H[?25h[?25le[51;80H3-44[10;44H[?25h[?25l([51;80H4-45[10;45H[?25h[?25la[51;80H5-46[10;46H[?25h[?25l,[51;80H6-47[10;47H[?25h[?25lb[51;80H7-48[10;48H[?25h[?25l)[46m([ma,b[46m)[m[51;80H8-49[10;49H[?25h[?25l;(a,b)[51;80H9-50[10;50H[?25h[?25l[51;77H1,5-25 [11;25H[?25h[?25l[12;50r[12;1H[L[1;51r[51;76H[K[51;76H12,3-17[7CAll[12;17H[?25h[?25li[51;79H4-18[12;18H[?25h[?25ln[51;79H5-19[12;19H[?25h[?25l[32mint[m[51;79H6-20[12;20H[?25h[?25l[51;79H7-21[12;21H[?25h[?25ls[51;79H8-22[12;22H[?25h[?25lw[51;79H9-23[12;23H[?25h[?25la[51;79H10-24[12;24H[?25h[?25lp[51;80H1-25[12;25H[?25h[?25l([51;80H2-26[12;26H[?25h[?25li[51;80H3-27[12;27H[?25h[?25ln[51;80H4-28[12;28H[?25h[?25l[32mint[m[51;80H5-29[12;29H[?25h[?25l[51;80H6-30[12;30H[?25h[?25la[51;80H7-31[12;31H[?25h[?25l{[46m{
}[m[51;80H8-32[12;32H[?25h[?25l}[46m}[m
}[51;80H9-33[12;33H[?25h[?25l,{}[51;79H20-34[12;34H[?25h[?25l[51;80H1-35[12;35H[?25h[?25li[51;80H2-36[12;36H[?25h[?25ln[51;80H3-37[12;37H[?25h[?25l[32mint[m[51;80H4-38[12;38H[?25h[?25l[51;80H5-39[12;39H[?25h[?25li[51;80H6-40[12;40H[?25h[?25l,[51;80H7-41[12;41H[?25h[?25l[51;80H8-42[12;42H[?25h[?25li[51;80H9-43[12;43H[?25h[?25ln[51;79H30-44[12;44H[?25h[?25l[32mint[m[51;80H1-45[12;45H[?25h[?25l[51;80H2-46[12;46H[?25h[?25lj[51;80H3-47[12;47H[?25h[?25l)[12;25H[46m([21C)[m[51;80H4-48[12;48H[?25h[?25l{[12;25H([21C)[46m{
}[m[51;80H5-49[12;49H[?25h[?25l[13;50r[13;1H[L[1;51r[13;1H[46m        [m
}[51;76H[K[51;76H13,4-25[7CAll[12;48H{
        [16C[?25h[?25l[14;50r[14;1H[L[1;51r[51;76H[K[51;76H14,4-25[7CAll[14;25H[?25h[?25l[14;17H}[12;48H[46m{[14;17H}[m[51;81H18[14;18H[?25h[?25l[12;48H{[14;17H}[51;77H3,1   [13;1H[?25h[?25l[51;79H2-9[13;9H[?25h[?25l[51;79H3-17[13;17H[?25h[?25l[51;79H4-25[13;25H[?25h[?25ls[51;79H5-26[13;26H[?25h[?25lw[51;79H6-27[13;27H[?25h[?25lp[51;79H7-28[13;28H[?25h[?25l[13;27H[K[51;79H6-27[13;27H[?25h[?25la[51;79H7-28[13;28H[?25h[?25lc[51;79H8-29[13;29H[?25h[?25lp[51;79H9-30[13;30H[?25h[?25l[13;29H[K[51;79H8-29[13;29H[?25h[?25l[13;28H[K[51;79H7-28[13;28H[?25h[?25lp[51;79H8-29[13;29H[?25h[?25lc[51;79H9-30[13;30H[?25h[?25l+[51;79H10-31[13;31H[?25h[?25l+[51;80H1-32[13;32H[?25h[?25l;[51;80H2-33[13;33H[?25h[?25l[31m4[m[51;80H3-34[13;34H[?25h[?25l[13;33H[K[51;80H2-33[13;33H[?25h[?25l[14;50r[14;1H[L[1;51r[51;76H[K[51;76H14,4-25[7CAll[14;25H[?25h[?25lr[51;79H5-26[14;26H[?25h[?25le[51;79H6-27[14;27H[?25h[?25lt[51;79H7-28[14;28H[?25h[?25lu[51;79H8-29[14;29H[?25h[?25lr[51;79H9-30[14;30H[?25h[?25l[33mreturn[m[51;79H10-31[14;31H[?25h[?25l[51;80H1-32[14;32H[?25h[?25lO[51;80H2-33[14;33H[?25h[?25lp[51;80H3-34[14;34H[?25h[?25ls[51;80H4-35[14;35H[?25h[?25l:[51;80H5-36[14;36H[?25h[?25l:[51;80H6-37[14;37H[?25h[?25ls[51;80H7-38[14;38H[?25h[?25lw[51;80H8-39[14;39H[?25h[?25la[51;80H9-40[14;40H[?25h[?25lp[51;79H20-41[14;41H[?25h[?25l([51;80H1-42[14;42H[?25h[?25la[51;80H2-43[14;43H[?25h[?25l,[51;80H3-44[14;44H[?25h[?25li[51;80H4-45[14;45H[?25h[?25l,[51;80H5-46[14;46H[?25h[?25lj[51;80H6-47[14;47H[?25h[?25l)[14;41H[46m([ma,i,j[46m)[m[51;80H7-48[14;48H[?25h[?25l;[14;41H(a,i,j)[51;80H8-49[14;49H[?25h[?25l[12;31H[46m{}[m[51;77H2,18-32[12;32H[?25h[?25l[51;80H9-33[12;33H[?25h[?25li, [32mint[m i, [32mint[m j){[12;31H{}[51;79H20-34[12;34H[?25h[?25l, [32mint[m i, [32mint[m j){[12;49H[K[12;31H[46m{}[m[51;79H19-33[12;33H[?25h[?25l[46m,[m [32mint[m i, [32mint[m j){[12;48H[K[12;32H,[16;1H[46m}[m[51;80H8-32[12;32H[?25h[?25l[46m,[m [32mint[m i, [32mint[m j){[12;47H[K[12;31H,[16;1H}[51;80H7-31[12;31H[?25h[?25l[, [32mint[m i, [32mint[m j[1m[37m[41m){[13;32H;[14;48H;[15;17H}
}[m[51;80H8-32[12;32H[?25h[?25l], [32mint[m i, [32mint[m j){[13;32H;[14;48H;[15;17H}
}[12;31H[46m[][m[51;80H9-33[12;33H[?25h[?25l[][15C[46m{[15;17H}[m[51;77H5,4-18 [15;18H[?25h[?25l[4;27H[46m{[m[12;48H{[15;17H}
[46m}[m[51;77H6,2   [16;2H[?25h[?25l;[4;27H{[16;1H}[51;79H3[16;3H[?25h[?25l[17;1H[K[51;77H7,1[17;1H[?25h[?25l#[51;79H2[17;2H[?25h[?25le[51;79H3[17;3H[?25h[?25ln[51;79H4[17;4H[?25h[?25ld[51;79H5[17;5H[?25h[?25li[51;79H6[17;6H[?25h[?25l[35m#endif[m[51;79H7[17;7H[?25h[?25l;[51;79H8[17;8H[?25h[51;1H[K[17;7H[?25l[51;66H^[[17;7H[51;66H  [17;8H[51;76H17,7[10CAll[17;7H[?25h[?25l[51;66Hi[17;7H[51;66H [17;7H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H17,7[10CAll[17;7H[?25h[?25l[51;79H8[17;8H[?25h[?25l[17;7H[K[51;79H7[17;7H[?25h[51;1H[K[17;6H[?25l[51;66H^[[17;6H[51;66H  [17;7H[51;76H17,6[10CAll[17;6H[?25h[?25l[51;66H:[17;6H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" [New] 17L, 276C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ ma[K[Kvim counter.hhrm -f counter ..hh[3Pvim counter ..hrm -f counter.hhcc[2Pvim[C[C[C[C[C[C[C[C[C[C[Cmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:12:7:[m[K [01;31m[Kerror: [m[Kconflicting return type specified for â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™
   int [01;31m[Kswap[m[K(int a[], int i, int j){
       [01;31m[K^~~~[m[K
In file included from [01m[Kmain.cc:9[m[K:
[01m[Kops.hh:12:16:[m[K [01;36m[Knote: [m[Koverridden function is â€˜[01m[Kvirtual void Ops::swap(int*, int, int)[m[Kâ€™
   virtual void [01;36m[Kswap[m[K(int a[], int i, int j);
                [01;36m[K^~~~[m[K
In file included from [01m[Kmain.cc:11[m[K:
[01m[Kcounter.hh:[m[K In member function â€˜[01m[Kvirtual int Counter::swap(int*, int, int)[m[Kâ€™:
[01m[Kcounter.hh:14:26:[m[K [01;31m[Kerror: [m[Kvoid value not ignored as it ought to be
    return Ops::swap(a,i,j[01;31m[K)[m[K;
                          [01;31m[K^[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:18:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KCounter**[m[Kâ€™ to â€˜[01m[KOps*[m[Kâ€™ in argument passing
   sort(a, n, &ops[01;31m[K)[m[K;
                  [01;31m[K^[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc < 3) {
    [32m[K~~[m[K                                                   
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile[5Pvim counter.hh
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"counter.hh" 17L, 276C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#ifndef COUNTER_HH_
#define COUNTER_HH_[m

[32mclass[m Counter : [33mpublic[m Ops{[5;9H[33mpublic[m:[6;17H[32mint[m compc = [31m0[m;[7;17H[32mint[m swapc = [31m0[m;[8;17H[32mint[m compare([32mint[m a, [32mint[m b){[9;25Hcompc++;[10;25H[33mreturn[m Ops::compare(a,b);[11;17H}[12;17H[32mint[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[13;25Hswapc++;[14;25H[33mreturn[m Ops::swap(a,i,j);[15;17H}
};
[35m#endif[m
[1m[34m~                                                                                            [19;1H~                                                                                            [20;1H~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H17,6[10CAll[17;6H[?25h[?1000l[?1002h[?25l[51;77H2,6-20[12;20H[?25h[?25l[51;66Hi[12;20H[51;66H [12;20H[51;1H[1m-- INSERT --[m[51;14H[K[51;76H12,6-20[7CAll[12;20H[?25h[?25lin swap([32mint[m a[], [32mint[m i, [32mint[m j){[12;48H[K[51;79H5-19[12;19H[?25h[?25l swap([32mint[m a[], [32mint[m i, [32mint[m j){[12;47H[K[51;79H4-18[12;18H[?25h[?25l swap([32mint[m a[], [32mint[m i, [32mint[m j){[12;46H[K[51;79H3-17[12;17H[?25h[?25lv swap([32mint[m a[], [32mint[m i, [32mint[m j){[51;79H4-18[12;18H[?25h[?25lo swap([32mint[m a[], [32mint[m i, [32mint[m j){[51;79H5-19[12;19H[?25h[?25li swap([32mint[m a[], [32mint[m i, [32mint[m j){[51;79H6-20[12;20H[?25h[?25l[32mvoid[m swap([32mint[m a[], [32mint[m i, [32mint[m j){[51;79H7-21[12;21H[?25h[51;1H[K[12;20H[?25l[51;66H^[[12;20H[51;66H  [12;21H[51;76H12,6-20[7CAll[12;20H[?25h[?25l[51;66H:[12;20H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"counter.hh" 17L, 277C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ make[K[K[K[Kvim counter.hhmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:[m[K In function â€˜[01m[Kvoid go(SortP, std::__cxx11::string, bool, int)[m[Kâ€™:
[01m[Kmain.cc:97:18:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KCounter**[m[Kâ€™ to â€˜[01m[KOps*[m[Kâ€™ in argument passing
   sort(a, n, &ops[01;31m[K)[m[K;
                  [01;31m[K^[m[K
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:103:56:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kif[m[Kâ€™
    std::cout<<"n       compares       swaps"<<std::endl
                                                        [01;31m[K^[m[K
                                                        [32m[K;[m[K
    [32m[Kif[m[K (argc < 3) {
    [32m[K~~[m[K                                                   
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile[5Pvim counter.hhmake -f ../Makefile[5Pvim counter.hhrm -f counter ..hh[3Pvim counter ..hrm -f counter.hhcc[2Pvim[C[C[C[C[C[C[C[C[C[C[Cmake -f ../Makefilecd exercises/3-stats/for x in `seq 50`; do echo -n " $RANDOM";done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CFOR X IN `SEQ
[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor x in `seq
[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[16Pcd exercises/3-stats/
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pmake -f ../Makefile[5Pvim counter.cc[2@rm -f[C[C[C[C[C[C[C[C[C[C[Chh[1Pvim counter ..hrm -f counter ..hh[4Pvim counter.hhmake -f ../Makefile[5Pvim counter.hhmake -f ../Makefile[Kvim main.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H[1m[37m[41mE325: ATTENTION[m
Found a swap file by the name ".main.cc.swp"
[10Cowned by: rgeary1   dated: Thu Apr  2 20:43:16 2020
[9Cfile name: ~rgeary1/projects/i240a/submit/lab9/exercises/3-stats/main.cc
[10Cmodified: YES
[9Cuser name: rgeary1   host name: remote03
[8Cprocess ID: 1028976
While opening file "main.cc"
[13Cdated: Thu Apr  2 20:59:37 2020
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r main.cc"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".main.cc.swp"
    to avoid this message.
[?1000l
[32mSwap file ".main.cc.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[?1000h[m[51;1H[K[?25l[51;1H"main.cc" 125L, 3173C
Using swap file ".main.cc.swp"
Original file "~/projects/i240a/submit/lab9/exercises/3-stats/main.cc"
[1m[37m[41mE308: Warning: Original file may have been changed[m
Recovery completed. You should check if everything is OK.
(You might want to write out this file under another name
and run diff with the original file to check for changes)
You may want to delete the .swp file now.


[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[?1000l[51;1H[32mPress ENTER or type command to continue[?25h[?1002h[m[1;1H[10L[?25l[1;1H[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"ops.hh"[m
[35m#include [m[31m"sorts.hh"[m
[35m#include [m[31m"counter.hh"[m

[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.
 */[m
Counter ops;
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath, [32mint[m n)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream file;
  [33mif[m (!isStdin) file.open(filePath);
  std::istream& in = (isStdin) ? std::cin : file;
  [33mif[m (!in) {
    [33mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[26;33H[31m": "[m + std::strerror(errno));
  }
  std::vector<[32mint[m> ints;
  [33mfor[m ([32mint[m i = [31m0[m; n < [31m0[m || i < n; ++i) {
    [32mint[m v;[30;11H[K[31;1H    in >> v;[31;14H[K[32;5H[33mif[m (in.eof()) {[32;21H[K[33;7H[33mif[m (n > [31m0[m) {[33;19H[K[34;9Hstd::cerr << [31m"got eof on while reading "[m << filePath[35;10H         << [31m" after reading "[m << i << [31m" ints; expected "[m << n[36;9H          << std::endl;
        std::exit([31m1[m);[37;22H[K[38;7H}[38;14H[K[39;7H[33mbreak[m;[39;13H[K[40;5H}
    ints.push_back(v);[41;23H[K[42;3H}[42;5H[K[43;3H[33mreturn[m ints;[43;15H[K[44;1H}[44;2H[K[45;5H[K[46;1H[34m//type for pointer to a sorting function [m[46;42H[K[47;1H[33musing[m SortP = [32mvoid[m (*)([32mint[m a[], [32mint[m n, Ops* ops);[47;51H[K[48;5H[K[49;1H[34m//map algorithm name to corresponding function[m
[32mstruct[m Algorithm {[50;19H[K[51;1H[K[51;76H16,8[10CTop[16;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::string name;
  SortP sort;
};[51;76H[K[51;76H16,8[11C4%[13;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },[51;76H[K[51;76H16,8[11C8%[10;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },[51;76H[K[51;76H16,8[10C12%[7;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H18,8[10C16%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.
 */[m[51;76H[K[51;76H21,8[10C20%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[32mstatic[m SortP
getSort(std::string name)
{[51;76H[K[51;76H24,8[10C24%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;12H[46m{[6;3H}[m[48;3Hstd::string names;
  [33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;[51;76H[K[51;76H27,3[10C28%[6;3H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;3H}[48;5H[33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;[51;76H[K[51;76H30,8[10C32%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  std::cerr << [31m"unknown algorithm "[m << name[50;13H<< [31m" must be one of "[m << names << std::endl;[51;76H[K[51;76H33,8[10C36%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::exit([31m1[m);
}[51;76H[K[51;76H36,1-8[8C40%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)[51;76H[K[51;76H39,8[10C44%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;[51;76H[K[51;76H42,3[10C48%[6;3H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  std::cout << std::endl;
}[51;76H[K[51;76H45,0-1[8C52%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mstatic[m [32mvoid[m
go(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)[51;76H[K[51;76H48,0-1[8C56%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H{
  std::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);
  [32mint[m* a = ints.data();[51;76H[K[51;76H51,8[10C60%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mint[m n = ints.size();
  sort(a, n, &ops);
  [33mif[m (isVerbose) outArray(a, n);[51;76H[K[51;76H54,0-1[8C64%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H}

[32mint[m[51;76H[K[51;76H57,8[10C68%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1Hmain([32mint[m argc, [32mchar[m* argv[]) {
   std::cout<<[31m"n       compares       swaps"[m<<std::endl
   [33mif[m (argc < [31m3[m) {[51;76H[K[51;76H60,8[10C72%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;4Hstd::cerr << [31m"usage: "[m << argv[[31m0[m][49;12H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;
   std::exit([31m1[m);[51;76H[K[51;76H63,8[10C76%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  [32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;
  [32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;[51;76H[K[51;76H66,8[10C80%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];
  [32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);
  SortP sort = getSort(algorithm);[51;76H[K[51;76H69,8[10C84%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;8H[46m([15C)[m[48;3H[32mint[m sizeArgsIndex = [31m3[m + nVerbose;
  [33mif[m (sizeArgsIndex == argc) {
    go(sort, filePath, isVerbose, -[31m1[m);[51;76H[K[51;76H72,8[10C88%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;8H([15C)[48;3H}
  [33melse[m {
    [33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[51;76H[K[51;76H75,4[10C92%[6;4H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;7H[32mint[m nRead = atoi(argv[i]);[49;7Hgo(sort, filePath, isVerbose, nRead);[50;7Hstd::cout<<nRead<<[31m"    "[m << ops->compc << [31m"    "[m <<ops->swapc<<std::endl;[51;76H[K[51;76H78,8[10C96%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H}
  }
}[51;76H[K[51;76H81,8[10CBot[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;1H[46m{[11;1H}[m[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H84,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;1H{[4;31H[46m{

[m  [46m}[m

}[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H87,3[10CBot[6;3H[?25h[?25l[1;50r[1;1H[3M[1;51r[1;31H{

  }[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H90,0-1[8CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;1H[46m{[12;1H}[m[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H93,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;1H{[9;1H}[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H96,8[10CBot[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H99,1[10CBot[6;1H[?25h[?25l[9;30H[46m{[32;1H}[m[51;76H102,30[9;30H[?25h[?25l{[32;1H}[51;78H3,55[10;55H[?25h[?25l[51;66Hi[10;55H[51;66H [10;55H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H103,55[8CBot[10;55H[?25h[?25l[51;81H6[10;56H[?25h[?25l;[51;81H7[10;57H[?25h[51;1H[K[10;56H[?25l[51;66H^[[10;56H[51;66H  [10;57H[51;76H103,56[8CBot[10;56H[?25h[?25l[51;66H:[10;56H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"main.cc" 125L, 3173C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ vim main.ccmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
[01m[Kmain.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kmain.cc:122:38:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[KCounter[m[Kâ€™
       std::cout<<nRead<<"    " << ops[01;31m[K->[m[Kcompc << "    " <<ops->swapc<<std::endl;
                                      [01;31m[K^~[m[K
[01m[Kmain.cc:122:61:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[KCounter[m[Kâ€™
       std::cout<<nRead<<"    " << ops->compc << "    " <<ops[01;31m[K->[m[Kswapc<<std::endl;
                                                             [01;31m[K^~[m[K
make: *** [../Makefile:48: main.o] Error 1
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ make -f ../Makefile[8Pvim main.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H[1m[37m[41mE325: ATTENTION[m
Found a swap file by the name ".main.cc.swp"
[10Cowned by: rgeary1   dated: Thu Apr  2 20:43:16 2020
[9Cfile name: ~rgeary1/projects/i240a/submit/lab9/exercises/3-stats/main.cc
[10Cmodified: YES
[9Cuser name: rgeary1   host name: remote03
[8Cprocess ID: 1028976
While opening file "main.cc"
[13Cdated: Thu Apr  2 21:10:04 2020
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r main.cc"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".main.cc.swp"
    to avoid this message.
[?1000l
[32mSwap file ".main.cc.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[?1000h[m[51;1H[K[?25l[51;1H"main.cc" 125L, 3173C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;3Hstd::cerr << [31m"unknown algorithm "[m << name[2;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);
}

[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)
{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;
  }
  std::cout << std::endl;
}

[32mstatic[m [32mvoid[m
go(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)
{
  std::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);
  [32mint[m* a = ints.data();
  [32mint[m n = ints.size();
  sort(a, n, &ops);
  [33mif[m (isVerbose) outArray(a, n);
}

[32mint[m
main([32mint[m argc, [32mchar[m* argv[]) {
   std::cout<<[31m"n       compares       swaps"[m<<std::endl;
   [33mif[m (argc < [31m3[m) {
   std::cerr << [31m"usage: "[m << argv[[31m0[m]
           << [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;
   std::exit([31m1[m);[32;17H[K[33;3H}[33;10H[K[34;3H[32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;
  [32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;[35;39H[K[36;3H[32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];
  [32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);
  SortP sort = getSort(algorithm);[38;35H[K[39;3H[32mint[m sizeArgsIndex = [31m3[m + nVerbose;
  [33mif[m (sizeArgsIndex == argc) {
    go(sort, filePath, isVerbose, -[31m1[m);[41;40H[K[42;3H}[42;5H[K[43;3H[33melse[m {[43;10H[K[44;1H    [33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {
      [32mint[m nRead = atoi(argv[i]);[45;33H[K[46;5H  go(sort, filePath, isVerbose, nRead);[46;44H[K[47;5H  std::cout<<nRead<<[31m"    "[m << ops->compc << [31m"    "[m <<ops->swapc<<std::endl;
    }[48;6H[K[49;3H}
}[50;2H[K[51;76H103,56[8CBot[28;56H[?25h[?1000l[?1002h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;1H[K[51;76H103,56[8CBot[25;56H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H103,56[8CBot[22;56H[?25h[?25l[51;77H22,39[41;39H[?25h[?25l[51;66Hi[41;39H[51;66H [41;39H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H122,39[8CBot[41;39H[?25h[?25l[51;80H40[41;40H[?25h[?25lcompc << [31m"    "[m <<ops->swapc<<std::endl;[41;79H[K[51;80H39[41;39H[?25h[?25lcompc << [31m"    "[m <<ops->swapc<<std::endl;[41;78H[K[51;81H8[41;38H[?25h[?25l.compc << [31m"    "[m <<ops->swapc<<std::endl;[51;81H9[41;39H[?25h[?25l[51;80H62[41;62H[?25h[?25lswapc<<std::endl;[41;78H[K[51;81H1[41;61H[?25h[?25lswapc<<std::endl;[41;77H[K[51;81H0[41;60H[?25h[?25l.swapc<<std::endl;[51;81H1[41;61H[?25h[51;1H[K[41;60H[?25l[51;66H^[[41;60H[51;66H  [41;61H[51;76H122,60[8CBot[41;60H[?25h[?25l[51;66H:[41;60H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"main.cc" 125L, 3171C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ vim main.ccmake -f ../Makefile
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ sorts.o ops.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main sorts.o ops.o main.o; do echo $t >>.gitignore; done
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ ./main quickSort ../../random.dat `se q 10000 10000 100000`
n       compares       swaps
10000    210075    38322
20000    672555    119848
30000    1366659    246872
40000    2344843    419724
50000    3597319    640736
60000    5104416    911190
70000    6931656    1229680
80000    9070415    1597625
90000    11481366    2015551
100000    14232703    2484790
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ ./main quickSort ../../random.dat `seq 10000 10000 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 1[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 10[C[C[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 100[C[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 1000[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 10000[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 10000 [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 10000 1[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 10000 10[C[C[C[1P 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci ../../random.dat `seq 10000 1[C[C[C0 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn ../../random.dat `seq 10000 [1@1[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs ../../random.dat `seq 10000[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce ../../random.dat `seq 1000[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr ../../random.dat `seq 100[C[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct ../../random.dat `seq 10[C[C[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci ../../random.dat `seq 1[C[C[C[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co ../../random.dat `seq [1@1[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn ../../random.dat `seq[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CS ../../random.dat `se[1@q[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co ../../random.dat `s[1@e[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr ../../random.dat `[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct ../../random.dat [1@`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./main insertionSort  ../../random.dat `seq 10000 10000 100000`[C[C[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[1P`[C[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kquit
bash: quit: command not found
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ quit./main quickSort ../../random.dat `seq 10000 10000 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 1[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 10[C[C[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 100[C[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 1000[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 10000[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 10000 [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 10000 1[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C ../../random.dat `seq 10000 10[C[C[C[1P 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci ../../random.dat `seq 10000 1[C[C[C0 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn ../../random.dat `seq 10000 [1@1[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs ../../random.dat `seq 10000[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce ../../random.dat `seq 1000[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr ../../random.dat `seq 100[C[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct ../../random.dat `seq 10[C[C[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci ../../random.dat `seq 1[C[C[C[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co ../../random.dat `seq [1@1[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn ../../random.dat `seq[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CS ../../random.dat `se[1@q[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co ../../random.dat `s[1@e[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr ../../random.dat `[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ct ../../random.dat [1@`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cquit[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./main insertionSort ../../random.dat `seq 10000 10000 100000`[C[C[C[1P`[1P`[1P`[1P`0`0`0`[1P 10000`[1P 10000`[1P 10000`[1P 10000`[1P 10000`[1P10000`[C 10000`2 10000`0 10000`0 10000`0 10000`[1P[1P[1P[1P[1P[1@2[1@0[1@0[1@0
n       compares       swaps
2000    993446    991454
4000    4966662    4960678
6000    13926092    13914117
8000    30088339    30068373
10000    54962502    54932545
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ ./main insertionSort ../../random.dat `seq 2000 2000 10000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `s[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `se[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `seq[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `seq [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `seq 2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca.dat `seq [1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs.dat `seq[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cc.dat `se[1@q[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce.dat `s[1@e[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd.dat `[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `s[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn.dat `[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd.dat [1@`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci.dat[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn.da[1@t[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg.d[1@a[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

n       compares       swaps
2000    1999    0
4000    5998    0
6000    11997    0
8000    19996    0
10000    29995    0
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ ./main insertionSort ../../ascending.dat `seq 2000 2000 10000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.da[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `s[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `se[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `seq[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `seq [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.dat `seq 2[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd.dat `seq [1@2[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce.dat `seq[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cs.dat `se[1@q[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cc.dat `s[1@e[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ce.dat `[1@s[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn.dat [1@`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cd.dat[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci.da[1@t[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn.d[1@a[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg.[1@d
n       compares       swaps
2000    1999000    1999000
4000    9997000    9997000
6000    27994000    27994000
8000    59990000    59990000
10000    109985000    109985000
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ for a in ][K[K[K[K[K[K[K[K[K[K$alf[Kgo[K0 = "inserta[KionSort bubbleSort sel ectionSort"
bash: =: command not found
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ $alg0 = "insertionSort bubbleSort selectionSort"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C= "insertionSort bubbleSort selec[1PtionSort"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C"insertionSort bubbleSort select[1PionSort"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

bash: =insertionSort bubbleSort selectionSort: command not found
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ $alg0="insertionSort bubbleSort selectionSort"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Calg0="insertionSort bubbleSort selecti[1PonSort"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ alg1 [K="mergeSort quickSort"
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ for a in $alg0; do \ ./main $a ../../ random.dat `seq 1000 1000 10000` > $a.dat; \ done
> 
> 
> 
> 
> 
> 
> 
> 
> one
> done
bash:  ./main: No such file or directory
bash:  done: command not found
bash: one: command not found
bash:  ./main: No such file or directory
bash:  done: command not found
bash: one: command not found
bash:  ./main: No such file or directory
bash:  done: command not found
bash: one: command not found
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ for a in $alg0; do \ ./main $a ../../random.dat `seq 1000 1000 10000` > $a.dat; \ done one; done[A[11Palg1="mergeSort quickSort"
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0; do \ ./main $a ../../random.dat `seq 1000 1000 10000` > $a.dat; \ done one; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

bash:  ./main: No such file or directory
bash:  done: command not found
bash:  ./main: No such file or directory
bash:  done: command not found
bash:  ./main: No such file or directory
bash:  done: command not found
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ for a in $alg0; do \ ./main $a ../../random.dat `seq 1000 1000 10000` > $a.dat; \ done one; done[C[C[C[K[K[K[K[K[K[K[K[K[K;
> 
> 
> 
> 
> e[Kdone
bash:  ./main: No such file or directory
bash:  done: command not found
bash:  ./main: No such file or directory
bash:  done: command not found
bash:  ./main: No such file or directory
bash:  done: command not found
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ for a in $alg0; do \ ./main $a ../../random.dat `seq 1000 1000 10000` > $a.dat; \ done; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./main $a ../../ra[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./main $a ../../ran[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0; do ./main $a ../../random.dat `seq 1000 1000 10000` > $a.dat; \ done; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\ ./main $a ../../r[6@andom.dat `seq 1000 1000 10000` > $a.dat; \ done [C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./main $a ../../ran[6Pdom.dat `seq 1000 1000 10000` > $a.dat; \ d[C[C[C[C[C[C[C[C[C[A[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0; do ./main $a ../../random.dat `seq 1000 1000 10000` > $a.dat; \ done; done[C[K[K[K[K[K[1Pdone;[1Pdone;[1Pdone; done;[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ for a in $alg0; do ./main $a ../../random.dat `seq 1000 1000 10000` > $a.dat; done;[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C\ ./main $a ../../random.dat `seq 1000 1000 10000` > $a.dat; \ done; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./main $a ../../ran[9Pdom.dat `seq 1000 1000 10000` > $a.dat; done;[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C; do ./main $a ../../rand[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1; do ./main $a ../../ran[1@d[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@0[C[C[C[C[1@-[1P[C[C[1@0[C[C[C[C[C[C[C[C[1@0
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ for a in $alg0 $alg1; do ../plot $a.d at > a.pngl[K; done
bash: ../plot: No such file or directory
bash: ../plot: No such file or directory
bash: ../plot: No such file or directory
bash: ../plot: No such file or directory
bash: ../plot: No such file or directory
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ cd ..
rgeary1@remote05:~/i240a/submit/lab9/exercises$ ;[Kls
2-sorts  3-stats  4-time  Makefile  plot.gp
rgeary1@remote05:~/i240a/submit/lab9/exercises$ lscd ..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd ..[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3Pls[Kcd 3-stats/
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ cd 3-stats/ls[Kcd ..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C. $a.d[1@a[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cg $a.[1@d[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cp $a[1@.[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ vim plot.gp
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"plot.gp" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[1m[34m~                                                                                            [3;1H~                                                                                            [4;1H~                                                                                            [5;1H~                                                                                            [6;1H~                                                                                            [7;1H~                                                                                            [8;1H~                                                                                            [9;1H~                                                                                            [10;1H~                                                                                            [11;1H~                                                                                            [12;1H~                                                                                            [13;1H~                                                                                            [14;1H~                                                                                            [15;1H~                                                                                            [16;1H~                                                                                            [17;1H~                                                                                            [18;1H~                                                                                            [19;1H~                                                                                            [20;1H~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H0,0-1[9CAll[1;1H[?25h[?1000l[?1002h[?25l[51;66H:[1;1H[51;1H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"plot.gp" [New] 0L, 0C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ rm -rf plot.gp 
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ cd ..
rgeary1@remote05:~/i240a/submit/lab9/exercises$ vim plot.gp 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"plot.gp" 10L, 148C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H#!/usr/bin/gnuplot -c

set terminal png

set key autotitle columnhead

stats ARG1 nooutput

plot [33mfor[m [i=2:STATS_columns] ARG1 using 1:i with [33mlines[m

[1m[34m~                                                                                            [12;1H~                                                                                            [13;1H~                                                                                            [14;1H~                                                                                            [15;1H~                                                                                            [16;1H~                                                                                            [17;1H~                                                                                            [18;1H~                                                                                            [19;1H~                                                                                            [20;1H~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H1,1[11CAll[1;1H[?25h[?1000l[?1002h[?25l[51;66H^[[1;1H[51;66H  [1;1H[51;66H^[[1;1H[51;66H  [1;1H[?25h[?25l[51;66H:[1;1H[51;1H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"plot.gp" 10L, 148C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab9/exercises$ gnuplot plot.gp 
"plot.gp" line 7: warning: Cannot find or open file " "
"plot.gp" line 7: warning: Can't read data file
"plot.gp" line 9: undefined variable: STATS_columns

rgeary1@remote05:~/i240a/submit/lab9/exercises$ cd 3-stats/
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ ls
a.png		counter.o	   main.cc	  ops.cc  quickSort.dat      sorts.hh
bubbleSort.dat	insertionSort.dat  main.o	  ops.hh  selectionSort.dat  sorts.o
counter.hh	main		   mergeSort.dat  ops.o   sorts.cc
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ vim bubbleSort.dat 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"bubbleSort.dat" 11L, 314C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1Hn[7Ccompares[7Cswaps
1000    499500    251789
2000    2498500    1243243
3000    6997000    3494998
4000    14995000    7464222
5000    27492500    13656366
6000    45489500    22609805
7000    69986000    34894383
8000    101982000    51048639
9000    142477500    71350217
10000    192472500    96214389
[1m[34m~                                                                                            [13;1H~                                                                                            [14;1H~                                                                                            [15;1H~                                                                                            [16;1H~                                                                                            [17;1H~                                                                                            [18;1H~                                                                                            [19;1H~                                                                                            [20;1H~                                                                                            [21;1H~                                                                                            [22;1H~                                                                                            [23;1H~                                                                                            [24;1H~                                                                                            [25;1H~                                                                                            [26;1H~                                                                                            [27;1H~                                                                                            [28;1H~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H1,1[11CAll[1;1H[?25h[?1000l[?1002h[?25l[51;66H^[[1;1H[51;66H  [1;1H[51;66H^[[1;1H[51;66H  [1;1H[?25h[?25l[51;66H:[1;1H[51;1H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"bubbleSort.dat" 11L, 314C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ vim bubbleSort.dat ls[Kcd 3-stats/gnuplot plot.gp [4Pvim[C[C[C[C[C[C[C[C[C[7Pcd ..rm -rf plot.gp [4Pvim plot.gpfor a in $alg0 $alg1; do ../plot.gp $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0 $alg1; do ../plot.gp $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd ..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done
bash: ../plot: No such file or directory
bash: ../plot: No such file or directory
bash: ../plot: No such file or directory
bash: ../plot: No such file or directory
bash: ../plot: No such file or directory
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ cd..[K[K ..
rgeary1@remote05:~/i240a/submit/lab9/exercises$ la
bash: la: command not found
rgeary1@remote05:~/i240a/submit/lab9/exercises$ ls
2-sorts  3-stats  4-time  Makefile  plot.gp
rgeary1@remote05:~/i240a/submit/lab9/exercises$ mkdir plot
rgeary1@remote05:~/i240a/submit/lab9/exercises$ cd 3-stats/
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ cd 3-stats/[1Pmkdir plotls[Kacd ..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[18Pvim bubbleSort.dat 
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0 $alg1; do ../plot $a.dat > a.png; done
bash: ../plot: Is a directory
bash: ../plot: Is a directory
bash: ../plot: Is a directory
bash: ../plot: Is a directory
bash: ../plot: Is a directory
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ cd ..
rgeary1@remote05:~/i240a/submit/lab9/exercises$ cd plot
rgeary1@remote05:~/i240a/submit/lab9/exercises/plot$ ls
rgeary1@remote05:~/i240a/submit/lab9/exercises/plot$ lscd plot[2P..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd ..[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cplot[2P..[K.
rgeary1@remote05:~/i240a/submit/lab9/exercises$ cd 3-stats/
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ cd 3-stats/..[K[3Plscd plot[2P..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pmkdir plotls[Kmkdir plotcd 3-stats/for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd ..[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0 $alg1; do ../plot $a.dat > a.png; done[C[C[1@$
bash: ../plot: Is a directory
bash: ../plot: Is a directory
bash: ../plot: Is a directory
bash: ../plot: Is a directory
bash: ../plot: Is a directory
rgeary1@remote05:~/i240a/submit/lab9/exercises/3-stats$ cd ..
rgeary1@remote05:~/i240a/submit/lab9/exercises$ cd plot
rgeary1@remote05:~/i240a/submit/lab9/exercises/plot$ ls
rgeary1@remote05:~/i240a/submit/lab9/exercises/plot$ lscd plot[2P..for a in $alg0 $alg1; do ../plot $a.dat > $a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd ..[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cplotls[K[Kcd ..
rgeary1@remote05:~/i240a/submit/lab9/exercises$ cd 4
bash: cd: 4: No such file or directory
rgeary1@remote05:~/i240a/submit/lab9/exercises$ cd 4-time/
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ ls
now.cc	now.hh
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ cp ../2-sorts/* .
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ ls
main  main.cc  main.o  now.cc  now.hh  sorts.cc  sorts.hh  sorts.o
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ rm *.o
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ ls
main  main.cc  now.cc  now.hh  sorts.cc  sorts.hh
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ vim main.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"main.cc" 121L, 2972C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<vector>[m

[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m

[35m#include [m[31m"sorts.hh"[m

[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.
 */[m
[32mstatic[m std::vector<[32mint[m>
readIntsFromFile([32mconst[m std::string filePath, [32mint[m n)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;
  std::ifstream file;
  [33mif[m (!isStdin) file.open(filePath);
  std::istream& in = (isStdin) ? std::cin : file;
  [33mif[m (!in) {
    [33mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[23;33H[31m": "[m + std::strerror(errno));
  }
  std::vector<[32mint[m> ints;
  [33mfor[m ([32mint[m i = [31m0[m; n < [31m0[m || i < n; ++i) {
    [32mint[m v;
    in >> v;
    [33mif[m (in.eof()) {[30;7H[33mif[m (n > [31m0[m) {[31;9Hstd::cerr << [31m"got eof on while reading "[m << filePath[32;19H<< [31m" after reading "[m << i << [31m" ints; expected "[m << n[33;19H<< std::endl;[34;9Hstd::exit([31m1[m);[35;7H}[36;7H[33mbreak[m;
    }
    ints.push_back(v);
  }
  [33mreturn[m ints;
}

[34m//type for pointer to a sorting function [m
[33musing[m SortP = [32mvoid[m (*)([32mint[m a[], [32mint[m n);

[34m//map algorithm name to corresponding function[m
[32mstruct[m Algorithm {
  std::string name;
  SortP sort;
};[51;76H1,1[11CTop[1;1H[?25h[?1000l[?1002h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },[51;1H[K[51;76H9,1[12C4%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },[51;76H[K[51;76H12,1[11C8%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H15,1[10C12%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.
 */[m[51;76H[K[51;76H18,1[10C16%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[32mstatic[m SortP
getSort(std::string name)
{[51;76H[K[51;76H21,1[10C21%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::string names;
  [33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;[51;76H[K[51;76H24,1[10C25%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;[51;76H[K[51;76H27,1[10C29%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  std::cerr << [31m"unknown algorithm "[m << name[50;13H<< [31m" must be one of "[m << names << std::endl;[51;76H[K[51;76H30,1[10C33%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::exit([31m1[m);
}[51;76H[K[51;76H33,1-8[8C38%[6;8H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)[51;76H[K[51;76H36,1[10C42%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;[51;76H[K[51;76H39,1[10C46%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  std::cout << std::endl;
}[51;76H[K[51;76H42,0-1[8C50%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[50;1H[32mstatic[m [32mvoid[m[51;76H[K[51;76H45,0-1[8C54%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1Hgo(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)
{
  std::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);[51;76H[K[51;76H48,1[10C59%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mint[m* a = ints.data();
  [32mint[m n = ints.size();
  sort(a, n);[51;76H[K[51;76H51,0-1[8C63%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mif[m (isVerbose) outArray(a, n);
}[51;76H[K[51;76H54,1[10C67%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[32mint[m
main([32mint[m argc, [32mchar[m* argv[]) {
  [33mif[m (argc < [31m3[m) {[51;76H[K[51;76H57,1[10C71%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hstd::cerr << [31m"usage: "[m << argv[[31m0[m][49;15H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;
    std::exit([31m1[m);[51;76H[K[51;76H60,1[10C76%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  [32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;
  [32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;[51;76H[K[51;76H63,1[10C80%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];
  [32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);
  SortP sort = getSort(algorithm);[51;76H[K[51;76H66,1[10C84%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mint[m sizeArgsIndex = [31m3[m + nVerbose;
  [33mif[m (sizeArgsIndex == argc) {
    go(sort, filePath, isVerbose, -[31m1[m);[51;76H[K[51;76H69,1[10C88%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
  [33melse[m {
    [33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[51;76H[K[51;76H72,1[10C92%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;7H[32mint[m nRead = atoi(argv[i]);[49;7Hgo(sort, filePath, isVerbose, nRead);
    }[51;76H[K[51;76H75,1[10C97%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H}
}
[1m[34m~                                                                                            [m[51;76H[K[51;76H78,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;1H[46m{[11;1H}[m[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H81,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;1H{[8;1H}[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H84,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H87,0-1[8CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H90,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;
  }[51;76H[K[51;76H90,1[10CBot[9;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)
{[51;76H[K[51;76H90,1[10CBot[12;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H}

[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m[51;76H[K[51;76H90,1[10CBot[15;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::cerr << [31m"unknown algorithm "[m << name[2;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);[51;76H[K[51;76H90,1[10CBot[18;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;
  }[51;76H[K[51;76H90,1[10C97%[21;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;[51;76H[K[51;76H90,1[10C92%[24;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1HgetSort(std::string name)
{
  std::string names;[51;76H[K[51;76H90,1[10C88%[27;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m *  if not valid.
 */[m
[32mstatic[m SortP[51;76H[K[51;76H90,1[10C84%[30;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H};

[34m/** Return sorting function specified by name; terminate program[m[51;76H[K[51;76H90,1[10C80%[33;1H[?25h[?25l[1;50r[1;1H[L[1;51r[1;3H{ [31m"quickSort"[m, quickSort },[51;76H[K[51;76H62,3[10C78%[6;3H[?25h[?25l[51;66Hi[6;3H[51;66H [6;3H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H62,3[10C78%[6;3H[?25h[?25l[51;77H3[7;3H[?25h[?25l[51;77H2[6;3H[?25h[?25l[51;79H4[6;4H[?25h[?25l[7;50r[7;1H[L[1;51r[51;76H[K[51;76H63,1[10C77%[7;1H[?25h[?25ll[51;79H2[7;2H[?25h[?25lo[51;79H3[7;3H[?25h[?25ln[51;79H4[7;4H[?25h[?25l[32mlong[m[51;79H5[7;5H[?25h[?25l[51;79H6[7;6H[?25h[?25lt[51;79H7[7;7H[?25h[?25l1[51;79H8[7;8H[?25h[?25ll[51;79H9[7;9H[?25h[?25l[7;8H[K[51;79H8[7;8H[?25h[?25l,[51;79H9[7;9H[?25h[?25l[51;79H10[7;10H[?25h[?25lt[51;80H1[7;11H[?25h[?25l2[51;80H2[7;12H[?25h[?25l;[51;80H3[7;13H[?25h[?25l[51;79H8 [7;8H[?25h[?25l, t2;[7;12H[K[51;79H7[7;7H[?25h[?25l0, t2;[51;79H8[7;8H[?25h[?25l[51;79H9[7;9H[?25h[?25l[51;79H10[7;10H[?25h[?25l[51;80H1[7;11H[?25h[?25l[51;80H2[7;12H[?25h[?25l;[7;12H[K[51;80H1[7;11H[?25h[?25l1;[51;80H2[7;12H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;
  [32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;
  [32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];[51;76H[K[51;76H65,12[9C81%[6;12H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);
  SortP sort = getSort(algorithm);
  [32mint[m sizeArgsIndex = [31m3[m + nVerbose;[51;76H[K[51;76H68,12[9C86%[6;12H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mif[m (sizeArgsIndex == argc) {
    go(sort, filePath, isVerbose, -[31m1[m);
  }[51;76H[K[51;76H71,12[9C90%[6;12H[?25h[?25l[51;76H95,23[30;23H[?25h[?25l[31;50r[31;1H[L[1;51r[51;76H[K[51;76H96,3[10C89%[31;3H[?25h[?25lt[51;79H4[31;4H[?25h[?25l0[51;79H5[31;5H[?25h[?25l=[51;79H6[31;6H[?25h[?25ln[51;79H7[31;7H[?25h[?25lo[51;79H8[31;8H[?25h[?25lw[51;79H9[31;9H[?25h[?25l([51;79H10[31;10H[?25h[?25l)[46m()[m[51;80H1[31;11H[?25h[?25l;()[51;80H2[31;12H[?25h[?25l[32;7H[46m([ma, n[46m)[m[51;77H7[32;12H[?25h[?25l[51;80H3[32;13H[?25h[?25l(a, n)[51;80H4[32;14H[?25h[?25l[33;50r[33;1H[L[1;51r[51;76H[K[51;76H98,3[10C87%[33;3H[?25h[?25lt[51;79H4[33;4H[?25h[?25l1[51;79H5[33;5H[?25h[?25l[51;79H6[33;6H[?25h[?25l=[51;79H7[33;7H[?25h[?25l[51;79H8[33;8H[?25h[?25ln[51;79H9[33;9H[?25h[?25lo[51;79H10[33;10H[?25h[?25lw[51;80H1[33;11H[?25h[?25l([51;80H2[33;12H[?25h[?25l)[46m()[m[51;80H3[33;13H[?25h[?25l;()[51;80H4[33;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mlong[m t0, t1;
[32mstatic[m SortP
getSort(std::string name)[51;76H[K[51;76H98,14[9C83%[36;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.
 */[m[51;76H[K[51;76H98,14[9C79%[39;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H98,14[9C75%[42;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },[51;76H[K[51;76H98,14[9C71%[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },[51;76H[K[51;76H95,14[9C67%[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::string name;
  SortP sort;
};[51;76H[K[51;76H92,2[10C63%[45;2H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[34m//map algorithm name to corresponding function[m
[32mstruct[m Algorithm {[51;76H[K[51;76H89,1[10C59%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[34m//type for pointer to a sorting function [m
[33musing[m SortP = [32mvoid[m (*)([32mint[m a[], [32mint[m n);[51;76H[K[51;76H86,14[9C55%[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H}
  [33mreturn[m ints;
}[51;76H[K[51;76H83,14[9C51%[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;7H[33mbreak[m;
    }
    ints.push_back(v);[51;76H[K[51;76H80,12[9C47%[45;12H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;19H<< std::endl;[2;9Hstd::exit([31m1[m);[3;7H}[51;76H[K[51;76H77,2[10C43%[34;1H[46m{[45;1H}[?25h[?25l[1;50r[m[1;1H[3L[1;51r[1;7H[33mif[m (n > [31m0[m) {[2;9Hstd::cerr << [31m"got eof on while reading "[m << filePath[3;19H<< [31m" after reading "[m << i << [31m" ints; expected "[m << n[51;76H[K[51;76H74,14[9C39%[37;1H{[48;1H}[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[32mint[m v;
    in >> v;
    [33mif[m (in.eof()) {[51;76H[K[51;76H71,14[9C35%[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H}
  std::vector<[32mint[m> ints;
  [33mfor[m ([32mint[m i = [31m0[m; n < [31m0[m || i < n; ++i) {[51;76H[K[51;76H68,14[9C31%[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H[33mif[m (!in) {
    [33mthrow[m std::invalid_argument(std::string([31m"cannot read "[m) + filePath +[3;33H[31m": "[m + std::strerror(errno));[51;76H[K[51;76H65,14[9C27%[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::ifstream file;
  [33mif[m (!isStdin) file.open(filePath);
  std::istream& in = (isStdin) ? std::cin : file;[51;76H[K[51;76H62,4[10C22%[45;4H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1HreadIntsFromFile([32mconst[m std::string filePath, [32mint[m n)
{
  [32mbool[m isStdin = filePath == [31m"-"[m;[51;76H[K[51;76H59,1[10C18%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m *  is [m[31m"-"[m[34m read from stdin.  If n < [m[31m0[m[34m, read entire contents of file.
 */[m
[32mstatic[m std::vector<[32mint[m>[51;76H[K[51;76H56,14[9C14%[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m"sorts.hh"[m

[34m/** Return vector of n int's read from filePath into a[].  If filePath[m[51;76H[K[51;76H53,14[9C10%[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<cstdlib>[m
[35m#include [m[31m<cstring>[m[51;76H[K[51;76H50,3[11C6%[45;3H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<string>[m
[35m#include [m[31m<vector>[m[51;76H[K[51;76H47,14[10C2%[45;14H[?25h[?25l[1;50r[1;1H[2L[1;51r[1;1H[35m#include [m[31m<fstream>[m
[35m#include [m[31m<iostream>[m[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H[K[51;76H45,1[10CTop[45;1H[?25h[?25l[51;76H9,20[9;20H[?25h[?25l[10;50r[10;1H[L[1;51r[51;76H[K[51;76H10,1[10CTop[10;1H[?25h[?25l#[51;79H2[10;2H[?25h[?25li[51;79H3[10;3H[?25h[?25ln[51;79H4[10;4H[?25h[?25lc[51;79H5[10;5H[?25h[?25ll[51;79H6[10;6H[?25h[?25lu[51;79H7[10;7H[?25h[?25ld[51;79H8[10;8H[?25h[?25le[51;79H9[10;9H[?25h[?25l[51;79H10[10;10H[?25h[?25l[35m#include [m[31m"

/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[1C-[1C[31m read from stdin.  If n < 0, read entire contents of file.[m
 [1m[37m[41m*/[m[51;80H1[10;11H[?25h[?25l[31mn[m[51;80H2[10;12H[?25h[?25l[31mo[m[51;80H3[10;13H[?25h[?25l[31mw[m[51;80H4[10;14H[?25h[?25l[31m.[m[51;80H5[10;15H[?25h[?25l[31mh[m[51;80H6[10;16H[?25h[?25l[31mh[m[51;80H7[10;17H[?25h[?25l[31m"[m

[34m/** Return vector of n int's read from filePath into a[].  If filePath
 *  is [m[1C[31m-[m[1C[34m read from stdin.  If n < [1C, read entire contents of file.
 */[m[51;80H8[10;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H};

[32mstatic[m Algorithm algorithms[] = {[51;76H[K[51;76H10,18[10C4%[7;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"insertionSort"[m, insertionSort },
  { [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },[51;76H[K[51;76H12,18[10C8%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H{ [31m"mergeSort"[m, mergeSort },
  { [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H15,18[9C12%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.[m[51;76H[K[51;76H18,18[9C16%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[34m */[m
[32mlong[m t0, t1;
[32mstatic[m SortP[51;76H[K[51;76H21,18[9C20%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1HgetSort(std::string name)
{
  std::string names;[51;76H[K[51;76H24,3-17[7C24%[6;17H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {
    [32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;[51;76H[K[51;76H27,18[9C28%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[33mif[m (names.size() > [31m0[m) names += [31m"|"[m;
    names += algName;
  }[51;76H[K[51;76H30,18[9C32%[6;8H[46m([8C)[?25h[?25l[1;50r[m[1;1H[3M[1;51r[48;3Hstd::cerr << [31m"unknown algorithm "[m << name[49;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);[51;76H[K[51;76H33,4-18[7C36%[3;8H([8C)[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H}

[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m[51;76H[K[51;76H36,8[10C40%[1;18H[46m{[6;7H}[?25h[?25l[1;50r[m[1;1H[3M[1;51r[48;1H[32mstatic[m [32mvoid[m
outArray([32mint[m a[], [32mint[m n)
{[51;76H[K[51;76H39,18[9C44%[3;7H}[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    std::cout << a[i] << [31m" "[m;
  }[51;76H[K[51;76H42,2[10C48%[6;2H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Hstd::cout << std::endl;
}[51;76H[K[51;76H45,18[9C52%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mstatic[m [32mvoid[m
go(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)[51;76H[K[51;76H48,18[9C56%[6;18H[46m{


}[6;18H[?25h[?25l[1;50r[m[1;1H[3M[1;51r[48;1H{
  std::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);
  [32mint[m* a = ints.data();[51;76H[K[51;76H51,3[10C60%[3;18H{


};[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mint[m n = ints.size();
  t0=now();
  sort(a, n);[51;76H[K[51;76H54,18[9C64%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Ht1 = now();
  [33mif[m (isVerbose) outArray(a, n);
}[51;76H[K[51;76H57,18[9C68%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mint[m
main([32mint[m argc, [32mchar[m* argv[]) {[51;76H[K[51;76H60,1[10C72%[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mif[m (argc < [31m3[m) {
    std::cerr << [31m"usage: "[m << argv[[31m0[m][50;15H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;[51;76H[K[51;76H63,4[10C76%[6;4H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hstd::exit([31m1[m);
  }
  [32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;[51;76H[K[51;76H66,18[9C80%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;
  [32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];
  [32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);[51;76H[K[51;76H69,18[9C84%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3HSortP sort = getSort(algorithm);
  [32mint[m sizeArgsIndex = [31m3[m + nVerbose;
  [33mif[m (sizeArgsIndex == argc) {[51;76H[K[51;76H72,18[9C88%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hgo(sort, filePath, isVerbose, -[31m1[m);
  }
  [33melse[m {[51;76H[K[51;76H75,18[9C92%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[49;7H[32mint[m nRead = atoi(argv[i]);[50;7Hgo(sort, filePath, isVerbose, nRead);[51;76H[K[51;76H78,2[10C96%[6;2H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H}
  }
}[51;76H[K[51;76H81,12[9CBot[6;12H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H84,18[9CBot[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H87,18[9CBot[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H90,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H93,2[10CBot[6;1H[46m{[14;1H}[6;2H[?25h[?25l[1;50r[m[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H96,18[9CBot[3;1H{[11;1H}[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H99,14[9CBot[6;14H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H102,1[9CBot[6;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::vector<[32mint[m> ints = readIntsFromFile(filePath, nRead);
  [32mint[m* a = ints.data();
  [32mint[m n = ints.size();[51;76H[K[51;76H102,1[9CBot[9;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstatic[m [32mvoid[m
go(SortP sort, std::string filePath, [32mbool[m isVerbose, [32mint[m nRead)
{[51;76H[K[51;76H102,1[9CBot[12;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H}[51;76H[K[51;76H102,1[9CBot[15;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5Hstd::cout << a[i] << [31m" "[m;
  }
  std::cout << std::endl;[51;76H[K[51;76H102,1[9CBot[18;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1HoutArray([32mint[m a[], [32mint[m n)
{
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[51;76H[K[51;76H102,1[9CBot[21;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[34m/** Output a line containing whitespace separated contents of a [[m[31m0[m[34m, n) */[m
[32mstatic[m [32mvoid[m[51;76H[K[51;76H102,1[9CBot[24;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;13H<< [31m" must be one of "[m << names << std::endl;
  std::exit([31m1[m);
}[51;76H[K[51;76H102,1[9CBot[27;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5Hnames += algName;
  }
  std::cerr << [31m"unknown algorithm "[m << name[51;76H[K[51;76H102,1[9C96%[30;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;5H[32mconst[m std::string algName = algorithms[i].name;
    [33mif[m (algName == name) [33mreturn[m algorithms[i].sort;
    [33mif[m (names.size() > [31m0[m) names += [31m"|"[m;[51;76H[K[51;76H102,1[9C92%[33;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H{
  std::string names;
  [33mfor[m ([32mauto[m i = [31m0u[m; i < [33msizeof[m(algorithms)/[33msizeof[m(algorithms[[31m0[m]); ++i) {[51;76H[K[51;76H102,1[9C88%[36;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mlong[m t0, t1;
[32mstatic[m SortP
getSort(std::string name)[51;76H[K[51;76H102,1[9C84%[39;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[34m/** Return sorting function specified by name; terminate program
 *  if not valid.
 */[m[51;76H[K[51;76H102,1[9C80%[42;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"quickSort"[m, quickSort },
};[51;76H[K[51;76H102,1[9C76%[45;1H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3H{ [31m"bubbleSort"[m, bubbleSort },
  { [31m"selectionSort"[m, selectionSort },
  { [31m"mergeSort"[m, mergeSort },[51;76H[K[51;76H99,14[9C72%[45;14H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[32mstatic[m Algorithm algorithms[] = {
  { [31m"insertionSort"[m, insertionSort },[51;76H[K[51;76H96,18[9C68%[45;18H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;3Hstd::string name;
  SortP sort;
};[51;76H[K[51;76H93,2[10C64%[45;2H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[34m//map algorithm name to corresponding function[m
[32mstruct[m Algorithm {[51;76H[K[51;76H90,1[10C60%[45;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mint[m n = ints.size();
  t0=now();
  sort(a, n);[51;76H[K[51;76H90,1[10C64%[42;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3Ht1 = now();
  [33mif[m (isVerbose) outArray(a, n);
}[51;76H[K[51;76H90,1[10C68%[39;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H[32mint[m
main([32mint[m argc, [32mchar[m* argv[]) {[51;76H[K[51;76H90,1[10C72%[36;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[33mif[m (argc < [31m3[m) {
    std::cerr << [31m"usage: "[m << argv[[31m0[m][50;15H<< [31m" [-v] ALGORITHM INTS_DATA_FILE|- [N...]"[m << std::endl;[51;76H[K[51;76H90,1[10C76%[33;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hstd::exit([31m1[m);
  }
  [32mbool[m isVerbose = std::strcmp(argv[[31m1[m], [31m"-v"[m) == [31m0[m;[51;76H[K[51;76H90,1[10C80%[30;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3H[32mbool[m nVerbose = (isVerbose) ? [31m1[m : [31m0[m;
  [32mconst[m [32mchar[m* algorithm = argv[[31m1[m + nVerbose];
  [32mconst[m std::string filePath(argv[[31m2[m + nVerbose]);[51;76H[K[51;76H90,1[10C84%[27;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;3HSortP sort = getSort(algorithm);
  [32mint[m sizeArgsIndex = [31m3[m + nVerbose;
  [33mif[m (sizeArgsIndex == argc) {[51;76H[K[51;76H90,1[10C88%[24;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5Hgo(sort, filePath, isVerbose, -[31m1[m);
  }
  [33melse[m {[51;76H[K[51;76H90,1[10C92%[21;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H[33mfor[m ([32mint[m i = sizeArgsIndex; i < argc; ++i) {[49;7H[32mint[m nRead = atoi(argv[i]);[50;7Hgo(sort, filePath, isVerbose, nRead);[51;76H[K[51;76H90,1[10C96%[18;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;5H}
  }
}[51;76H[K[51;76H90,1[10CBot[15;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H90,1[10CBot[12;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H90,1[10CBot[9;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H90,1[10CBot[6;1H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H93,2[10CBot[6;1H[46m{[14;1H}[6;2H[?25h[?25l[m{[14;1H}[51;76H121,33[34;33H[?25h[?25l[35;50r[35;1H[L[1;51r[51;76H[K[51;76H122,7[9CBot[35;7H[?25h[?25l[51;80H6[35;6H[?25h[?25l[51;80H5[35;5H[?25h[?25l[51;80H4[35;4H[?25h[?25l[51;80H3[35;3H[?25h[?25l[51;80H2[35;2H[?25h[?25l[51;80H1[35;1H[?25h[?25l[34;50r[50;1H
[1;51r[34;7H[32mint[m nRead = atoi(argv[i]);[50;1H[1m[34m~                                                                                            [m[51;76H[K[51;76H121,33[8CBot[34;33H[?25h[?25l[51;78H2,44[35;44H[?25h[?25l[36;50r[36;1H[L[1;51r[51;76H[K[51;76H123,7[9CBot[36;7H[?25h[?25ls[51;80H8[36;8H[?25h[?25lt[51;80H9[36;9H[?25h[?25ld[51;80H10[36;10H[?25h[?25l[33mstd[m:[36;7H[K[51;80H5 [36;5H[?25h[?25l      std::[51;80H12[36;12H[?25h[?25lc[51;81H3[36;13H[?25h[?25lo[51;81H4[36;14H[?25h[?25lu[51;81H5[36;15H[?25h[?25lt[51;81H6[36;16H[?25h[?25l<[51;81H7[36;17H[?25h[?25l<[51;81H8[36;18H[?25h[?25l[51;77H04,3 [17;3H[?25h[?25l[18;17H[46m{[22;3H}[m[51;78H9,4[22;4H[?25h[?25l[23;50r[23;1H[L[1;51r[51;76H[K[51;76H110,3[9CBot[18;17H{[22;3H}
  [?25h[?25ls[51;80H4[23;4H[?25h[?25lt[51;80H5[23;5H[?25h[?25ld[51;80H6[23;6H[?25h[?25l[33mstd[m:[23;5H[K[51;80H5[23;5H[?25h[?25l  std::[51;80H8[23;8H[?25h[?25lc[51;80H9[23;9H[?25h[?25lo[51;80H10[23;10H[?25h[?25lu[51;81H1[23;11H[?25h[?25lt[51;81H2[23;12H[?25h[?25l<[51;81H3[23;13H[?25h[?25l<[51;81H4[23;14H[?25h[?25l[31m"[m[51;81H5[23;15H[?25h[?25l[31mn[m[51;81H6[23;16H[?25h[?25l[31m [m[51;81H7[23;17H[?25h[?25l[31m [m[51;81H8[23;18H[?25h[?25l[31m [m[51;81H9[23;19H[?25h[?25l[31m [m[51;80H20[23;20H[?25h[?25l[31m [m[51;81H1[23;21H[?25h[?25l[31m [m[51;81H2[23;22H[?25h[?25l[31m [m[51;81H3[23;23H[?25h[?25l[31mt[m[51;81H4[23;24H[?25h[?25l[31mi[m[51;81H5[23;25H[?25h[?25l[31mm[m[51;81H6[23;26H[?25h[?25l[31me[m[51;81H7[23;27H[?25h[?25l[31m"[m[51;81H8[23;28H[?25h[?25l<[51;81H9[23;29H[?25h[?25l<[51;80H30[23;30H[?25h[?25ls[51;81H1[23;31H[?25h[?25lt[51;81H2[23;32H[?25h[?25ld[51;81H3[23;33H[?25h[?25l:[51;81H4[23;34H[?25h[?25l:[51;81H5[23;35H[?25h[?25le[51;81H6[23;36H[?25h[?25ln[51;81H7[23;37H[?25h[?25ld[51;81H8[23;38H[?25h[?25ll[51;81H9[23;39H[?25h[?25l;[51;80H40[23;40H[?25h[?25l[51;77H24,18[37;18H[?25h[?25l[51;81H9[37;19H[?25h[?25lt[51;80H20[37;20H[?25h[?25l1[51;81H1[37;21H[?25h[?25l[37;20H[K[51;81H0[37;20H[?25h[?25l[37;19H[K[51;80H19[37;19H[?25h[?25ln[51;80H20[37;20H[?25h[?25lR[51;81H1[37;21H[?25h[?25le[51;81H2[37;22H[?25h[?25la[51;81H3[37;23H[?25h[?25ld[51;81H4[37;24H[?25h[?25l[51;81H5[37;25H[?25h[?25l<[51;81H6[37;26H[?25h[?25l<[51;81H7[37;27H[?25h[?25l[51;81H8[37;28H[?25h[?25l[31m"[m[51;81H9[37;29H[?25h[?25l[31m"[m[51;80H30[37;30H[?25h[?25l[37;29H[K[51;80H29[37;29H[?25h[?25l[31m [m[51;80H30[37;30H[?25h[?25l[31m [m[51;81H1[37;31H[?25h[?25l[31m [m[51;81H2[37;32H[?25h[?25l[31m [m[51;81H3[37;33H[?25h[?25l[31m [m[51;81H4[37;34H[?25h[?25l[31m"[m[51;81H5[37;35H[?25h[?25l[51;81H6[37;36H[?25h[?25l<[51;81H7[37;37H[?25h[?25l<[51;81H8[37;38H[?25h[?25l[51;81H9[37;39H[?25h[?25lt[51;80H40[37;40H[?25h[?25l1[51;81H1[37;41H[?25h[?25l-[51;81H2[37;42H[?25h[?25lt[51;81H3[37;43H[?25h[?25l0[51;81H4[37;44H[?25h[?25l<[51;81H5[37;45H[?25h[?25l<[51;81H6[37;46H[?25h[?25ls[51;81H7[37;47H[?25h[?25lt[51;81H8[37;48H[?25h[?25ld[51;81H9[37;49H[?25h[?25l:[51;80H50[37;50H[?25h[?25l:[51;81H1[37;51H[?25h[?25le[51;81H2[37;52H[?25h[?25ln[51;81H3[37;53H[?25h[?25ld[51;81H4[37;54H[?25h[?25ll[51;81H5[37;55H[?25h[?25l;[51;81H6[37;56H[?25h[51;1H[K[37;55H[?25l[51;66H^[[37;55H[51;66H  [37;56H[51;76H124,55[8CBot[37;55H[?25h[?25l[51;66H:[37;55H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"main.cc" 127L, 3125C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ make -f ,[K../Makefile 
g++ -MT now.o -MMD -MP -MF .deps/now.d -g -Wall -std=c++17 -c now.cc
g++ -MT sorts.o -MMD -MP -MF .deps/sorts.d -g -Wall -std=c++17 -c sorts.cc
g++ -MT main.o -MMD -MP -MF .deps/main.d -g -Wall -std=c++17 -c main.cc
g++ now.o sorts.o main.o -o main
cat </dev/null >.gitignore
echo .deps >.gitignore
for t in main now.o sorts.o main.o; do echo $t >>.gitignore; done
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ ./main insertionSort ../../random.dat  `seq 1000 1000 10000`
n       time
1000     2
2000     9
3000     19
4000     34
5000     54
6000     78
7000     108
8000     141
9000     176
10000     215
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ ./main insertionSort ../../random.dat `seq 1000 1000 10000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CSort ../../random.dat `s[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CSort ../../random.dat `se[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CSort ../../random.dat `seq[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CSort ../../random.dat `seq [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CSort ../../random.dat `seq 1[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CSort ../../random.dat `seq 10[C[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CSort ../../random.dat `seq 100[C[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CSort ../../random.dat `seq 1000[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CSort ../../random.dat `seq 1000 [1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CqSort ../../random.dat `seq 1000[1@ [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CuSort ../../random.dat `seq 100[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CiSort ../../random.dat `seq 10[C[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CcSort ../../random.dat `seq 1[C[C[1@0[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CkSort ../../random.dat `seq [1@1[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./main quickSort ../../random.dat `seq 1000 1000 10000`[C[1@0[C[C[C[C[C0 10000`[C[C[C[C[C[C[C0`
n       time
10000     2
20000     3
30000     5
40000     8
50000     10
60000     11
70000     13
80000     16
90000     18
100000     19
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ ./main quickSort ../../random.dat `seq 10000 10000 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CinsertionSort ../../random.dat `seq 1000 1000 10000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[18Pmake -f ../Makefile
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[9Pvim main.ccls[Krm *.o[4Plscp ../2-sorts/* .ls[Kcd 4-time/[K..[3Plscd plot[2P..for a in $alg0 $alg1; do ../plot $a.dat > $a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C..[K[3Plscd plot[2P..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pmkdir plotcd 3-stats/for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pmkdir plotls[Kacd ..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[19Pvim bubbleSort.dat 
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[19Pvim bubbleSort.dat 
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd 3-stats/gnuplot plot.gp [4Pvim[C[C[C[C[C[C[C[C[C[7Pcd ..rm -rf plot.gp [4Pvim plot.gpfor a in $alg0 $alg1; do ../plot.gp $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd ..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1; do ./main $a ../../random.dat `seq 10000 10000 100000` > $a.dat; done;[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3P 1000 1[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ for a in $alg0; do ./main $a ../../random.dat `seq 1000 1000 10000` > $a.dat; done;[A[C[C[C[C[C[C[C[C[C[C./main quickSort ../../random.dat `seq [25P10000 10000 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CinsertionSort ../../random.dat `seq 1000 1000 10000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[18Pmake -f ../Makefile
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[9Pvim main.ccls[Krm *.o[4Plscp ../2-sorts/* .ls[Kcd 4-time/[K..[3Plscd plot[2P..for a in $alg0 $alg1; do ../plot $a.dat > $a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C..[K[3Plscd plot[2P..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pmkdir plotls[Kacd ..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[19Pvim bubbleSort.dat 
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd 3-stats/gnuplot plot.gp [4Pvim[C[C[C[C[C[C[C[C[C[7Pcd ..rm -rf plot.gp [4Pvim plot.gpfor a in $alg0 $alg1; do ../plot.gp $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0 $alg1; do ../plot.gp $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd ..for a in $alg0 $alg1; do ../plot $a.dat > a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1; do ./main $a ../../random.dat `seq 10000 10000 100000` > $a.dat; done;[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3P 1000 1[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C1
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@0 10000 10[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ for a in $alg1; do ./main $a ../../random.dat `seq 10000 10000 100000` > $a.dat; done;[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C0
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3P 1000 1[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[A[C[C[C[C[C[C[C[C[C[C./main quickSort ../../random.dat `seq [25P10000 10000 100000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[CinsertionSort ../../random.dat `seq 1000 1000 10000`[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[18Pmake -f ../Makefile
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[9Pvim main.ccls[Krm *.o[4Plscp ../2-sorts/* .ls[Kcd 4-time/[K..[3Plscd plot[2P..for a in $alg0 $alg1; do ../plot $a.dat > $a.png; done[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd 3-stats/[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cfor a in $alg0 $alg1; do ../plot $a.dat > $a.png; done
bash: ../plot: Is a directory
bash: ../plot: Is a directory
bash: ../plot: Is a directory
bash: ../plot: Is a directory
bash: ../plot: Is a directory
rgeary1@remote05:~/i240a/submit/lab9/exercises/4-time$ cd ~/i240a
rgeary1@remote05:~/i240a$ git branch -l
[?1h=  lab0[m[m
  lab1[m[m
  lab2[m[m
  lab3[m[m
  lab4[m[m
  lab5[m[m
  lab6[m[m
  lab6a[m[m
  lab7[m[m
  lab8[m[m
* [32mlab9[m[m
  master[m[m
  prj1[m[m
  prj2[m[m
  prj2-sol[m[m
[K[?1l>rgeary1@remote05:~/i240a$ git merge -m 'merged master' master
Already up to date.
rgeary1@remote05:~/i240a$ git add[K[K[K[K[K[K[Kexit

Script done on 2020-04-02 21:46:08-04:00 [COMMAND_EXIT_CODE="0"]
