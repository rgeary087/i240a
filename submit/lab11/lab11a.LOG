Script started on 2020-04-23 19:28:09-04:00 [TERM="xterm" TTY="/dev/pts/4" COLUMNS="93" LINES="51"]
rgeary1@remote05:~/i240a/submit/lab11$ vim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"balanced.cc" 27L, 340C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"stack.hh"[m

[35m#include [m[31m<iostream>[m

[32mstruct[m DelimMap{[6;9H[32mint[m delim;[7;9H[32mint[m encoding;
};

DelimMap delimEncodings[] = {[11;9H{ [31m'('[m, [31m1[m},[12;9H{ [31m')'[m, -[31m1[m},[13;9H{ [31m'['[m, [31m2[m},[14;9H{ [31m']'[m, -[31m2[m},[15;9H{ [31m'<'[m, [31m3[m},[16;9H{ [31m'>'[m, -[31m3[m},[17;9H{ [31m'{'[m, [31m4[m},[18;9H{ [31m'}'[m, -[31m4[m}
}

[32mint[m main([32mint[m argc, [32mchar[m* argv[]){[22;9HStack stk;[23;9H[33mfor[m([32mauto[m i = [31m1[m; i < argc; i++){[24;17Hstd::cout<<argv[i]<<std::endl;[25;9H}

}
[1m[34m~                                                                                            [29;1H~                                                                                            [30;1H~                                                                                            [31;1H~                                                                                            [32;1H~                                                                                            [33;1H~                                                                                            [34;1H~                                                                                            [35;1H~                                                                                            [36;1H~                                                                                            [37;1H~                                                                                            [38;1H~                                                                                            [39;1H~                                                                                            [40;1H~                                                                                            [41;1H~                                                                                            [42;1H~                                                                                            [43;1H~                                                                                            [44;1H~                                                                                            [45;1H~                                                                                            [46;1H~                                                                                            [47;1H~                                                                                            [48;1H~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H16,12-19      All[16;19H[?25h[?1000l[?1002h[?25l[51;76H24,32-46[24;46H[?25h[?25l[51;66Hi[24;46H[51;66H [24;46H[51;1H[1m-- INSERT --[m[51;13H[K[51;76H24,32-46      All[24;46H[?25h[?25l[51;80H3-47[24;47H[?25h[?25l[24;46H[K[51;80H2-46[24;46H[?25h[?25l[24;45H[K[51;80H1-45[24;45H[?25h[?25l[24;44H[K[51;80H0-44[24;44H[?25h[?25l[24;43H[K[51;79H29-43[24;43H[?25h[?25l[24;42H[K[51;80H8-42[24;42H[?25h[?25l[24;41H[K[51;80H7-41[24;41H[?25h[?25l[24;40H[K[51;80H6-40[24;40H[?25h[?25l[24;39H[K[51;80H5-39[24;39H[?25h[?25l[24;38H[K[51;80H4-38[24;38H[?25h[?25l[24;37H[K[51;80H3-37[24;37H[?25h[?25l[24;36H[K[51;80H2-36[24;36H[?25h[?25l[24;35H[K[24;32H[46m[[mi[46m][m[51;80H1-35[24;35H[?25h[?25l[24;34H[K[25;9H[1m[37m[41m}

}[m[24;32H[[51;80H0-34[24;34H[?25h[?25l[24;33H[K[51;79H19-33[24;33H[?25h[?25l[24;32H[K[25;9H}

}[51;80H8-32[24;32H[?25h[?25l[24;31H[K[51;80H7-31[24;31H[?25h[?25l[24;30H[K[51;80H6-30[24;30H[?25h[?25l[24;29H[K[51;80H5-29[24;29H[?25h[?25l[24;28H[K[51;80H4-28[24;28H[?25h[?25l[24;27H[K[51;80H3-27[24;27H[?25h[?25l[24;26H[K[51;80H2-26[24;26H[?25h[?25l[24;25H[K[51;80H1-25[24;25H[?25h[?25l[24;24H[K[51;80H0-24[24;24H[?25h[?25l[24;23H[K[51;79H9-23 [24;23H[?25h[?25l[24;22H[K[51;79H8-22[24;22H[?25h[?25l[33mstd[m[24;21H[K[51;79H7-21[24;21H[?25h[?25lstd[24;20H[K[51;79H6-20[24;20H[?25h[?25l[24;19H[K[51;79H5-19[24;19H[?25h[?25l[24;18H[K[51;79H4-18[24;18H[?25h[?25l[24;17H[K[51;79H3-17[24;17H[?25h[?25l[51;77H0,1   [20;1H[?25h[?25l[51;77H2,12-19[22;19H[?25h[?25l[23;50r[23;1H[L[1;51r[51;76H[K[51;76H23,2-9[8CAll[23;9H[?25h[?25l[51;77H5,3-17[25;17H[?25h[?25l[51;77H0,1   [20;1H[?25h[?25l[51;77H3[23;1H[?25h[?25l[51;79H2-9[23;9H[?25h[?25l[51;79H1  [23;1H[?25h[?25l[22;50r[50;1H
[1;51r[22;9HStack stk;[50;1H[1m[34m~                                                                                            [m[51;76H[K[51;76H22,12-19      All[22;19H[?25h[?25l[51;77H0,1    [20;1H[?25h[?25lc[51;79H2[20;2H[?25h[?25lh[51;79H3[20;3H[?25h[?25le[51;79H4[20;4H[?25h[?25lc[51;79H5[20;5H[?25h[?25lk[51;79H6[20;6H[?25h[?25lD[51;79H7[20;7H[?25h[?25le[51;79H8[20;8H[?25h[?25ll[51;79H9[20;9H[?25h[?25li[51;79H10[20;10H[?25h[?25lm[51;80H1[20;11H[?25h[?25l([51;80H2[20;12H[?25h[?25l)[46m()[m[51;80H3[20;13H[?25h[?25l{()[51;80H4[20;14H[?25h[?25l[21;50r[21;1H[L[1;51r[51;76H[K[51;76H21,2-9[8CAll[21;9H[?25h[?25l[22;50r[22;1H[L[1;51r[51;76H[K[51;76H22,2-9[8CAll[22;9H[?25h[?25l}[20;13H[46m{

}[m[51;80H  [22;2H[?25h[?25l[20;13H{

}[51;77H1,1[21;1H[?25h[?25l[51;77H0,2[20;2H[?25h[?25l[51;79H1[20;1H[?25h[?25lvcheckDelim(){[51;79H2[20;2H[?25h[?25locheckDelim(){[51;79H3[20;3H[?25h[?25licheckDelim(){[51;79H4[20;4H[?25h[?25ldcheckDelim(){[51;79H5[20;5H[?25h[?25l[32mvoid[m checkDelim(){[51;79H6[20;6H[?25h[?25l[51;77H1,1[21;1H[?25h[?25l[51;79H2-9[21;9H[?25h[?25l[51;77H0,9  [20;9H[?25h[?25l[51;79H8[20;8H[?25h[?25l[51;79H7[20;7H[?25h[?25l[51;79H6[20;6H[?25h[?25l[51;79H5[20;5H[?25h[?25lvoi checkDelim(){[20;18H[K[51;79H4[20;4H[?25h[?25l checkDelim(){[20;17H[K[51;79H3[20;3H[?25h[?25l checkDelim(){[20;16H[K[51;79H2[20;2H[?25h[?25l checkDelim(){[20;15H[K[51;79H1[20;1H[?25h[?25lb checkDelim(){[51;79H2[20;2H[?25h[?25lo checkDelim(){[51;79H3[20;3H[?25h[?25lo checkDelim(){[51;79H4[20;4H[?25h[?25l[32mbool[m checkDelim(){[51;79H5[20;5H[?25h[?25l[51;77H1,1[21;1H[?25h[?25l[51;79H2-9[21;9H[?25h[?25l[51;76H3,20  [3;20H[?25h[?25l[4;50r[4;1H[L[1;51r[51;76H[K[51;76H4,1[11CAll[4;1H[?25h[?25l#[51;78H2[4;2H[?25h[?25li[51;78H3[4;3H[?25h[?25ln[51;78H4[4;4H[?25h[?25lc[51;78H5[4;5H[?25h[?25ll[51;78H6[4;6H[?25h[?25lu[51;78H7[4;7H[?25h[?25ld[51;78H8[4;8H[?25h[?25le[51;78H9[4;9H[?25h[?25l[51;78H10[4;10H[?25h[?25l[35m#include <[m[51;79H1[4;11H[?25h[?25lc[51;79H2[4;12H[?25h[?25le[51;79H3[4;13H[?25h[?25le[51;79H4[4;14H[?25h[?25lr[51;79H5[4;15H[?25h[?25l[4;14H[K[51;79H4[4;14H[?25h[?25l[4;13H[K[51;79H3[4;13H[?25h[?25lr[51;79H4[4;14H[?25h[?25lr[51;79H5[4;15H[?25h[?25l[31m<cerr>[m[51;79H6[4;16H[?25h[?25l[51;76H22,1[22;1H[?25h[?25l[51;79H2-9[22;9H[?25h[?25li[51;79H3-10[22;10H[?25h[?25l[33mif[m[51;79H4-11[22;11H[?25h[?25l([51;79H5-12[22;12H[?25h[?25l[21;16H[46m()[m[51;77H1,16  [21;16H[?25h[?25l[51;80H7[21;17H[?25h[?25l[46mc[m){c[46m)[m[51;80H8[21;18H[?25h[?25l[46ma[m){a[46m)[m[51;80H9[21;19H[?25h[?25l[46mr[m){r[46m)[m[51;79H20[21;20H[?25h[?25l)[46m{[m[21;21H[K[21;19H[46m)[m{[51;79H19[21;19H[?25h[?25l)[46m{[m[21;20H[K[21;18H[46m)[m{[51;80H8[21;18H[?25h[?25l[46mg[m){g[46m)[m[51;80H9[21;19H[?25h[?25l)[46m{[m[21;20H[K[21;18H[46m)[m{[51;80H8[21;18H[?25h[?25l[46mh[m){h[46m)[m[51;80H9[21;19H[?25h[?25l[46ma[m){a[46m)[m[51;79H20[21;20H[?25h[?25l[32mcha[m[32m[46mr[m){[32mr[m[46m)[m[51;80H1[21;21H[?25h[?25l[46m [m){ [46m)[m[51;80H2[21;22H[?25h[?25l[46ma[m){a[46m)[m[51;80H3[21;23H[?25h[?25l[21;16H([6C)[51;77H2,5-12[22;12H[?25h[?25la[51;79H6-13[22;13H[?25h[?25l[51;79H7-14[22;14H[?25h[?25l=[51;79H8-15[22;15H[?25h[?25l=[51;79H9-16[22;16H[?25h[?25l[51;79H10-17[22;17H[?25h[?25l'[51;80H1-18[22;18H[?25h[?25l([51;80H2-19[22;19H[?25h[?25l[31m'('[m[51;80H3-20[22;20H[?25h[?25l[51;80H4-21[22;21H[?25h[?25l|[51;80H5-22[22;22H[?25h[?25l|[51;80H6-23[22;23H[?25h[?25l[51;80H7-24[22;24H[?25h[?25la[51;80H8-25[22;25H[?25h[?25l[51;80H9-26[22;26H[?25h[?25l[51;80H8-25[22;25H[?25h[?25l [51;80H7-24[22;24H[?25h[?25l[51;80H6-23[22;23H[?25h[?25l [51;80H5-22[22;22H[?25h[?25l [51;80H4-21[22;21H[?25h[?25l[51;80H3-20[22;20H[?25h[?25l'( [51;80H2-19[22;19H[?25h[?25l [51;80H1-18[22;18H[?25h[?25l [51;80H0-17[22;17H[?25h[?25l[51;79H9-16 [22;16H[?25h[?25l [51;79H8-15[22;15H[?25h[?25l [51;79H7-14[22;14H[?25h[?25l[51;79H6-13[22;13H[?25h[?25l [51;79H5-12[22;12H[?25h[?25l [51;79H4-11[22;11H[?25h[?25li [51;79H3-10[22;10H[?25h[?25l [51;79H2-9 [22;9H[?25h[?25lb[51;79H3-10[22;10H[?25h[?25lo[51;79H4-11[22;11H[?25h[?25lo[51;79H5-12[22;12H[?25h[?25l[32mbool[m[51;79H6-13[22;13H[?25h[?25l[51;79H7-14[22;14H[?25h[?25li[51;79H8-15[22;15H[?25h[?25ls[51;79H9-16[22;16H[?25h[?25lI[51;79H10-17[22;17H[?25h[?25ln[51;80H1-18[22;18H[?25h[?25l[51;80H2-19[22;19H[?25h[?25l=[51;80H3-20[22;20H[?25h[?25l[51;80H4-21[22;21H[?25h[?25lf[51;80H5-22[22;22H[?25h[?25la[51;80H6-23[22;23H[?25h[?25ll[51;80H7-24[22;24H[?25h[?25ls[51;80H8-25[22;25H[?25h[?25l[31mfalse[m[51;80H9-26[22;26H[?25h[?25l;[51;79H20-27[22;27H[?25h[?25l[23;50r[23;1H[L[1;51r[51;76H[K[51;76H23,1[10CAll[23;1H[?25h[?25l[51;79H2-9[23;9H[?25h[?25lf[51;79H3-10[23;10H[?25h[?25lo[51;79H4-11[23;11H[?25h[?25l[33mfor[m[51;79H5-12[23;12H[?25h[?25l([51;79H6-13[23;13H[?25h[?25ld[51;79H7-14[23;14H[?25h[?25le[51;79H8-15[23;15H[?25h[?25ll[51;79H9-16[23;16H[?25h[?25lmo[51;79H11-18[23;18H[?25h[?25l [51;80H0-17[23;17H[?25h[?25l [51;79H9-16 [23;16H[?25h[?25l [51;79H8-15[23;15H[?25h[?25l [51;79H7-14[23;14H[?25h[?25l [51;79H6-13[23;13H[?25h[?25la[51;79H7-14[23;14H[?25h[?25lu[51;79H8-15[23;15H[?25h[?25lt[51;79H9-16[23;16H[?25h[?25l[32mauto[m[51;79H10-17[23;17H[?25h[?25l[51;80H1-18[23;18H[?25h[?25li[51;80H2-19[23;19H[?25h[?25l[51;80H3-20[23;20H[?25h[?25l=[51;80H4-21[23;21H[?25h[?25l[51;80H5-22[23;22H[?25h[?25l[31m0[m[51;80H6-23[23;23H[?25h[?25l;[51;80H7-24[23;24H[?25h[?25l[51;80H8-25[23;25H[?25h[?25li[51;80H9-26[23;26H[?25h[?25l[51;79H20-27[23;27H[?25h[?25l<[51;80H1-28[23;28H[?25h[?25l[51;80H2-29[23;29H[?25h[?25ld[51;80H3-30[23;30H[?25h[?25le[51;80H4-31[23;31H[?25h[?25ll[51;80H5-32[23;32H[?25h[?25li[51;80H6-33[23;33H[?25h[?25lm[51;80H7-34[23;34H[?25h[?25lE[51;80H8-35[23;35H[?25h[?25ln[51;80H9-36[23;36H[?25h[?25lc[51;79H30-37[23;37H[?25h[?25lo[51;80H1-38[23;38H[?25h[?25ld[51;80H2-39[23;39H[?25h[?25li[51;80H3-40[23;40H[?25h[?25ln[51;80H4-41[23;41H[?25h[?25lg[51;80H5-42[23;42H[?25h[?25ls[51;80H6-43[23;43H[?25h[?25l [51;80H5-42[23;42H[?25h[?25l [51;80H4-41[23;41H[?25h[?25l [51;80H3-40[23;40H[?25h[?25l [51;80H2-39[23;39H[?25h[?25l [51;80H1-38[23;38H[?25h[?25l [51;80H0-37[23;37H[?25h[?25l [51;79H29-36[23;36H[?25h[?25l [51;80H8-35[23;35H[?25h[?25l [51;80H7-34[23;34H[?25h[?25l [51;80H6-33[23;33H[?25h[?25l [51;80H5-32[23;32H[?25h[?25l [51;80H4-31[23;31H[?25h[?25l [51;80H3-30[23;30H[?25h[?25l [51;80H2-29[23;29H[?25h[?25l[51;80H1-28[23;28H[?25h[?25l [51;80H0-27[23;27H[?25h[?25l[51;80H1-28[23;28H[?25h[?25l[51;80H0-27[23;27H[?25h[?25l<[51;80H1-28[23;28H[?25h[?25l[51;80H2-29[23;29H[?25h[?25ls[51;80H3-30[23;30H[?25h[?25li[51;80H4-31[23;31H[?25h[?25lz[51;80H5-32[23;32H[?25h[?25le[51;80H6-33[23;33H[?25h[?25lo[51;80H7-34[23;34H[?25h[?25l[33msizeof[m[51;80H8-35[23;35H[?25h[?25l([51;80H9-36[23;36H[?25h[?25ld[51;79H30-37[23;37H[?25h[?25le[51;80H1-38[23;38H[?25h[?25ll[51;80H2-39[23;39H[?25h[?25li[51;80H3-40[23;40H[?25h[?25lm[51;80H4-41[23;41H[?25h[?25lE[51;80H5-42[23;42H[?25h[?25ln[51;80H6-43[23;43H[?25h[?25lc[51;80H7-44[23;44H[?25h[?25lo[51;80H8-45[23;45H[?25h[?25ld[51;80H9-46[23;46H[?25h[?25li[51;79H40-47[23;47H[?25h[?25ln[51;80H1-48[23;48H[?25h[?25lg[51;80H2-49[23;49H[?25h[?25ls[51;80H3-50[23;50H[?25h[?25l)[23;35H[46m([14C)[m[51;80H4-51[23;51H[?25h[?25l/[23;35H([14C)[51;80H5-52[23;52H[?25h[?25ls[51;80H6-53[23;53H[?25h[?25li[51;80H7-54[23;54H[?25h[?25lz[51;80H8-55[23;55H[?25h[?25le[51;80H9-56[23;56H[?25h[?25lo[51;79H50-57[23;57H[?25h[?25l[33msizeof[m[51;80H1-58[23;58H[?25h[?25l([51;80H2-59[23;59H[?25h[?25ld[51;80H3-60[23;60H[?25h[?25le[51;80H4-61[23;61H[?25h[?25ll[51;80H5-62[23;62H[?25h[?25li[51;80H6-63[23;63H[?25h[?25lm[51;80H7-64[23;64H[?25h[?25lE[51;80H8-65[23;65H[?25h[?25lc[51;80H9-66[23;66H[?25h[?25ln[51;79H60-67[23;67H[?25h[?25l [51;79H59-66[23;66H[?25h[?25l [51;80H8-65[23;65H[?25h[?25ln[51;80H9-66[23;66H[?25h[?25lc[51;79H60-67[23;67H[?25h[?25lo[51;80H1-68[23;68H[?25h[?25ld[51;80H2-69[23;69H[?25h[?25li[51;80H3-70[23;70H[?25h[?25ln[51;80H4-71[23;71H[?25h[?25lg[51;80H5-72[23;72H[?25h[?25ls[51;80H6-73[23;73H[?25h[?25l[
[1m[37m[41m}[25;33H{[26;18H;[27;39H{[29;9H}

}[m[51;80H7-74[23;74H[?25h[?25l[31m0[m[51;80H8-75[23;75H[?25h[?25l]
}[25;33H{[26;18H;[27;39H{[29;9H}

}[23;73H[46m[[1C][m[51;80H9-76[23;76H[?25h[?25l)[23;58H[46m([m[14C[[1C][46m)[m[51;79H70-77[23;77H[?25h[?25l)[23;12H[46m([m[45C([17C)[46m)[m[51;80H1-78[23;78H[?25h[?25l[51;80H0-77[23;77H[?25h[?25l[46m;[m);[46m)[m[51;80H1-78[23;78H[?25h[?25l[46m [m) [46m)[m[51;80H2-79[23;79H[?25h[?25l[46mi[m)i[46m)[m[51;80H3-80[23;80H[?25h[?25l[46m+[m)+[46m)[m[51;80H4-81[23;81H[?25h[?25l[46m+[m)+[46m)[m[51;80H5-82[23;82H[?25h[?25l[51;80H6-83[23;83H[?25h[?25l}[21;24H[46m{[m[23;12H([69C)[46m}[m[51;80H7-84[23;84H[?25h[?25l[46m      [m[21;24H{[23;12H[46m([69C)[m      [51;80H6-83[23;83H[?25h[?25l{[23;12H([69C)[46m{
}[m[51;80H7-84[23;84H[?25h[?25l[24;50r[24;1H[L[1;51r[24;1H[46m        [m
}[51;76H[K[51;76H24,2-9[8CAll[23;83H{
        [?25h[?25l[25;50r[25;1H[L[1;51r[51;76H[K[51;76H25,2-9[8CAll[25;9H[?25h[?25l}[23;83H[46m{[25;9H}[m[51;79H3-10[25;10H[?25h[?25l[23;83H{[25;9H}[51;77H4,1   [24;1H[?25h[?25l[51;79H2-9[24;9H[?25h[?25l[51;79H3-17[24;17H[?25h[?25li[51;79H4-18[24;18H[?25h[?25l[33mif[m[51;79H5-19[24;19H[?25h[?25l([51;79H6-20[24;20H[?25h[?25la[51;79H7-21[24;21H[?25h[?25l[51;79H8-22[24;22H[?25h[?25l=[51;79H9-23[24;23H[?25h[?25l=[51;79H10-24[24;24H[?25h[?25l[51;80H1-25[24;25H[?25h[?25ld[51;80H2-26[24;26H[?25h[?25le[51;80H3-27[24;27H[?25h[?25ll[51;80H4-28[24;28H[?25h[?25li[51;80H5-29[24;29H[?25h[?25lm[51;80H6-30[24;30H[?25h[?25lE[51;80H7-31[24;31H[?25h[?25ln[51;80H8-32[24;32H[?25h[?25lc[51;80H9-33[24;33H[?25h[?25lo[51;79H20-34[24;34H[?25h[?25ld[51;80H1-35[24;35H[?25h[?25li[51;80H2-36[24;36H[?25h[?25ln[51;80H3-37[24;37H[?25h[?25lg[51;80H4-38[24;38H[?25h[?25ls[51;80H5-39[24;39H[?25h[?25l[[25;9H[1m[37m[41m}
}[27;33H{[28;18H;[29;39H{[31;9H}

}[m[51;80H6-40[24;40H[?25h[?25li[51;80H7-41[24;41H[?25h[?25l][25;9H} 
}[27;33H{[28;18H;[29;39H{[31;9H}

}[24;39H[46m[[mi[46m][m[51;80H8-42[24;42H[?25h[?25l)[24;19H[46m([m[19C[i][46m)[m[51;80H9-43[24;43H[?25h[?25l[24;19H([22C)[51;79H30-44[24;44H[?25h[?25li[51;80H1-45[24;45H[?25h[?25ls[51;80H2-46[24;46H[?25h[?25lI[51;80H3-47[24;47H[?25h[?25ln[51;80H4-48[24;48H[?25h[?25l[51;80H5-49[24;49H[?25h[?25l=[51;80H6-50[24;50H[?25h[?25l=[51;80H7-51[24;51H[?25h[?25l[51;80H8-52[24;52H[?25h[?25lt[51;80H9-53[24;53H[?25h[?25lr[51;79H40-54[24;54H[?25h[?25lu[51;80H1-55[24;55H[?25h[?25l[31mtrue[m[51;80H2-56[24;56H[?25h[?25l[51;77H1,5    [21;5H[?25h[?25lboo checkDelim([32mchar[m a){[21;24H[K[51;79H4[21;4H[?25h[?25l checkDelim([32mchar[m a){[21;23H[K[51;79H3[21;3H[?25h[?25l checkDelim([32mchar[m a){[21;22H[K[51;79H2[21;2H[?25h[?25l checkDelim([32mchar[m a){[21;21H[K[51;79H1[21;1H[?25h[?25l[51;77H2,20-27[22;27H[?25h[?25l[23;50r[23;1H[L[1;51r[51;76H[K[51;76H23,2-9[8CAll[23;9H[?25h[?25li[51;79H3-10[23;10H[?25h[?25ln[51;79H4-11[23;11H[?25h[?25l[32mint[m[51;79H5-12[23;12H[?25h[?25l[51;79H6-13[23;13H[?25h[?25li[51;79H7-14[23;14H[?25h[?25l[51;79H8-15[23;15H[?25h[?25l=[51;79H9-16[23;16H[?25h[?25l[51;79H10-17[23;17H[?25h[?25l[31m0[m[51;80H1-18[23;18H[?25h[?25l;[51;80H2-19[23;19H[?25h[?25l[51;77H4,11-18[24;18H[?25h[?25lautoi = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[24;83H[K[51;80H0-17[24;17H[?25h[?25li = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[24;82H[K[51;79H9-16 [24;16H[?25h[?25li = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[24;81H[K[51;79H8-15[24;15H[?25h[?25li = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[24;80H[K[51;79H7-14[24;14H[?25h[?25li = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[24;79H[K[24;12H[46m([64C)[m[51;79H6-13[24;13H[?25h[?25l([64C)[51;77H5,42-56[25;56H[?25h[?25l;[51;80H3-57[25;57H[?25h[?25l[26;50r[26;1H[L[1;51r[51;76H[K[51;76H26,3-17[7CAll[26;17H[?25h[?25lb[51;79H4-18[26;18H[?25h[?25lr[51;79H5-19[26;19H[?25h[?25le[51;79H6-20[26;20H[?25h[?25la[51;79H7-21[26;21H[?25h[?25l[33mbreak[m[51;79H8-22[26;22H[?25h[?25l;[51;79H9-23[26;23H[?25h[?25l[25;19H[46m([22C)[m[51;77H5,29-43[25;43H[?25h[?25l{ isIn == [31mtrue[m;[25;19H([22C)[46m{[27;9H}[m[51;79H30-44[25;44H[?25h[?25l[26;50r[26;1H[L[1;51r[25;45H[K[26;25HisIn == [31mtrue[m;[27;9H[46m        [m[28;9H}[51;76H[K[51;76H26,10-24      All[25;43H{[27;9H        [26;24H[?25h[?25l[51;79H24-38[26;38H[?25h[?25l[27;50r[27;1H[L[1;51r[51;76H[K[51;76H27,4-25[7CAll[27;25H[?25h[?25l[27;17H}[25;43H[46m{[27;17H}[m[51;81H18[27;18H[?25h[?25l[24;78H[46m{[m[25;43H{[27;17H}[29;9H[46m}[m[51;77H9,3-10[29;10H[?25h[?25l[24;78H{[29;9H}[51;77H1,1   [21;1H[?25h[?25lb checkDelim([32mchar[m a){[51;79H2[21;2H[?25h[?25lo checkDelim([32mchar[m a){[51;79H3[21;3H[?25h[?25lo checkDelim([32mchar[m a){[51;79H4[21;4H[?25h[?25l[32mbool[m checkDelim([32mchar[m a){[51;79H5[21;5H[?25h[?25l  checkDelim([32mchar[m a){[51;79H6[21;6H[?25h[?25l[51;77H3,12-19[23;19H[?25h[?25l[23;18H[K[51;80H1-18[23;18H[?25h[?25l[23;17H[K[51;80H0-17[23;17H[?25h[?25l[51;79H9-16 [23;16H[?25h[?25l[23;15H[K[51;79H8-15[23;15H[?25h[?25l[51;79H7-14[23;14H[?25h[?25l[23;13H[K[51;79H6-13[23;13H[?25h[?25l[51;79H5-12[23;12H[?25h[?25lin[23;11H[K[51;79H4-11[23;11H[?25h[?25l[23;10H[K[51;79H3-10[23;10H[?25h[?25l[23;9H[K[51;79H2-9 [23;9H[?25h[?25l[51;79H1  [23;1H[?25h[?25l[22;50r[50;1H
[1;51r[22;9H[32mbool[m isIn = [31mfalse[m;[50;1H[1m[34m~                                                                                            [m[51;76H[K[51;76H22,20-27      All[22;27H[?25h[?25l[51;77H7,9-23 [27;23H[?25h[?25l[23;78H[46m{[28;9H}[m[51;77H8,3-10[28;10H[?25h[?25l[23;78H{[24;43H[46m{[26;17H}[m[28;9H}[51;77H6,4-18[26;18H[?25h[?25l[26;17H[K[24;43H{[51;79H3-17[26;17H[?25h[?25l[51;79H2-9 [26;9H[?25h[?25l[51;79H1  [26;1H[?25h[?25l[25;50r[50;1H
[1;51r[25;25HisIn == [31mtrue[m;[50;1H[1m[34m~                                                                                            [m[51;76H[K[51;76H25,24-38      All[25;38H[?25h[?25l[51;77H6,4-18 [26;18H[?25h[?25l[51;79H3-17[26;17H[?25h[?25l        [33mbreak[m;[51;79H4-25[26;25H[?25h[?25l[51;79H5-26[26;26H[?25h[?25l[51;79H6-27[26;27H[?25h[?25l[51;79H7-28[26;28H[?25h[?25l[51;79H8-29[26;29H[?25h[?25l[51;79H9-30[26;30H[?25h[?25l[51;79H10-31[26;31H[?25h[?25l[27;50r[27;1H[L[1;51r[51;76H[K[51;76H27,4-25[7CAll[27;25H[?25h[?25l[27;17H}[24;43H[46m{[27;17H}[m[51;81H18[27;18H[?25h[?25l[23;78H[46m{[m[24;43H{[27;17H}[28;9H[46m}[m[51;77H8,3-10[28;10H[?25h[?25l[29;50r[29;1H[L[1;51r[51;76H[K[51;76H29,1[10CAll[23;78H{[28;9H}
[?25h[?25lr[51;79H2[29;2H[?25h[?25le[51;79H3[29;3H[?25h[?25lt[51;79H4[29;4H[?25h[?25lu[51;79H5[29;5H[?25h[?25lr[51;79H6[29;6H[?25h[?25l[33mreturn[m[51;79H7[29;7H[?25h[?25l[51;79H8[29;8H[?25h[?25l[51;79H1[29;1H[?25h[?25l        [33mreturn[m[51;79H2-9[29;9H[?25h[?25l[51;79H9-16[29;16H[?25h[?25li[51;79H10-17[29;17H[?25h[?25ls[51;80H1-18[29;18H[?25h[?25lI[51;80H2-19[29;19H[?25h[?25ln[51;80H3-20[29;20H[?25h[?25l;[51;80H4-21[29;21H[?25h[?25l[51;76H34,2-9  [34;9H[?25h[?25l[51;79H3-17[34;17H[?25h[?25l[51;76H21,7   [21;7H[?25h[?25lcheckDelim([32mchar[m a){[21;25H[K[51;79H6[21;6H[?25h[?25lboolcheckDelim([32mchar[m a){[21;24H[K[51;79H5[21;5H[?25h[?25lcheckDelim([32mchar[m a){[21;23H[K[51;79H4[21;4H[?25h[?25lcheckDelim([32mchar[m a){[21;22H[K[51;79H3[21;3H[?25h[?25lcheckDelim([32mchar[m a){[21;21H[K[51;79H2[21;2H[?25h[?25lcheckDelim([32mchar[m a){[21;20H[K[51;79H1[21;1H[?25h[?25l[20;50r[50;1H
[1;51r[20;1H}checkDelim([32mchar[m a){[50;1H[1m[34m~                                                                                            [m[51;76H[K[51;76H20,2[10CAll[11;29H[46m{[20;1H}[?25h[?25l[mvcheckDelim([32mchar[m a){[11;29H{[20;1H}[51;79H3[20;3H[?25h[?25locheckDelim([32mchar[m a){[51;79H4[20;4H[?25h[?25licheckDelim([32mchar[m a){[51;79H5[20;5H[?25h[?25ldcheckDelim([32mchar[m a){[51;79H6[20;6H[?25h[?25l}[32mvoid[m checkDelim([32mchar[m a){[51;79H7[20;7H[?25h[?25l[51;79H3[20;3H[?25h[?25l[11;29H[46m{[20;1H}[m[51;79H2[20;2H[?25h[?25l[21;50r[21;1H[L[1;51r[20;2H[K[21;1H[32mvoid[m checkDelim([32mchar[m a){[51;76H[K[51;76H21,1[10CAll[11;29H{[20;1H}
[?25h[?25l[11;29H[46m{[20;1H}[m[51;77H0[20;1H[?25h[?25l[51;79H2[20;2H[?25h[?25l;[11;29H{[20;1H}[51;79H3[20;3H[?25h[?25l[51;77H9,14-21[29;21H[?25h[?25l [51;80H3-20[29;20H[?25h[?25l [51;80H2-19[29;19H[?25h[?25l [51;80H1-18[29;18H[?25h[?25l [51;80H0-17[29;17H[?25h[?25l [51;79H9-16 [29;16H[?25h[?25l[51;79H8-15[29;15H[?25h[?25lretur [51;79H7-14[29;14H[?25h[?25l [51;79H6-13[29;13H[?25h[?25l [51;79H5-12[29;12H[?25h[?25l [51;79H4-11[29;11H[?25h[?25l [51;79H3-10[29;10H[?25h[?25l [51;79H2-9 [29;9H[?25h[?25li[51;79H3-10[29;10H[?25h[?25l[33mif[m[51;79H4-11[29;11H[?25h[?25l([51;79H5-12[29;12H[?25h[?25l![51;79H6-13[29;13H[?25h[?25li[51;79H7-14[29;14H[?25h[?25ls[51;79H8-15[29;15H[?25h[?25lI[51;79H9-16[29;16H[?25h[?25ln[51;79H10-17[29;17H[?25h[?25l)[29;11H[46m([m!isIn[46m)[m[51;80H1-18[29;18H[?25h[?25l{[29;11H(!isIn)[46m{
}[m[51;80H2-19[29;19H[?25h[?25l[30;50r[30;1H[L[1;51r[30;1H[46m        [m
}[51;76H[K[51;76H30,2-9[8CAll[29;18H{
        [?25h[?25l[31;50r[31;1H[L[1;51r[51;76H[K[51;76H31,2-9[8CAll[31;9H[?25h[?25l}[29;18H[46m{[31;9H}[m[51;79H3-10[31;10H[?25h[?25l[29;18H{[31;9H}[51;77H0,1   [30;1H[?25h[?25l[51;79H2-9[30;9H[?25h[?25l[51;79H3-17[30;17H[?25h[?25ls[51;79H4-18[30;18H[?25h[?25lt[51;79H5-19[30;19H[?25h[?25ld[51;79H6-20[30;20H[?25h[?25l[33mstd[m:[51;79H7-21[30;21H[?25h[?25lstd::[51;79H8-22[30;22H[?25h[?25lc[51;79H9-23[30;23H[?25h[?25le[51;79H10-24[30;24H[?25h[?25lr[51;80H1-25[30;25H[?25h[?25lr[51;80H2-26[30;26H[?25h[?25l<[51;80H3-27[30;27H[?25h[?25l<[51;80H4-28[30;28H[?25h[?25l[31m"[m[51;80H5-29[30;29H[?25h[?25l[31mi[m[51;80H6-30[30;30H[?25h[?25l[31mn[m[51;80H7-31[30;31H[?25h[?25l[31mv[m[51;80H8-32[30;32H[?25h[?25l[31ma[m[51;80H9-33[30;33H[?25h[?25l[31ml[m[51;79H20-34[30;34H[?25h[?25l[31md[m[51;80H1-35[30;35H[?25h[?25l[31mi[m[51;80H2-36[30;36H[?25h[?25l[30;35H[K[51;80H1-35[30;35H[?25h[?25l[30;34H[K[51;80H0-34[30;34H[?25h[?25l[31mi[m[51;80H1-35[30;35H[?25h[?25l[31md[m[51;80H2-36[30;36H[?25h[?25l[31m [m[51;80H3-37[30;37H[?25h[?25l[31md[m[51;80H4-38[30;38H[?25h[?25l[31me[m[51;80H5-39[30;39H[?25h[?25l[31ml[m[51;80H6-40[30;40H[?25h[?25l[31mm[m[51;80H7-41[30;41H[?25h[?25l[31mi[m[51;80H8-42[30;42H[?25h[?25l[31mt[m[51;80H9-43[30;43H[?25h[?25l[30;42H[K[51;80H8-42[30;42H[?25h[?25l[30;41H[K[51;80H7-41[30;41H[?25h[?25l[30;40H[K[51;80H6-40[30;40H[?25h[?25l[31mi[m[51;80H7-41[30;41H[?25h[?25l[31mm[m[51;80H8-42[30;42H[?25h[?25l[31mi[m[51;80H9-43[30;43H[?25h[?25l[31mt[m[51;79H30-44[30;44H[?25h[?25l[31me[m[51;80H1-45[30;45H[?25h[?25l[31mr[m[51;80H2-46[30;46H[?25h[?25l[31m [m[51;80H3-47[30;47H[?25h[?25l[31m"[m[51;80H4-48[30;48H[?25h[?25l[51;80H5-49[30;49H[?25h[?25l<[51;80H6-50[30;50H[?25h[?25l<[51;80H7-51[30;51H[?25h[?25l[51;80H8-52[30;52H[?25h[?25la[51;80H9-53[30;53H[?25h[?25l[51;79H40-54[30;54H[?25h[?25l<[51;80H1-55[30;55H[?25h[?25l<[51;80H2-56[30;56H[?25h[?25l[51;80H3-57[30;57H[?25h[?25ls[51;80H4-58[30;58H[?25h[?25lt[51;80H5-59[30;59H[?25h[?25ld[51;80H6-60[30;60H[?25h[?25l:[51;80H7-61[30;61H[?25h[?25l:[51;80H8-62[30;62H[?25h[?25le[51;80H9-63[30;63H[?25h[?25ln[51;79H50-64[30;64H[?25h[?25ld[51;80H1-65[30;65H[?25h[?25ll[51;80H2-66[30;66H[?25h[?25l;[51;80H3-67[30;67H[?25h[?25l[51;77H6,2-9  [36;9H[?25h[?25l[51;79H3-17[36;17H[?25h[?25lc[51;79H4-18[36;18H[?25h[?25lh[51;79H5-19[36;19H[?25h[?25le[51;79H6-20[36;20H[?25h[?25lc[51;79H7-21[36;21H[?25h[?25lk[51;79H8-22[36;22H[?25h[?25lD[51;79H9-23[36;23H[?25h[?25le[51;79H10-24[36;24H[?25h[?25ll[51;80H1-25[36;25H[?25h[?25li[51;80H2-26[36;26H[?25h[?25lm[51;80H3-27[36;27H[?25h[?25l([51;80H4-28[36;28H[?25h[?25la[51;80H5-29[36;29H[?25h[?25lr[51;80H6-30[36;30H[?25h[?25lg[51;80H7-31[36;31H[?25h[?25lc[51;80H8-32[36;32H[?25h[?25l [51;80H7-31[36;31H[?25h[?25lv[51;80H8-32[36;32H[?25h[?25l[[37;9H[1m[37m[41m}

}[m[51;80H9-33[36;33H[?25h[?25li[51;79H20-34[36;34H[?25h[?25l][37;9H}

}[36;32H[46m[[mi[46m][m[51;80H1-35[36;35H[?25h[?25l)[36;27H[46m([margv[i][46m)[m[51;80H2-36[36;36H[?25h[?25l;[36;27H([7C)[51;80H3-37[36;37H[?25h[?25l[37;50r[37;1H[L[1;51r[51;76H[K[51;76H37,1[10CAll[37;1H[?25h[?25l[51;79H2-9[37;9H[?25h[?25l[51;79H3-17[37;17H[?25h[?25li[51;79H4-18[37;18H[?25h[?25l[33mif[m[51;79H5-19[37;19H[?25h[?25l([51;79H6-20[37;20H[?25h[?25l[51;77H6,23-37[36;37H[?25h[?25l[37;50r[37;1H[L[1;51r[51;76H[K[51;76H37,3-17[7CAll[37;17H[?25h[?25li[51;79H4-18[37;18H[?25h[?25ln[51;79H5-19[37;19H[?25h[?25l[32mint[m[51;79H6-20[37;20H[?25h[?25l[51;79H7-21[37;21H[?25h[?25li[51;79H8-22[37;22H[?25h[?25l[51;79H9-23[37;23H[?25h[?25l=[51;79H10-24[37;24H[?25h[?25l[51;80H1-25[37;25H[?25h[?25l[51;79H8-22 [37;22H[?25h[?25l = [51;79H7-21[37;21H[?25h[?25ld =[51;79H8-22[37;22H[?25h[?25le =[51;79H9-23[37;23H[?25h[?25ll =[51;79H10-24[37;24H[?25h[?25li =[51;80H1-25[37;25H[?25h[?25lm =[51;80H2-26[37;26H[?25h[?25l[51;80H5-29[37;29H[?25h[?25l[21;24H[46m{[32;1H}[m[51;77H2,2    [32;2H[?25h[?25l[33;50r[33;1H[L[1;51r[51;76H[K[51;76H33,1[10CAll[21;24H{[32;1H}
[?25h[?25li[51;79H2[33;2H[?25h[?25ln[51;79H3[33;3H[?25h[?25l[32mint[m[51;79H4[33;4H[?25h[?25l[51;79H5[33;5H[?25h[?25lg[51;79H6[33;6H[?25h[?25le[51;79H7[33;7H[?25h[?25lt[51;79H8[33;8H[?25h[?25l[51;79H9[33;9H[?25h[?25l[51;79H8[33;8H[?25h[?25lD[51;79H9[33;9H[?25h[?25le[51;79H10[33;10H[?25h[?25ll[51;80H1[33;11H[?25h[?25li[51;80H2[33;12H[?25h[?25lm[51;80H3[33;13H[?25h[?25lE[51;80H4[33;14H[?25h[?25ln[51;80H5[33;15H[?25h[?25lc[51;80H6[33;16H[?25h[?25lo[51;80H7[33;17H[?25h[?25ld[51;80H8[33;18H[?25h[?25li[51;80H9[33;19H[?25h[?25ln[51;79H20[33;20H[?25h[?25lg[51;80H1[33;21H[?25h[?25l[24;19H[46m([22C)[m[51;76H24,28-42[24;42H[?25h[?25l[46m[[m[1m[37m[41m){[25;37H;[26;30H;[27;17H}[28;9H}[29;18H{[30;66H;[31;9H}
}[34;33H{[35;18H;[36;39H{[37;36H;[m[24;42H[[1m[37m[46m)[m[1m[37m[41m{[m[51;80H9-43[24;43H[?25h[?25l[31m[46m0[m[1m[37m[41m){[m[31m0[m[1m[37m[46m)[m[1m[37m[41m{[m[51;79H30-44[24;44H[?25h[?25l[46m][m){[25;37H;[26;30H;[27;17H}[28;9H}[29;18H{[30;66H;[31;9H} 
}[34;33H{[35;18H;[36;39H{[37;36H;[24;44H][46m)[m[51;80H1-45[24;45H[?25h[?25l[24;19H([25C)[37;27H[46m([7C)[m[51;76H37,21-3[37;35H[?25h[?25l[46m[[m[1m[37m[41m);[m[[1m[37m[46m)[m[1m[37m[41m;[m[51;80H2-36[37;36H[?25h[?25l[31m[46m0[m[1m[37m[41m);[m[31m0[m[1m[37m[46m)[m[1m[37m[41m;[m[51;80H3-37[37;37H[?25h[?25l[46m][m);][46m)[m[51;80H4-38[37;38H[?25h[?25l[37;27H([10C)[51;77H8,15-29[38;29H[?25h[?25lg[51;80H6-30[38;30H[?25h[?25le[51;80H7-31[38;31H[?25h[?25lt[51;80H8-32[38;32H[?25h[?25l[51;80H9-33[38;33H[?25h[?25l[51;80H8-32[38;32H[?25h[?25lD[51;80H9-33[38;33H[?25h[?25le[51;79H20-34[38;34H[?25h[?25ll[51;80H1-35[38;35H[?25h[?25li[51;80H2-36[38;36H[?25h[?25lm[51;80H3-37[38;37H[?25h[?25lE[51;80H4-38[38;38H[?25h[?25ln[51;80H5-39[38;39H[?25h[?25lc[51;80H6-40[38;40H[?25h[?25lo[51;80H7-41[38;41H[?25h[?25ld[51;80H8-42[38;42H[?25h[?25li[51;80H9-43[38;43H[?25h[?25ln[51;79H30-44[38;44H[?25h[?25lg[51;80H1-45[38;45H[?25h[?25l([51;80H2-46[38;46H[?25h[?25la[51;80H3-47[38;47H[?25h[?25lr[51;80H4-48[38;48H[?25h[?25lg[51;80H5-49[38;49H[?25h[?25lv[51;80H6-50[38;50H[?25h[?25l[[51;80H7-51[38;51H[?25h[?25li[51;80H8-52[38;52H[?25h[?25l][46m[[mi[46m][m[51;80H9-53[38;53H[?25h[?25l[[i][51;79H40-54[38;54H[?25h[?25l[31m0[m[51;80H1-55[38;55H[?25h[?25l][46m[[1C][m[51;80H2-56[38;56H[?25h[?25l)[38;45H[46m([m[7C[[1C][46m)[m[51;80H3-57[38;57H[?25h[?25l;[38;45H([10C)[51;80H4-58[38;58H[?25h[?25l[51;77H3,21   [33;21H[?25h[?25l([51;80H2[33;22H[?25h[?25lc[51;80H3[33;23H[?25h[?25lh[51;80H4[33;24H[?25h[?25la[51;80H5[33;25H[?25h[?25l[32mchar[m[51;80H6[33;26H[?25h[?25l[51;80H7[33;27H[?25h[?25la[51;80H8[33;28H[?25h[?25l)[33;21H[46m([6C)[m[51;80H9[33;29H[?25h[?25l{[33;21H([6C)[51;79H30[33;30H[?25h[?25l[34;50r[34;1H[L[1;51r[51;76H[K[51;76H34,2-9[8CAll[34;9H[?25h[?25l[35;50r[35;1H[L[1;51r[51;76H[K[51;76H35,2-9[8CAll[35;9H[?25h[?25l[36;50r[36;1H[L[1;51r[51;76H[K[51;76H36,2-9[8CAll[36;9H[?25h[?25l}[33;29H[46m{


}[m[51;80H  [36;2H[?25h[?25l[33;29H{


}[51;77H5,1[35;1H[?25h[?25l[51;77H4[34;1H[?25h[?25l[51;79H2-9[34;9H[?25h[?25li[51;79H3-10[34;10H[?25h[?25ln[51;79H4-11[34;11H[?25h[?25l[32mint[m[51;79H5-12[34;12H[?25h[?25l[51;79H6-13[34;13H[?25h[?25lr[51;79H7-14[34;14H[?25h[?25le[51;79H8-15[34;15H[?25h[?25lt[51;79H9-16[34;16H[?25h[?25l[51;79H10-17[34;17H[?25h[?25l=[51;80H1-18[34;18H[?25h[?25l[51;80H2-19[34;19H[?25h[?25l[31m0[m[51;80H3-20[34;20H[?25h[?25l;[51;80H4-21[34;21H[?25h[?25l[35;50r[35;1H[L[1;51r[51;76H[K[51;76H35,2-9[8CAll[35;9H[?25h[?25lf[51;79H3-10[35;10H[?25h[?25lo[51;79H4-11[35;11H[?25h[?25l[33mfor[m[51;79H5-12[35;12H[?25h[?25l([51;79H6-13[35;13H[?25h[?25li[51;79H7-14[35;14H[?25h[?25ln[51;79H8-15[35;15H[?25h[?25l[32mint[m[51;79H9-16[35;16H[?25h[?25l[51;79H10-17[35;17H[?25h[?25li[51;80H1-18[35;18H[?25h[?25l[51;76H23,7-14 [23;14H[?25h[?25l[46m([64C)[m[51;79H6-13[23;13H[?25h[?25lai = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i+[46m+[m){[23;12H([64C+[51;79H7-14[23;14H[?25h[?25lui = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[51;79H8-15[23;15H[?25h[?25loi = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[51;79H9-16[23;16H[?25h[?25lti = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[51;79H10-17[23;17H[?25h[?25li = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[23;82H[K[51;79H9-16 [23;16H[?25h[?25li = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[23;81H[K[51;79H8-15[23;15H[?25h[?25li = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[23;80H[K[51;79H7-14[23;14H[?25h[?25lui = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[51;79H8-15[23;15H[?25h[?25lti = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[51;79H9-16[23;16H[?25h[?25loi = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[51;79H10-17[23;17H[?25h[?25l[32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[51;80H1-18[23;18H[?25h[?25l[51;76H35,10-17[35;17H[?25h[?25l\i[51;80H1-18[35;18H[?25h[?25l\i[51;80H2-19[35;19H[?25h[?25l\i[51;80H3-20[35;20H[?25h[?25li[35;20H[K[51;80H2-19[35;19H[?25h[?25li[35;19H[K[51;80H1-18[35;18H[?25h[?25li[35;18H[K[51;80H0-17[35;17H[?25h[?25linti[35;17H[K[51;79H9-16 [35;16H[?25h[?25li[35;16H[K[51;79H8-15[35;15H[?25h[?25li[35;15H[K[51;79H7-14[35;14H[?25h[?25l[35;14H[K[51;79H6-13[35;13H[?25h[?25lai[51;79H7-14[35;14H[?25h[?25lui[51;79H8-15[35;15H[?25h[?25lti[51;79H9-16[35;16H[?25h[?25loi[51;79H10-17[35;17H[?25h[?25l[32mauto[m i[51;80H1-18[35;18H[?25h[?25l[51;80H2-19[35;19H[?25h[?25l[51;80H3-20[35;20H[?25h[?25l=[51;80H4-21[35;21H[?25h[?25l[51;80H5-22[35;22H[?25h[?25l[31m0[m[51;80H6-23[35;23H[?25h[?25l;[51;80H7-24[35;24H[?25h[?25l[51;80H8-25[35;25H[?25h[?25li[51;80H9-26[35;26H[?25h[?25l[51;79H20-27[35;27H[?25h[?25l<[51;80H1-28[35;28H[?25h[?25l[51;80H2-29[35;29H[?25h[?25ls[51;80H3-30[35;30H[?25h[?25li[51;80H4-31[35;31H[?25h[?25lz[51;80H5-32[35;32H[?25h[?25le[51;80H6-33[35;33H[?25h[?25lo[51;80H7-34[35;34H[?25h[?25l[33msizeof[m[51;80H8-35[35;35H[?25h[?25l([51;80H9-36[35;36H[?25h[?25ld[51;79H30-37[35;37H[?25h[?25le[51;80H1-38[35;38H[?25h[?25ll[51;80H2-39[35;39H[?25h[?25li[51;80H3-40[35;40H[?25h[?25lm[51;80H4-41[35;41H[?25h[?25lE[51;80H5-42[35;42H[?25h[?25ln[51;80H6-43[35;43H[?25h[?25lc[51;80H7-44[35;44H[?25h[?25lo[51;80H8-45[35;45H[?25h[?25ld[51;80H9-46[35;46H[?25h[?25li[51;79H40-47[35;47H[?25h[?25ln[51;80H1-48[35;48H[?25h[?25lg[51;80H2-49[35;49H[?25h[?25ls[51;80H3-50[35;50H[?25h[?25l)[35;35H[46m([14C)[m[51;80H4-51[35;51H[?25h[?25l/[35;35H([14C)[51;80H5-52[35;52H[?25h[?25ld[51;80H6-53[35;53H[?25h[?25le[51;80H7-54[35;54H[?25h[?25l[35;53H[K[51;80H6-53[35;53H[?25h[?25l[35;52H[K[51;80H5-52[35;52H[?25h[?25ls[51;80H6-53[35;53H[?25h[?25li[51;80H7-54[35;54H[?25h[?25lz[51;80H8-55[35;55H[?25h[?25le[51;80H9-56[35;56H[?25h[?25lo[51;79H50-57[35;57H[?25h[?25l[33msizeof[m[51;80H1-58[35;58H[?25h[?25l([51;80H2-59[35;59H[?25h[?25ld[51;80H3-60[35;60H[?25h[?25le[51;80H4-61[35;61H[?25h[?25ll[51;80H5-62[35;62H[?25h[?25li[51;80H6-63[35;63H[?25h[?25lm[51;80H7-64[35;64H[?25h[?25lE[51;80H8-65[35;65H[?25h[?25ln[51;80H9-66[35;66H[?25h[?25lc[51;79H60-67[35;67H[?25h[?25lo[51;80H1-68[35;68H[?25h[?25ld[51;80H2-69[35;69H[?25h[?25li[51;80H3-70[35;70H[?25h[?25ln[51;80H4-71[35;71H[?25h[?25lg[51;80H5-72[35;72H[?25h[?25ls[51;80H6-73[35;73H[?25h[?25l[

[1m[37m[41m}[38;33H{[39;18H;[40;39H{[41;39H;[42;57H;[m[51;80H7-74[35;74H[?25h[?25l[31m0[m[51;80H8-75[35;75H[?25h[?25l]

}[38;33H{[39;18H;[40;39H{[41;39H;[42;57H;[35;73H[46m[[1C][m[51;80H9-76[35;76H[?25h[?25l)[35;58H[46m([m[14C[[1C][46m)[m[51;79H70-77[35;77H[?25h[?25l;[35;58H([17C)[51;80H1-78[35;78H[?25h[?25l[51;80H2-79[35;79H[?25h[?25li[51;80H3-80[35;80H[?25h[?25l+[51;80H4-81[35;81H[?25h[?25l+[51;80H5-82[35;82H[?25h[?25l)[35;12H[46m([69C)[m[51;80H6-83[35;83H[?25h[?25l{[35;12H([69C)[46m{

}[m[51;80H7-84[35;84H[?25h[?25l[36;50r[36;1H[L[1;51r[38;1H}[51;76H[K[51;76H36,3-17[7CAll[35;83H{[36;17H[?25h[?25l[37;50r[37;1H[L[1;51r[51;76H[K[51;76H37,3-17[7CAll[37;17H[?25h[?25l[37;9H}[35;83H[46m{[37;9H}[m[51;82H0[37;10H[?25h[?25l[35;83H{[37;9H}[51;77H6,1   [36;1H[?25h[?25l[51;79H2-9[36;9H[?25h[?25l[51;79H3-17[36;17H[?25h[?25li[51;79H4-18[36;18H[?25h[?25l[33mif[m[51;79H5-19[36;19H[?25h[?25l([51;79H6-20[36;20H[?25h[?25la[51;79H7-21[36;21H[?25h[?25l[51;79H8-22[36;22H[?25h[?25l=[51;79H9-23[36;23H[?25h[?25l=[51;79H10-24[36;24H[?25h[?25l[51;80H1-25[36;25H[?25h[?25ld[51;80H2-26[36;26H[?25h[?25le[51;80H3-27[36;27H[?25h[?25ll[51;80H4-28[36;28H[?25h[?25li[51;80H5-29[36;29H[?25h[?25lm[51;80H6-30[36;30H[?25h[?25lE[51;80H7-31[36;31H[?25h[?25ln[51;80H8-32[36;32H[?25h[?25lc[51;80H9-33[36;33H[?25h[?25lo[51;79H20-34[36;34H[?25h[?25ld[51;80H1-35[36;35H[?25h[?25li[51;80H2-36[36;36H[?25h[?25ln[51;80H3-37[36;37H[?25h[?25lg[51;80H4-38[36;38H[?25h[?25ls[51;80H5-39[36;39H[?25h[?25l[[37;9H[1m[37m[41m}

}[40;33H{[41;18H;[42;39H{[43;39H;[44;57H;[m[51;80H6-40[36;40H[?25h[?25li[51;80H7-41[36;41H[?25h[?25l][37;9H}

}[40;33H{[41;18H;[42;39H{[43;39H;[44;57H;[36;39H[46m[[mi[46m][m[51;80H8-42[36;42H[?25h[?25l[[37;9H[1m[37m[41m}

}[40;33H{[41;18H;[42;39H{[43;39H;[44;57H;[m[36;39H[i][51;80H9-43[36;43H[?25h[?25l[31m0[m[51;79H30-44[36;44H[?25h[?25l][37;9H}

}[40;33H{[41;18H;[42;39H{[43;39H;[44;57H;[36;42H[46m[[1C][m[51;80H1-45[36;45H[?25h[51;1H[K[36;44H[?25l[51;66H^[[36;44H[51;66H  [36;45H[51;76H36,30-44      All[36;44H[?25h[?25l[51;66H~@k[36;44H[51;66H   [36;44H[?25h[?25l[51;66Hi[36;44H[51;66H [36;44H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H36,30-44      All[36;44H[?25h[?25l[51;80H1-45[36;45H[?25h[?25l)[36;19H[46m([m[22C[[1C][46m)[m[51;80H2-46[36;46H[?25h[?25l{[36;19H([25C)[46m{[37;9H}[m[51;80H3-47[36;47H[?25h[?25l[37;50r[37;1H[L[1;51r[37;9H[46m        [m[38;9H}[51;76H[K[51;76H37,4-25[7CAll[36;46H{[37;9H        [8C[?25h[?25l[38;50r[38;1H[L[1;51r[51;76H[K[51;76H38,4-25[7CAll[38;25H[?25h[?25l[38;17H}[36;46H[46m{[38;17H}[m[51;81H18[38;18H[?25h[?25l[36;46H{[38;17H}[51;77H7,1   [37;1H[?25h[?25l[51;79H2-9[37;9H[?25h[?25l[51;79H3-17[37;17H[?25h[?25l[51;79H4-25[37;25H[?25h[?25lr[51;79H5-26[37;26H[?25h[?25le[51;79H6-27[37;27H[?25h[?25lt[51;79H7-28[37;28H[?25h[?25l[51;79H8-29[37;29H[?25h[?25l=[51;79H9-30[37;30H[?25h[?25l[51;79H10-31[37;31H[?25h[?25ld[51;80H1-32[37;32H[?25h[?25le[51;80H2-33[37;33H[?25h[?25ll[51;80H3-34[37;34H[?25h[?25li[51;80H4-35[37;35H[?25h[?25lm[51;80H5-36[37;36H[?25h[?25lE[51;80H6-37[37;37H[?25h[?25ln[51;80H7-38[37;38H[?25h[?25lc[51;80H8-39[37;39H[?25h[?25lo[51;80H9-40[37;40H[?25h[?25ld[51;79H20-41[37;41H[?25h[?25li[51;80H1-42[37;42H[?25h[?25ln[51;80H2-43[37;43H[?25h[?25lg[51;80H3-44[37;44H[?25h[?25ls[51;80H4-45[37;45H[?25h[?25l[[38;17H[1m[37m[41m}[39;9H}

}[42;33H{[43;18H;[44;39H{[45;39H;[46;57H;[m[51;80H5-46[37;46H[?25h[?25li[51;80H6-47[37;47H[?25h[?25l][38;17H}[39;9H}

}[42;33H{[43;18H;[44;39H{[45;39H;[46;57H;[37;45H[46m[[mi[46m][m[51;80H7-48[37;48H[?25h[?25l[[38;17H[1m[37m[41m}[39;9H}

}[42;33H{[43;18H;[44;39H{[45;39H;[46;57H;[m[37;45H[i][51;80H8-49[37;49H[?25h[?25l[31m1[m[51;80H9-50[37;50H[?25h[?25l][38;17H}[39;9H}

}[42;33H{[43;18H;[44;39H{[45;39H;[46;57H;[37;48H[46m[[1C][m[51;79H30-51[37;51H[?25h[?25l;[[1C][51;80H1-52[37;52H[?25h[?25l[36;46H[46m{[38;17H}[m[51;77H8,4-18 [38;18H[?25h[?25l[35;83H[46m{[m[36;46H{[38;17H}[39;9H[46m}[m[51;77H9,3-10[39;10H[?25h[?25l[40;50r[40;1H[L[1;51r[51;76H[K[51;76H40,2-9[8CTop[35;83H{[39;9H}[40;9H[?25h[?25lr[51;79H3-10[40;10H[?25h[?25le[51;79H4-11[40;11H[?25h[?25lt[51;79H5-12[40;12H[?25h[?25lu[51;79H6-13[40;13H[?25h[?25lr[51;79H7-14[40;14H[?25h[?25l[33mreturn[m[51;79H8-15[40;15H[?25h[?25l[51;79H9-16[40;16H[?25h[?25lr[51;79H10-17[40;17H[?25h[?25le[51;80H1-18[40;18H[?25h[?25lt[51;80H2-19[40;19H[?25h[?25l;[51;80H3-20[40;20H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H}[51;76H[K[51;76H48,6-20[7CBot[47;20H[?25h[?25lr[51;79H7-21[47;21H[?25h[?25le[51;79H8-22[47;22H[?25h[?25lt[51;79H9-23[47;23H[?25h[?25l [51;79H8-22[47;22H[?25h[?25l [51;79H7-21[47;21H[?25h[?25l [51;79H6-20[47;20H[?25h[?25ls[51;79H7-21[47;21H[?25h[?25lt[51;79H8-22[47;22H[?25h[?25lr[51;79H9-23[47;23H[?25h[?25ll[51;79H10-24[47;24H[?25h[?25le[51;80H1-25[47;25H[?25h[?25ln[51;80H2-26[47;26H[?25h[?25l [51;80H1-25[47;25H[?25h[?25l [51;80H0-24[47;24H[?25h[?25l [51;79H9-23 [47;23H[?25h[?25l [51;79H8-22[47;22H[?25h[?25l [51;79H7-21[47;21H[?25h[?25l [51;79H6-20[47;20H[?25h[?25ls[51;79H7-21[47;21H[?25h[?25lt[51;79H8-22[47;22H[?25h[?25lr[51;79H9-23[47;23H[?25h[?25ll[51;79H10-24[47;24H[?25h[?25le[51;80H1-25[47;25H[?25h[?25ln[51;80H2-26[47;26H[?25h[?25l [51;80H1-25[47;25H[?25h[?25l [51;80H0-24[47;24H[?25h[?25l [51;79H9-23 [47;23H[?25h[?25l [51;79H8-22[47;22H[?25h[?25l [51;79H7-21[47;21H[?25h[?25l [51;79H6-20[47;20H[?25h[?25l[51;77H6,4-18[45;18H[?25h[?25l[51;79H3-17[45;17H[?25h[?25l[1;50r[50;1H
[1;51r[45;50r[45;1H[L[1;51r[44;17H[K[45;17HcheckDelim(argv[i][[31m0[m]);[51;76H[K[51;76H47,3-17[7CBot[45;17H[?25h[?25l[1;50r[50;1H
[1;51r[45;50r[45;1H[L[1;51r[44;17H[K[45;17HcheckDelim(argv[i][[31m0[m]);[51;76H[K[51;76H48,3-17[7CBot[45;17H[?25h[?25l[51;77H7[44;17H[?25h[?25l[51;77H6[43;17H[?25h[?25li[51;79H4-18[43;18H[?25h[?25l[33mif[m[51;79H5-19[43;19H[?25h[?25l([51;79H6-20[43;20H[?25h[?25ls[51;79H7-21[43;21H[?25h[?25lt[51;79H8-22[43;22H[?25h[?25lr[51;79H9-23[43;23H[?25h[?25ll[51;79H10-24[43;24H[?25h[?25le[51;80H1-25[43;25H[?25h[?25ln[51;80H2-26[43;26H[?25h[?25l([51;80H3-27[43;27H[?25h[?25la[51;80H4-28[43;28H[?25h[?25lr[51;80H5-29[43;29H[?25h[?25lg[51;80H6-30[43;30H[?25h[?25lv[51;80H7-31[43;31H[?25h[?25l[[45;39H[1m[37m[41m;[46;57H;[m[51;80H8-32[43;32H[?25h[?25li[51;80H9-33[43;33H[?25h[?25l][45;39H;[46;57H;[43;31H[46m[[mi[46m][m[51;79H20-34[43;34H[?25h[?25l)[43;26H[46m([margv[i][46m)[m[51;80H1-35[43;35H[?25h[?25l[43;34H[K[43;26H(argv[46m[[mi[46m][m[51;80H0-34[43;34H[?25h[?25l[i][51;80H1-35[43;35H[?25h[?25l=[51;80H2-36[43;36H[?25h[?25l=[51;80H3-37[43;37H[?25h[?25l[51;80H4-38[43;38H[?25h[?25l[31m1[m[51;80H5-39[43;39H[?25h[?25l[51;80H4-38[43;38H[?25h[?25l[51;80H3-37[43;37H[?25h[?25l[51;80H2-36[43;36H[?25h[?25l[51;80H1-35[43;35H[?25h[?25l[51;80H2-36[43;36H[?25h[?25l [31m1[m[43;38H[K[51;80H1-35[43;35H[?25h[?25l!= [31m1[m[51;80H2-36[43;36H[?25h[?25l[51;80H3-37[43;37H[?25h[?25l[51;80H4-38[43;38H[?25h[?25l[51;80H5-39[43;39H[?25h[?25l)[43;26H[46m([12C)[m[51;80H6-40[43;40H[?25h[?25l{[43;26H([12C)[46m{[48;9H}[m[51;80H7-41[43;41H[?25h[?25l[44;50r[44;1H[L[1;51r[48;9H[46m        [m[49;9H}[51;76H[K[51;76H47,5-33[7C75%[43;40H{[48;9H        [44;33H[?25h[?25l[51;77H8,3-17[45;17H[?25h[?25l[16C}[43;40H[46m{[45;33H}[m[51;79H6-34[45;34H[?25h[?25l[51;79H5-33[45;33H[?25h[?25l[43;40H{[45;33H}[51;79H4-25[45;25H[?25h[?25l[43;40H[46m{[45;33H}[m[51;79H5-33[45;33H[?25h[?25l[45;25H}[45;33H[K[45;25H[46m}[m[51;79H4-25[45;25H[?25h[?25l[45;17H}[45;25H[K[45;17H[46m}[m[51;79H3-17[45;17H[?25h[?25l[43;40H{[45;17H}[51;77H7,1   [44;1H[?25h[?25l[51;79H2-9[44;9H[?25h[?25l[51;79H3-17[44;17H[?25h[?25l[51;79H4-25[44;25H[?25h[?25ls[51;79H5-26[44;26H[?25h[?25lt[51;79H6-27[44;27H[?25h[?25ld[51;79H7-28[44;28H[?25h[?25l[33mstd[m:[51;79H8-29[44;29H[?25h[?25lstd::[51;79H9-30[44;30H[?25h[?25lc[51;79H10-31[44;31H[?25h[?25le[51;80H1-32[44;32H[?25h[?25lr[51;80H2-33[44;33H[?25h[?25lr[51;80H3-34[44;34H[?25h[?25l<[51;80H4-35[44;35H[?25h[?25l<[51;80H5-36[44;36H[?25h[?25l[31m"
                }
                checkDelim(argv[i][0]);
                int delim = getDelimEncoding(argv[i][0]);
                if(             
        }[m[51;80H6-37[44;37H[?25h[?25l[31mi[m[51;80H7-38[44;38H[?25h[?25l[31mn[m[51;80H8-39[44;39H[?25h[?25l[31mv[m[51;80H9-40[44;40H[?25h[?25l[31ma[m[51;79H20-41[44;41H[?25h[?25l[31ml[m[51;80H1-42[44;42H[?25h[?25l[31mi[m[51;80H2-43[44;43H[?25h[?25l[31md[m[51;80H3-44[44;44H[?25h[?25l[31m [m[51;80H4-45[44;45H[?25h[?25l[31md[m[51;80H5-46[44;46H[?25h[?25l[31me[m[51;80H6-47[44;47H[?25h[?25l[31ml[m[51;80H7-48[44;48H[?25h[?25l[31mi[m[51;80H8-49[44;49H[?25h[?25l[31mm[m[51;80H9-50[44;50H[?25h[?25l[31mi[m[51;79H30-51[44;51H[?25h[?25l[31mt[m[51;80H1-52[44;52H[?25h[?25l[31me[m[51;80H2-53[44;53H[?25h[?25l[31mr[m[51;80H3-54[44;54H[?25h[?25l[31m"[m
                }
                checkDelim(argv[i][[1C]);
                [32mint[m delim = getDelimEncoding(argv[i][[1C]);
                [33mif[m(             
        }[51;80H4-55[44;55H[?25h[?25l[44;54H[K[45;1H[31m                }
                checkDelim(argv[i][0]);
                int delim = getDelimEncoding(argv[i][0]);
                if(             
        }[m[51;80H3-54[44;54H[?25h[?25l[31m [m[51;80H4-55[44;55H[?25h[?25l[31m"[m
                }
                checkDelim(argv[i][[1C]);
                [32mint[m delim = getDelimEncoding(argv[i][[1C]);
                [33mif[m(             
        }[51;80H5-56[44;56H[?25h[?25l[51;80H6-57[44;57H[?25h[?25l<[51;80H7-58[44;58H[?25h[?25l<[51;80H8-59[44;59H[?25h[?25l[51;80H9-60[44;60H[?25h[?25la[51;79H40-61[44;61H[?25h[?25lr[51;80H1-62[44;62H[?25h[?25lg[51;80H2-63[44;63H[?25h[?25lv[51;80H3-64[44;64H[?25h[?25l[[45;17H[1m[37m[41m}[46;39H;[47;57H;[m[51;80H4-65[44;65H[?25h[?25li[51;80H5-66[44;66H[?25h[?25l][45;17H}[46;39H;[47;57H;[44;64H[46m[[mi[46m][m[51;80H6-67[44;67H[?25h[?25l[i][51;80H7-68[44;68H[?25h[?25l<[51;80H8-69[44;69H[?25h[?25l<[51;80H9-70[44;70H[?25h[?25l[51;79H50-71[44;71H[?25h[?25ls[51;80H1-72[44;72H[?25h[?25lt[51;80H2-73[44;73H[?25h[?25ld[51;80H3-74[44;74H[?25h[?25l:[51;80H4-75[44;75H[?25h[?25l:[51;80H5-76[44;76H[?25h[?25le[51;80H6-77[44;77H[?25h[?25ln[51;80H7-78[44;78H[?25h[?25ld[51;80H8-79[44;79H[?25h[?25ll[51;80H9-80[44;80H[?25h[?25l;[51;79H60-81[44;81H[?25h[?25l[1;50r[50;1H
[1;51r[50;1H}[51;76H[K[51;76H51,6-20[7CBot[47;20H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H51,6-20[7CBot[44;20H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H51,6-20[7CBot[41;20H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H51,6-20[7CBot[38;20H[?25h[?25ld[51;79H7-21[38;21H[?25h[?25le[51;79H8-22[38;22H[?25h[?25ll[51;79H9-23[38;23H[?25h[?25li[51;79H10-24[38;24H[?25h[?25lm[51;80H1-25[38;25H[?25h[?25l[51;80H2-26[38;26H[?25h[?25l![51;80H3-27[38;27H[?25h[?25l=[51;80H4-28[38;28H[?25h[?25l[51;80H5-29[38;29H[?25h[?25l[31m0[m[51;80H6-30[38;30H[?25h[?25l [51;80H5-29[38;29H[?25h[?25l[51;80H4-28[38;28H[?25h[?25l [51;80H3-27[38;27H[?25h[?25l [51;80H2-26[38;26H[?25h[?25l>[51;80H3-27[38;27H[?25h[?25l[51;80H4-28[38;28H[?25h[?25l[31m0[m[51;80H5-29[38;29H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1HDelimMap delimEncodings[] = {[2;9H{ [31m'('[m, [31m1[m},[3;9H{ [31m')'[m, -[31m1[m},[51;76H[K[51;76H51,15-29      Bot[41;29H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H51,15-29      Bot[38;29H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H51,15-29      Bot[35;29H[?25h[?25l)[35;19H[46m([9C)[m[51;80H6-30[35;30H[?25h[?25l[35;19H([9C)[51;80H7-33[35;33H[?25h[?25l[35;19H[46m([9C)[m[51;80H6-30[35;30H[?25h[?25l{[35;19H([9C)[46m{[36;9H}[m[51;80H7-31[35;31H[?25h[?25l[36;50r[36;1H[L[1;51r[36;9H[46m        [m[37;9H}[51;76H[K[51;76H52,1[10CBot[35;30H{[36;9H        [?25h[?25l[37;50r[37;1H[L[1;51r[51;76H[K[51;76H53,1[10CBot[37;1H[?25h[?25l[16C}[35;30H[46m{[37;17H}[m[51;79H4-18[37;18H[?25h[?25l[35;30H{[37;17H}[51;77H2,1   [36;1H[?25h[?25l[51;79H2-9[36;9H[?25h[?25l[51;79H3-17[36;17H[?25h[?25l[51;79H4-25[36;25H[?25h[?25ls[51;79H5-26[36;26H[?25h[?25lt[51;79H6-27[36;27H[?25h[?25lk[51;79H7-28[36;28H[?25h[?25l.[51;79H8-29[36;29H[?25h[?25lp[51;79H9-30[36;30H[?25h[?25lu[51;79H10-31[36;31H[?25h[?25lc[51;80H1-32[36;32H[?25h[?25lh[51;80H2-33[36;33H[?25h[?25l[36;32H[K[51;80H1-32[36;32H[?25h[?25l[36;31H[K[51;80H0-31[36;31H[?25h[?25ls[51;80H1-32[36;32H[?25h[?25lh[51;80H2-33[36;33H[?25h[?25l([51;80H3-34[36;34H[?25h[?25ld[51;80H4-35[36;35H[?25h[?25le[51;80H5-36[36;36H[?25h[?25ll[51;80H6-37[36;37H[?25h[?25li[51;80H7-38[36;38H[?25h[?25lm[51;80H8-39[36;39H[?25h[?25l)[36;33H[46m([mdelim[46m)[m[51;80H9-40[36;40H[?25h[?25l;[36;33H(delim)[51;79H20-41[36;41H[?25h[?25l[51;77H3,6-33 [37;33H[?25h[?25l[51;79H5-25[37;25H[?25h[?25l[35;30H[46m{[37;17H}[m[51;79H4-18[37;18H[?25h[?25le[35;30H{[37;17H}[51;79H5-19[37;19H[?25h[?25ll[51;79H6-20[37;20H[?25h[?25ls[51;79H7-21[37;21H[?25h[?25l[33melse[m[51;79H8-22[37;22H[?25h[?25l[51;79H9-23[37;23H[?25h[?25li[51;79H10-24[37;24H[?25h[?25l[33mif[m[51;80H1-25[37;25H[?25h[?25l[51;80H2-26[37;26H[?25h[?25l[51;80H1-25[37;25H[?25h[?25l([51;80H2-26[37;26H[?25h[?25le[51;80H3-27[37;27H[?25h[?25l [51;80H2-26[37;26H[?25h[?25ld[51;80H3-27[37;27H[?25h[?25le[51;80H4-28[37;28H[?25h[?25ll[51;80H5-29[37;29H[?25h[?25li[51;80H6-30[37;30H[?25h[?25lm[51;80H7-31[37;31H[?25h[?25l[51;80H8-32[37;32H[?25h[?25l=[51;80H9-33[37;33H[?25h[?25l=[51;79H20-34[37;34H[?25h[?25l[51;80H1-35[37;35H[?25h[?25l[31m0[m[51;80H2-36[37;36H[?25h[?25l)[37;25H[46m([10C)[m[51;80H3-37[37;37H[?25h[?25l{[37;25H([10C)[46m{[38;9H}[m[51;80H4-38[37;38H[?25h[?25l[38;50r[38;1H[L[1;51r[38;9H[46m        [m[39;9H}[51;76H[K[51;76H54,1[10CBot[37;37H{[38;9H        [?25h[?25l[39;50r[39;1H[L[1;51r[51;76H[K[51;76H55,1[10CBot[39;1H[?25h[?25l[16C}[37;37H[46m{[39;17H}[m[51;79H4-18[39;18H[?25h[?25l[37;37H{[39;17H}[51;77H4,1   [38;1H[?25h[?25l[51;79H2-9[38;9H[?25h[?25l[51;79H3-17[38;17H[?25h[?25l[51;79H4-25[38;25H[?25h[?25l[51;77H5,5[39;25H[?25h[?25l[37;37H[46m{[39;17H}[m[51;79H4-18[39;18H[?25h[?25l[46m        [m[37;37H{[39;17H        [51;79H3-17[39;17H[?25h[?25l[51;79H2-9 [39;9H[?25h[?25l[51;79H1  [39;1H[?25h[?25l[38;50r[50;1H
[1;51r[50;1H[1m[34m~                                                                                            [m[51;76H[K[51;76H54,4-25[7CBot[38;25H[?25h[?25l[51;79H3-17[38;17H[?25h[?25l[51;79H2-9 [38;9H[?25h[?25l[51;79H1  [38;1H[?25h[?25l[37;50r[50;1H
[1;51r[37;17H}[33melse[m [33mif[m(delim == [31m0[m){[50;1H[1m[34m~                                                                                            [m[51;76H[K[51;76H53,24-38      Bot[37;37H[46m{[38;9H}[37;38H[?25h[?25l    [37;25H([10C)[m    [38;9H}[51;80H3-37[37;37H[?25h[?25l[46m     [m[37;25H([10C     [51;80H2-36[37;36H[?25h[?25l [51;80H1-35[37;35H[?25h[?25l[51;80H0-34[37;34H[?25h[?25l [51;79H19-33[37;33H[?25h[?25l [51;80H8-32[37;32H[?25h[?25l[51;80H7-31[37;31H[?25h[?25l [51;80H6-30[37;30H[?25h[?25l [51;80H5-29[37;29H[?25h[?25l [51;80H4-28[37;28H[?25h[?25l [51;80H3-27[37;27H[?25h[?25l [51;80H2-26[37;26H[?25h[?25l [51;80H1-25[37;25H[?25h[?25li [51;80H0-24[37;24H[?25h[?25l [51;79H9-23 [37;23H[?25h[?25l[51;79H8-22[37;22H[?25h[?25l{[46m{[38;9H}[m[51;79H9-23[37;23H[?25h[?25l[38;50r[38;1H[L[1;51r[38;9H[46m        [m[39;9H}[51;76H[K[51;76H54,2-9[8CBot[37;22H{[38;9H        [38;9H[?25h[?25l[39;50r[39;1H[L[1;51r[51;76H[K[51;76H55,2-9[8CBot[39;9H[?25h[?25l[8C}[37;22H[46m{[39;17H}[m[51;79H4-18[39;18H[?25h[?25l[37;22H{[39;17H}[51;77H4,1   [38;1H[?25h[?25l[51;79H2-9[38;9H[?25h[?25l[51;79H3-17[38;17H[?25h[?25l[51;79H4-25[38;25H[?25h[?25li[51;79H5-26[38;26H[?25h[?25l[33mif[m[51;79H6-27[38;27H[?25h[?25l([51;79H7-28[38;28H[?25h[?25ld[51;79H8-29[38;29H[?25h[?25le[51;79H9-30[38;30H[?25h[?25ll[51;79H10-31[38;31H[?25h[?25li[51;80H1-32[38;32H[?25h[?25lm[51;80H2-33[38;33H[?25h[?25l[51;80H3-34[38;34H[?25h[?25l=[51;80H4-35[38;35H[?25h[?25l=[51;80H5-36[38;36H[?25h[?25l[51;80H6-37[38;37H[?25h[?25l[51;80H5-36[38;36H[?25h[?25l[38;35H[K[51;80H4-35[38;35H[?25h[?25l[38;34H[K[51;80H3-34[38;34H[?25h[?25l![51;80H4-35[38;35H[?25h[?25l=[51;80H5-36[38;36H[?25h[?25l[51;80H6-37[38;37H[?25h[?25l[51;80H5-36[38;36H[?25h[?25l[38;35H[K[51;80H4-35[38;35H[?25h[?25l[38;34H[K[51;80H3-34[38;34H[?25h[?25l[51;80H2-33[38;33H[?25h[?25l[38;32H[K[51;80H1-32[38;32H[?25h[?25l[38;31H[K[51;80H0-31[38;31H[?25h[?25l[38;30H[K[51;79H9-30 [38;30H[?25h[?25l[38;29H[K[51;79H8-29[38;29H[?25h[?25l[38;28H[K[51;79H7-28[38;28H[?25h[?25ls[51;79H8-29[38;29H[?25h[?25lt[51;79H9-30[38;30H[?25h[?25lk[51;79H10-31[38;31H[?25h[?25l.[51;80H1-32[38;32H[?25h[?25ls[51;80H2-33[38;33H[?25h[?25li[51;80H3-34[38;34H[?25h[?25lz[51;80H4-35[38;35H[?25h[?25le[51;80H5-36[38;36H[?25h[?25l[51;80H6-37[38;37H[?25h[?25l[51;80H5-36[38;36H[?25h[?25l[51;80H6-37[38;37H[?25h[?25l<[51;80H7-38[38;38H[?25h[?25l=[51;80H8-39[38;39H[?25h[?25l[51;80H9-40[38;40H[?25h[?25l[31m0[m[51;79H20-41[38;41H[?25h[?25l)[38;27H[46m([13C)[m[51;80H1-42[38;42H[?25h[?25l{[38;27H([13C)[46m{[39;17H}[m[51;80H2-43[38;43H[?25h[?25l[39;50r[39;1H[L[1;51r[39;17H[46m        [m[40;17H}[51;76H[K[51;76H55,4-25[7CBot[38;42H{[39;17H        [?25h[?25l[40;50r[40;1H[L[1;51r[51;76H[K[51;76H56,4-25[7CBot[40;25H[?25h[?25l}[38;42H[46m{[40;25H}[m[51;79H5-26[40;26H[?25h[?25l[38;42H{[40;25H}[51;77H5,1   [39;1H[?25h[?25l[51;79H2-9[39;9H[?25h[?25l[51;79H3-17[39;17H[?25h[?25l[51;79H4-25[39;25H[?25h[?25l[51;79H5-33[39;33H[?25h[?25ls[51;79H6-34[39;34H[?25h[?25lt[51;79H7-35[39;35H[?25h[?25ld[51;79H8-36[39;36H[?25h[?25l[33mstd[m:[51;79H9-37[39;37H[?25h[?25lstd::[51;79H10-38[39;38H[?25h[?25lc[51;80H1-39[39;39H[?25h[?25le[51;80H2-40[39;40H[?25h[?25le[51;80H3-41[39;41H[?25h[?25lr[51;80H4-42[39;42H[?25h[?25l[39;41H[K[51;80H3-41[39;41H[?25h[?25l[39;40H[K[51;80H2-40[39;40H[?25h[?25lr[51;80H3-41[39;41H[?25h[?25lr[51;80H4-42[39;42H[?25h[?25l[51;80H5-43[39;43H[?25h[?25l<[51;80H6-44[39;44H[?25h[?25l<[51;80H7-45[39;45H[?25h[?25l[51;80H8-46[39;46H[?25h[?25l[31m"
                        }
                }       
        }

}[m[51;80H9-47[39;47H[?25h[?25l[31mu[m[51;79H20-48[39;48H[?25h[?25l[31mn[m[51;80H1-49[39;49H[?25h[?25l[31mb[m[51;80H2-50[39;50H[?25h[?25l[31ma[m[51;80H3-51[39;51H[?25h[?25l[31ml[m[51;80H4-52[39;52H[?25h[?25l[31ma[m[51;80H5-53[39;53H[?25h[?25l[31mn[m[51;80H6-54[39;54H[?25h[?25l[31mc[m[51;80H7-55[39;55H[?25h[?25l[31me[m[51;80H8-56[39;56H[?25h[?25l[31md[m[51;80H9-57[39;57H[?25h[?25l[31m [m[51;79H30-58[39;58H[?25h[?25l[31m@[m[51;80H1-59[39;59H[?25h[?25l[31m"[m
                        }
                }       
        }

}[51;80H2-60[39;60H[?25h[?25l[39;59H[K[40;1H[31m                        }
                }       
        }

}[m[51;80H1-59[39;59H[?25h[?25l[31m [m[51;80H2-60[39;60H[?25h[?25l[31m"[m
                        }
                }       
        }

}[51;80H3-61[39;61H[?25h[?25l[51;80H4-62[39;62H[?25h[?25l<[51;80H5-63[39;63H[?25h[?25l<[51;80H6-64[39;64H[?25h[?25l[51;80H7-65[39;65H[?25h[?25li[51;80H8-66[39;66H[?25h[?25l[51;80H9-67[39;67H[?25h[?25l<[51;79H40-68[39;68H[?25h[?25l<[51;80H1-69[39;69H[?25h[?25l[51;80H2-70[39;70H[?25h[?25ls[51;80H3-71[39;71H[?25h[?25lt[51;80H4-72[39;72H[?25h[?25ld[51;80H5-73[39;73H[?25h[?25l:[51;80H6-74[39;74H[?25h[?25l:[51;80H7-75[39;75H[?25h[?25le[51;80H8-76[39;76H[?25h[?25ln[51;80H9-77[39;77H[?25h[?25ld[51;79H50-78[39;78H[?25h[?25ll[51;80H1-79[39;79H[?25h[?25l;[51;80H2-80[39;80H[?25h[?25l[38;42H[46m{[40;25H}[m[51;77H6,5-26 [40;26H[?25h[?25l[41;50r[41;1H[L[1;51r[51;76H[K[51;76H57,4-25[7CBot[38;42H{[40;25H}[41;25H[?25h[?25li[51;79H5-26[41;26H[?25h[?25l[33mif[m[51;79H6-27[41;27H[?25h[?25l([51;79H7-28[41;28H[?25h[?25ld[51;79H8-29[41;29H[?25h[?25le[51;79H9-30[41;30H[?25h[?25ll[51;79H10-31[41;31H[?25h[?25l[41;30H[K[51;79H9-30 [41;30H[?25h[?25l[41;29H[K[51;79H8-29[41;29H[?25h[?25l[41;28H[K[51;79H7-28[41;28H[?25h[?25l[41;27H[K[51;79H6-27[41;27H[?25h[?25li[41;26H[K[51;79H5-26[41;26H[?25h[?25l[41;25H[K[51;79H4-25[41;25H[?25h[?25li[51;79H5-26[41;26H[?25h[?25l[33mif[m[51;79H6-27[41;27H[?25h[?25l([51;79H7-28[41;28H[?25h[?25ld[51;79H8-29[41;29H[?25h[?25le[51;79H9-30[41;30H[?25h[?25ll[51;79H10-31[41;31H[?25h[?25li[51;80H1-32[41;32H[?25h[?25lm[51;80H2-33[41;33H[?25h[?25l[51;80H3-34[41;34H[?25h[?25l=[51;80H4-35[41;35H[?25h[?25l=[51;80H5-36[41;36H[?25h[?25l[51;80H6-37[41;37H[?25h[?25l-[51;80H7-38[41;38H[?25h[?25l[31m1[m[51;80H8-39[41;39H[?25h[?25l*[51;80H9-40[41;40H[?25h[?25ls[51;79H20-41[41;41H[?25h[?25lt[51;80H1-42[41;42H[?25h[?25lk[51;80H2-43[41;43H[?25h[?25l.[51;80H3-44[41;44H[?25h[?25lp[51;80H4-45[41;45H[?25h[?25lo[51;80H5-46[41;46H[?25h[?25lp[51;80H6-47[41;47H[?25h[?25l([51;80H7-48[41;48H[?25h[?25l)[46m()[m[51;80H8-49[41;49H[?25h[?25l)[41;27H[46m([m[19C()[46m)[m[51;80H9-50[41;50H[?25h[?25l{[41;27H([21C)[46m{[42;17H}[m[51;79H30-51[41;51H[?25h[?25l[42;50r[42;1H[L[1;51r[42;17H[46m        [m[43;17H}[51;76H[K[51;76H58,4-25[7CBot[41;50H{[42;17H        [?25h[?25l[43;50r[43;1H[L[1;51r[51;76H[K[51;76H59,4-25[7CBot[43;25H[?25h[?25l}[41;50H[46m{[43;25H}[m[51;79H5-26[43;26H[?25h[?25l[41;50H{[43;25H}[51;77H7,14-35[41;35H[?25h[?25l -[31m1[m*stk.pop()){[41;50H[K[51;80H3-34[41;34H[?25h[?25l!= -[31m1[m*stk.pop()){[51;80H4-35[41;35H[?25h[?25l[51;76H47,60-81[31;81H[?25h[?25l[32;50r[32;1H[L[1;51r[51;76H[K[51;76H48,4-25[7CBot[32;25H[?25h[?25lr[51;79H5-26[32;26H[?25h[?25le[51;79H6-27[32;27H[?25h[?25lt[51;79H7-28[32;28H[?25h[?25li[51;79H8-29[32;29H[?25h[?25l[32;28H[K[51;79H7-28[32;28H[?25h[?25lu[51;79H8-29[32;29H[?25h[?25lr[51;79H9-30[32;30H[?25h[?25l[33mreturn[m[51;79H10-31[32;31H[?25h[?25l[51;80H1-32[32;32H[?25h[?25l[31m1[m[51;80H2-33[32;33H[?25h[?25l;[51;80H3-34[32;34H[?25h[?25l[51;76H56,52-80[40;80H[?25h[?25l[41;50r[41;1H[L[1;51r[51;76H[K[51;76H57,5-33[7CBot[41;33H[?25h[?25lr[51;79H6-34[41;34H[?25h[?25le[51;79H7-35[41;35H[?25h[?25lt[51;79H8-36[41;36H[?25h[?25lu[51;79H9-37[41;37H[?25h[?25lr[51;79H10-38[41;38H[?25h[?25l[33mreturn[m[51;80H1-39[41;39H[?25h[?25l[51;80H2-40[41;40H[?25h[?25l[31m1[m[51;80H3-41[41;41H[?25h[?25l[41;40H[K[51;80H2-40[41;40H[?25h[?25l[31m2[m[51;80H3-41[41;41H[?25h[?25l;[51;80H4-42[41;42H[?25h[?25l[51;76H60,1    [44;1H[?25h[?25l[51;79H2-9[44;9H[?25h[?25l[51;79H3-17[44;17H[?25h[?25l[51;79H4-25[44;25H[?25h[?25l[51;79H5-33[44;33H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H60,5-33[7CBot[41;33H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H60,5-33[7CBot[38;33H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H60,5-33[7CBot[35;33H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H60,5-33[7CBot[32;33H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H60,5-33[7CBot[29;33H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H60,5-33[7CBot[26;33H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H60,5-33[7CBot[23;33H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H60,5-33[7CBot[20;33H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;17H}[2;9H}[3;9H[33mreturn[m ret;[51;76H[K[51;76H60,5-33[7CBot[23;33H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[2;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[3;25Hret = delimEncodings[i][[31m1[m];[51;76H[K[51;76H60,5-33[7CBot[26;33H[?25h[?25ls[51;79H6-34[26;34H[?25h[?25lt[51;79H7-35[26;35H[?25h[?25ld[51;79H8-36[26;36H[?25h[?25l[33mstd[m:[51;79H9-37[26;37H[?25h[?25lstd::[51;79H10-38[26;38H[?25h[?25lc[51;80H1-39[26;39H[?25h[?25le[51;80H2-40[26;40H[?25h[?25lr[51;80H3-41[26;41H[?25h[?25lr[51;80H4-42[26;42H[?25h[?25l[51;80H5-43[26;43H[?25h[?25l<[51;80H6-44[26;44H[?25h[?25l<[51;80H7-45[26;45H[?25h[?25l[51;80H8-46[26;46H[?25h[?25l[31m"
                        }
                }       
        }

}[m[51;80H9-47[26;47H[?25h[?25l[31mu[m[51;79H20-48[26;48H[?25h[?25l[31mn[m[51;80H1-49[26;49H[?25h[?25l[31mb[m[51;80H2-50[26;50H[?25h[?25l[31ml[m[51;80H3-51[26;51H[?25h[?25l[31ma[m[51;80H4-52[26;52H[?25h[?25l[31ml[m[51;80H5-53[26;53H[?25h[?25l[31ma[m[51;80H6-54[26;54H[?25h[?25l[26;53H[K[51;80H5-53[26;53H[?25h[?25l[26;52H[K[51;80H4-52[26;52H[?25h[?25l[26;51H[K[51;80H3-51[26;51H[?25h[?25l[26;50H[K[51;80H2-50[26;50H[?25h[?25l[31ma[m[51;80H3-51[26;51H[?25h[?25l[31ml[m[51;80H4-52[26;52H[?25h[?25l[31ma[m[51;80H5-53[26;53H[?25h[?25l[31mn[m[51;80H6-54[26;54H[?25h[?25l[31mc[m[51;80H7-55[26;55H[?25h[?25l[31me[m[51;80H8-56[26;56H[?25h[?25l[31md[m[51;80H9-57[26;57H[?25h[?25l[31m [m[51;79H30-58[26;58H[?25h[?25l[31m@[m[51;80H1-59[26;59H[?25h[?25l[31m [m[51;80H2-60[26;60H[?25h[?25l[31m"[m
                        }
                }       
        }

}[51;80H3-61[26;61H[?25h[?25l[51;80H4-62[26;62H[?25h[?25l<[51;80H5-63[26;63H[?25h[?25l<[51;80H6-64[26;64H[?25h[?25l[51;80H7-65[26;65H[?25h[?25li[51;80H8-66[26;66H[?25h[?25l[51;80H9-67[26;67H[?25h[?25l<[51;79H40-68[26;68H[?25h[?25l<[51;80H1-69[26;69H[?25h[?25l[51;80H2-70[26;70H[?25h[?25ls[51;80H3-71[26;71H[?25h[?25lt[51;80H4-72[26;72H[?25h[?25ld[51;80H5-73[26;73H[?25h[?25l:[51;80H6-74[26;74H[?25h[?25l:[51;80H7-75[26;75H[?25h[?25le[51;80H8-76[26;76H[?25h[?25ln[51;80H9-77[26;77H[?25h[?25ld[51;79H50-78[26;78H[?25h[?25ll[51;80H1-79[26;79H[?25h[?25l;[51;80H2-80[26;80H[?25h[?25l[27;50r[27;1H[L[1;51r[51;76H[K[51;76H61,5-33[7CBot[27;33H[?25h[?25lr[51;79H6-34[27;34H[?25h[?25le[51;79H7-35[27;35H[?25h[?25lt[51;79H8-36[27;36H[?25h[?25lu[51;79H9-37[27;37H[?25h[?25lr[51;79H10-38[27;38H[?25h[?25l[33mreturn[m[51;80H1-39[27;39H[?25h[?25l[51;80H2-40[27;40H[?25h[?25l[31m3[m[51;80H3-41[27;41H[?25h[?25l;[51;80H4-42[27;42H[?25h[?25l[11;39H[46m{[30;9H}[m[51;77H4,3-10 [30;10H[?25h[?25l[31;50r[31;1H[L[1;51r[51;76H[K[51;76H65,2-9[8CBot[11;39H{[30;9H}[31;9H[?25h[?25lr[51;79H3-10[31;10H[?25h[?25le[51;79H4-11[31;11H[?25h[?25lt[51;79H5-12[31;12H[?25h[?25lu[51;79H6-13[31;13H[?25h[?25lr[51;79H7-14[31;14H[?25h[?25l[33mreturn[m[51;79H8-15[31;15H[?25h[?25l[51;79H9-16[31;16H[?25h[?25l[31m0[m[51;79H10-17[31;17H[?25h[?25l;[51;80H1-18[31;18H[?25h[51;1H[K[31;17H[?25l[51;66H^[[31;17H[51;66H  [31;18H[51;76H65,10-17      Bot[31;17H[?25h[?25l[51;66H:[31;17H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"balanced.cc" 67L, 1228C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab11$ make
g++ -g -Wall -std=c++17   -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:4:10:[m[K [01;31m[Kfatal error: [m[Kcerr: No such file or directory
 #include [01;31m[K<cerr>[m[K
          [01;31m[K^~~~~~[m[K
compilation terminated.
make: *** [<builtin>: balanced.o] Error 1
rgeary1@remote05:~/i240a/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"balanced.cc" 67L, 1228C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H{ [31m'{'[m, [31m4[m},[2;9H{ [31m'}'[m, -[31m4[m}
};
[32mvoid[m checkDelim([32mchar[m a){[5;9H[32mbool[m isIn = [31mfalse[m;[6;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[7;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[8;25HisIn == [31mtrue[m;[9;25H[33mbreak[m;[10;17H}[11;9H}[12;9H[33mif[m(!isIn){[13;17Hstd::cerr<<[31m"invalid delimiter "[m << a << std::endl;[14;9H}
}
[32mint[m getDelimEncoding([32mchar[m a){[17;9H[32mint[m ret = [31m0[m;[18;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[19;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[20;25Hret = delimEncodings[i][[31m1[m];[21;17H}[22;9H}[23;9H[33mreturn[m ret;

}
[32mint[m main([32mint[m argc, [32mchar[m* argv[]){[27;9HStack stk;[28;9H[33mfor[m([32mauto[m i = [31m1[m; i < argc; i++){[29;17H[33mif[m(strlen(argv[i] != [31m1[m){[30;25Hstd::cerr<<[31m"invalid delimiter "[m << argv[i] << std::endl;[31;25H[33mreturn[m [31m1[m;[32;17H}[33;17HcheckDelim(argv[i][[31m0[m]);[34;17H[32mint[m delim = getDelimEncoding(argv[i][[31m0[m]);[35;17H[33mif[m(delim > [31m0[m){[36;25Hstk.push(delim);[37;17H}[33melse[m{[38;25H[33mif[m(stk.size <= [31m0[m){[39;33Hstd::cerr << [31m"unbalanced @ "[m << i << std::endl;[40;33H[33mreturn[m [31m2[m;[41;25H}[42;25H[33mif[m(delim != -[31m1[m*stk.pop()){[43;33Hstd::cerr << [31m"unbalanced @ "[m << i << std::endl;[44;33H[33mreturn[m [31m3[m;[45;25H}[46;17H}[47;9H}[48;9H[33mreturn[m [31m0[m;

}[51;76H65,10-17      Bot[48;17H[?25h[?1000l[?1002h[?25l[1;50r[1;1H[3L[1;51r[1;9H{ [31m']'[m, -[31m2[m},[2;9H{ [31m'<'[m, [31m3[m},[3;9H{ [31m'>'[m, -[31m3[m},[51;1H[K[51;76H59,3-24[7C82%[45;24H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9H{ [31m'('[m, [31m1[m},[2;9H{ [31m')'[m, -[31m1[m},[3;9H{ [31m'['[m, [31m2[m},[51;76H[K[51;76H56,3-24[7C64%[45;24H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H};

DelimMap delimEncodings[] = {[51;76H[K[51;76H53,3-24[7C47%[45;24H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[32mstruct[m DelimMap{[2;9H[32mint[m delim;[3;9H[32mint[m encoding;[51;76H[K[51;76H50,3-17[7C29%[45;17H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<cerr>[m[51;76H[K[51;76H47,3-24[7C11%[45;24H[?25h[?25l[1;50r[1;1H[2L[1;51r[1;1H[35m#include [m[31m"stack.hh"[m[51;76H[K[51;76H45,10-17      Top[45;17H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[51;77H,15    [4;15H[?25h[?25l[51;66Hi[4;15H[51;66H [4;15H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H4,15[10CTop[4;15H[?25h[?25l[51;79H6[4;16H[?25h[?25l[35m<[mcerr[4;15H[K[51;79H5[4;15H[?25h[?25l[4;14H[K[51;79H4[4;14H[?25h[?25l[4;13H[K[51;79H3[4;13H[?25h[?25l[4;12H[K[51;79H2[4;12H[?25h[?25l[4;11H[K[51;79H1[4;11H[?25h[?25l#include [4;10H[K[51;79H0[4;10H[?25h[?25l[51;78H9 [4;9H[?25h[?25l[4;8H[K[51;78H8[4;8H[?25h[?25l[4;7H[K[51;78H7[4;7H[?25h[?25l[4;6H[K[51;78H6[4;6H[?25h[?25l[4;5H[K[51;78H5[4;5H[?25h[?25l[4;4H[K[51;78H4[4;4H[?25h[?25l[4;3H[K[51;78H3[4;3H[?25h[?25l[4;2H[K[51;78H2[4;2H[?25h[?25l[4;1H[K[51;78H1[4;1H[?25h[51;1H[K[4;1H[?25l[51;66H^[[4;1H[51;66H  [4;1H[51;76H4,0-1[9CTop[4;1H[?25h[?25l[51;66H:[4;1H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"balanced.cc" 67L, 1213C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab11$ make
g++ -g -Wall -std=c++17   -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kvoid checkDelim(char)[m[Kâ€™:
[01m[Kbalanced.cc:23:20:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  for(auto i = 0; [01;35m[Ki < sizeof(delimEncodings)/sizeof(delimEncodings[0])[m[K; i++){
                  [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kbalanced.cc:24:28:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
   if(a == delimEncodings[i][01;31m[K[[m[K0]){
                            [01;31m[K^[m[K
[01m[Kbalanced.cc:25:16:[m[K [01;35m[Kwarning: [m[Kstatement has no effect [[01;35m[K-Wunused-value[m[K]
           [01;35m[KisIn == true[m[K;
           [01;35m[K~~~~~^~~~~~~[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint getDelimEncoding(char)[m[Kâ€™:
[01m[Kbalanced.cc:35:20:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  for(auto i = 0; [01;35m[Ki < sizeof(delimEncodings)/sizeof(delimEncodings[0])[m[K; i++){
                  [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kbalanced.cc:36:28:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
   if(a == delimEncodings[i][01;31m[K[[m[K0]){
                            [01;31m[K^[m[K
[01m[Kbalanced.cc:37:27:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
    ret = delimEncodings[i][01;31m[K[[m[K1];
                           [01;31m[K^[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:46:24:[m[K [01;31m[Kerror: [m[KISO C++ forbids comparison between pointer and integer [[01;31m[K-fpermissive[m[K]
   if(strlen(argv[i] != [01;31m[K1[m[K){
                        [01;31m[K^[m[K
[01m[Kbalanced.cc:46:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstrlen[m[Kâ€™ was not declared in this scope
   if([01;31m[Kstrlen[m[K(argv[i] != 1){
      [01;31m[K^~~~~~[m[K
[01m[Kbalanced.cc:46:6:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kstrlen[m[Kâ€™ is defined in header â€˜[01m[K<cstring>[m[Kâ€™; did you forget to â€˜[01m[K#include <cstring>[m[Kâ€™?
[01m[Kbalanced.cc:4:1:[m[K
+[32m[K#include <cstring>[m[K
 
[01m[Kbalanced.cc:46:6:[m[K
   if([01;36m[Kstrlen[m[K(argv[i] != 1){
      [01;36m[K^~~~~~[m[K
[01m[Kbalanced.cc:50:25:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
   checkDelim(argv[i][0])[01;31m[K;[m[K
                         [01;31m[K^[m[K
                         [32m[K)[m[K
[01m[Kbalanced.cc:46:5:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K([m[Kâ€™
   if[01;36m[K([m[Kstrlen(argv[i] != 1){
     [01;36m[K^[m[K
[01m[Kbalanced.cc:50:13:[m[K [01;31m[Kerror: [m[Kcould not convert â€˜[01m[KcheckDelim(((int)(*(*(argv + ((sizetype)(((long unsigned int)i) * 8)))))))[m[Kâ€™ from â€˜[01m[Kvoid[m[Kâ€™ to â€˜[01m[Kbool[m[Kâ€™
   [01;31m[KcheckDelim(argv[i][0])[m[K;
   [01;31m[K~~~~~~~~~~^~~~~~~~~~~~[m[K
[01m[Kbalanced.cc:55:11:[m[K [01;31m[Kerror: [m[Kinvalid use of member function â€˜[01m[Kint Stack::size()[m[Kâ€™ (did you forget the â€˜[01m[K()[m[Kâ€™ ?)
    if([01;31m[Kstk.size[m[K <= 0){
       [01;31m[K~~~~^~~~[m[K
make: *** [<builtin>: balanced.o] Error 1
rgeary1@remote05:~/i240a/submit/lab11$ makevim balanced.ccmake[Kvim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"balanced.cc" 67L, 1213C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"stack.hh"[m

[35m#include [m[31m<iostream>[m


[32mstruct[m DelimMap{[7;9H[32mint[m delim;[8;9H[32mint[m encoding;
};

DelimMap delimEncodings[] = {[12;9H{ [31m'('[m, [31m1[m},[13;9H{ [31m')'[m, -[31m1[m},[14;9H{ [31m'['[m, [31m2[m},[15;9H{ [31m']'[m, -[31m2[m},[16;9H{ [31m'<'[m, [31m3[m},[17;9H{ [31m'>'[m, -[31m3[m},[18;9H{ [31m'{'[m, [31m4[m},[19;9H{ [31m'}'[m, -[31m4[m}
};
[32mvoid[m checkDelim([32mchar[m a){[22;9H[32mbool[m isIn = [31mfalse[m;[23;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[24;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[25;25HisIn == [31mtrue[m;[26;25H[33mbreak[m;[27;17H}[28;9H}[29;9H[33mif[m(!isIn){[30;17Hstd::cerr<<[31m"invalid delimiter "[m << a << std::endl;[31;9H}
}
[32mint[m getDelimEncoding([32mchar[m a){[34;9H[32mint[m ret = [31m0[m;[35;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[36;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[37;25Hret = delimEncodings[i][[31m1[m];[38;17H}[39;9H}[40;9H[33mreturn[m ret;

}
[32mint[m main([32mint[m argc, [32mchar[m* argv[]){[44;9HStack stk;[45;9H[33mfor[m([32mauto[m i = [31m1[m; i < argc; i++){[46;17H[33mif[m(strlen(argv[i] != [31m1[m){[47;25Hstd::cerr<<[31m"invalid delimiter "[m << argv[i] << std::endl;[48;25H[33mreturn[m [31m1[m;[49;17H}[50;17HcheckDelim(argv[i][[31m0[m]);[51;76H4,0-1[9CTop[4;1H[?25h[?1000l[?1002h[?25l[51;66H#[4;1H[51;1H[1m[37m[41mE348: No string under cursor[m[51;66H[K[4;1H[51;76H4,0-1[9CTop[4;1H[?25h[?25l[51;66Hi[4;1H[51;66H [4;1H[51;1H[1m--[m[1m[37m[41m4[m[1m INSERT --[m[1m[37m[41mi[m[51;13H[K[51;76H4,1[11CTop[4;1H[?25h[?25ln[51;78H2[4;2H[?25h[?25lc[51;78H3[4;3H[?25h[?25ll[51;78H4[4;4H[?25h[?25lu[51;78H5[4;5H[?25h[?25ld[51;78H6[4;6H[?25h[?25le[51;78H7[4;7H[?25h[?25l[51;78H8[4;8H[?25h[?25l[51;78H7[4;7H[?25h[?25l[4;6H[K[51;78H6[4;6H[?25h[?25l[4;5H[K[51;78H5[4;5H[?25h[?25l[4;4H[K[51;78H4[4;4H[?25h[?25l[4;3H[K[51;78H3[4;3H[?25h[?25l[4;2H[K[51;78H2[4;2H[?25h[?25l[4;1H[K[51;78H1[4;1H[?25h[?25l#[51;78H2[4;2H[?25h[?25li[51;78H3[4;3H[?25h[?25ln[51;78H4[4;4H[?25h[?25lc[51;78H5[4;5H[?25h[?25ll[51;78H6[4;6H[?25h[?25lu[51;78H7[4;7H[?25h[?25ld[51;78H8[4;8H[?25h[?25le[51;78H9[4;9H[?25h[?25l[51;78H10[4;10H[?25h[?25l[35m#include <[m[51;79H1[4;11H[?25h[?25lc[51;79H2[4;12H[?25h[?25ls[51;79H3[4;13H[?25h[?25lt[51;79H4[4;14H[?25h[?25lr[51;79H5[4;15H[?25h[?25li[51;79H6[4;16H[?25h[?25ln[51;79H7[4;17H[?25h[?25lg[51;79H8[4;18H[?25h[?25l[4;10H[31m<cstring>[m[51;79H9[4;19H[?25h[51;1H[K[4;18H[?25l[51;66H^[[4;18H[51;66H  [4;19H[51;76H4,18[10CTop[4;18H[?25h[?25l[51;66H:[4;18H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"balanced.cc" 67L, 1231C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab11$ vim balanced.ccmake[K
g++ -g -Wall -std=c++17   -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kvoid checkDelim(char)[m[Kâ€™:
[01m[Kbalanced.cc:23:20:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  for(auto i = 0; [01;35m[Ki < sizeof(delimEncodings)/sizeof(delimEncodings[0])[m[K; i++){
                  [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kbalanced.cc:24:28:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
   if(a == delimEncodings[i][01;31m[K[[m[K0]){
                            [01;31m[K^[m[K
[01m[Kbalanced.cc:25:16:[m[K [01;35m[Kwarning: [m[Kstatement has no effect [[01;35m[K-Wunused-value[m[K]
           [01;35m[KisIn == true[m[K;
           [01;35m[K~~~~~^~~~~~~[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint getDelimEncoding(char)[m[Kâ€™:
[01m[Kbalanced.cc:35:20:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  for(auto i = 0; [01;35m[Ki < sizeof(delimEncodings)/sizeof(delimEncodings[0])[m[K; i++){
                  [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kbalanced.cc:36:28:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
   if(a == delimEncodings[i][01;31m[K[[m[K0]){
                            [01;31m[K^[m[K
[01m[Kbalanced.cc:37:27:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
    ret = delimEncodings[i][01;31m[K[[m[K1];
                           [01;31m[K^[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:46:24:[m[K [01;31m[Kerror: [m[KISO C++ forbids comparison between pointer and integer [[01;31m[K-fpermissive[m[K]
   if(strlen(argv[i] != [01;31m[K1[m[K){
                        [01;31m[K^[m[K
[01m[Kbalanced.cc:46:21:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kbool[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
   if(strlen([01;31m[Kargv[i] != 1[m[K){
             [01;31m[K~~~~~~~~^~~~[m[K
In file included from [01m[K/usr/include/c++/8/cstring:42[m[K,
                 from [01m[Kbalanced.cc:4[m[K:
[01m[K/usr/include/string.h:384:35:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Ksize_t strlen(const char*)[m[Kâ€™
 extern size_t strlen ([01;36m[Kconst char *__s[m[K)
                       [01;36m[K~~~~~~~~~~~~^~~[m[K
[01m[Kbalanced.cc:50:25:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
   checkDelim(argv[i][0])[01;31m[K;[m[K
                         [01;31m[K^[m[K
                         [32m[K)[m[K
[01m[Kbalanced.cc:46:5:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K([m[Kâ€™
   if[01;36m[K([m[Kstrlen(argv[i] != 1){
     [01;36m[K^[m[K
[01m[Kbalanced.cc:50:13:[m[K [01;31m[Kerror: [m[Kcould not convert â€˜[01m[KcheckDelim(((int)(*(*(argv + ((sizetype)(((long unsigned int)i) * 8)))))))[m[Kâ€™ from â€˜[01m[Kvoid[m[Kâ€™ to â€˜[01m[Kbool[m[Kâ€™
   [01;31m[KcheckDelim(argv[i][0])[m[K;
   [01;31m[K~~~~~~~~~~^~~~~~~~~~~~[m[K
[01m[Kbalanced.cc:55:11:[m[K [01;31m[Kerror: [m[Kinvalid use of member function â€˜[01m[Kint Stack::size()[m[Kâ€™ (did you forget the â€˜[01m[K()[m[Kâ€™ ?)
    if([01;31m[Kstk.size[m[K <= 0){
       [01;31m[K~~~~^~~~[m[K
make: *** [<builtin>: balanced.o] Error 1
rgeary1@remote05:~/i240a/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"balanced.cc" 67L, 1231C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"stack.hh"[m

[35m#include [m[31m<iostream>[m
[35m#include [m[31m<cstring>[m

[32mstruct[m DelimMap{[7;9H[32mint[m delim;[8;9H[32mint[m encoding;
};

DelimMap delimEncodings[] = {[12;9H{ [31m'('[m, [31m1[m},[13;9H{ [31m')'[m, -[31m1[m},[14;9H{ [31m'['[m, [31m2[m},[15;9H{ [31m']'[m, -[31m2[m},[16;9H{ [31m'<'[m, [31m3[m},[17;9H{ [31m'>'[m, -[31m3[m},[18;9H{ [31m'{'[m, [31m4[m},[19;9H{ [31m'}'[m, -[31m4[m}
};
[32mvoid[m checkDelim([32mchar[m a){[22;9H[32mbool[m isIn = [31mfalse[m;[23;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[24;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[25;25HisIn == [31mtrue[m;[26;25H[33mbreak[m;[27;17H}[28;9H}[29;9H[33mif[m(!isIn){[30;17Hstd::cerr<<[31m"invalid delimiter "[m << a << std::endl;[31;9H}
}
[32mint[m getDelimEncoding([32mchar[m a){[34;9H[32mint[m ret = [31m0[m;[35;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[36;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[37;25Hret = delimEncodings[i][[31m1[m];[38;17H}[39;9H}[40;9H[33mreturn[m ret;

}
[32mint[m main([32mint[m argc, [32mchar[m* argv[]){[44;9HStack stk;[45;9H[33mfor[m([32mauto[m i = [31m1[m; i < argc; i++){[46;17H[33mif[m(strlen(argv[i] != [31m1[m){[47;25Hstd::cerr<<[31m"invalid delimiter "[m << argv[i] << std::endl;[48;25H[33mreturn[m [31m1[m;[49;17H}[50;17HcheckDelim(argv[i][[31m0[m]);[51;76H4,18[10CTop[4;18H[?25h[?1000l[?1002h[?25l[1;50r[1;1H[3M[1;51r[48;17H[32mint[m delim = getDelimEncoding(argv[i][[31m0[m]);[49;17H[33mif[m(delim > [31m0[m){[50;25Hstk.push(delim);[51;1H[K[51;76H9,2[11C17%[6;2H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;17H}[33melse[m{[49;25H[33mif[m(stk.size <= [31m0[m){[50;33Hstd::cerr << [31m"unbalanced @ "[m << i << std::endl;[51;76H[K[51;76H12,11-18      35%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[6;9H[46m{[8C}[m[48;33H[33mreturn[m [31m2[m;[49;25H}[50;25H[33mif[m(delim != -[31m1[m*stk.pop()){[51;76H[K[51;76H15,11-18      52%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;9H{[8C}[48;33Hstd::cerr << [31m"unbalanced @ "[m << i << std::endl;[49;33H[33mreturn[m [31m3[m;[50;25H}[51;76H[K[51;76H18,11-18      70%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;17H}[49;9H}[50;9H[33mreturn[m [31m0[m;[51;76H[K[51;76H21,18[9C88%[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H}
[1m[34m~                                                                                            [m[51;76H[K[51;76H24,4-18[7CBot[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;46H[46m{[6;17H}[m[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H27,3-17[7CBot[6;17H[?25h[?25l[1;50r[1;1H[3M[1;51r[3;17H}[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H30,4-18[7CBot[6;18H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H33,18[9CBot[6;18H[?25h[?25l[19;31H[46m[[mi[46m][m[51;76H46,19-33[19;33H[?25h[?25l[51;66H~@k[19;33H[51;66H   [19;34H[i][51;79H20-34[19;34H[?25h[?25l[51;66H)[19;34H[51;66H [39;1H[51;76H66,0-1  [39;1H[?25h[?25l[19;31H[46m[[mi[46m][m[51;76H46,19-33[19;33H[?25h[?25l[51;66Hi[19;33H[51;66H [19;33H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H46,19-33      Bot[19;33H[?25h[?25l[51;79H20-34[19;34H[?25h[?25l[51;79H19-33[19;33H[?25h[?25l[51;79H20-34[19;34H[?25h[?25l) != [31m1[m){[19;26H[46m([margv[i][46m)[m[51;80H1-35[19;35H[?25h[51;1H[K[19;34H[?25l[51;66H^[[19;34H[51;66H  [19;35H[51;76H46,20-34      Bot[19;34H[?25h[?25l[51;66H:[19;34H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"balanced.cc" 67L, 1232C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab11$ male
bash: male: command not found
rgeary1@remote05:~/i240a/submit/lab11$ make
g++ -g -Wall -std=c++17   -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kvoid checkDelim(char)[m[Kâ€™:
[01m[Kbalanced.cc:23:20:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  for(auto i = 0; [01;35m[Ki < sizeof(delimEncodings)/sizeof(delimEncodings[0])[m[K; i++){
                  [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kbalanced.cc:24:28:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
   if(a == delimEncodings[i][01;31m[K[[m[K0]){
                            [01;31m[K^[m[K
[01m[Kbalanced.cc:25:16:[m[K [01;35m[Kwarning: [m[Kstatement has no effect [[01;35m[K-Wunused-value[m[K]
           [01;35m[KisIn == true[m[K;
           [01;35m[K~~~~~^~~~~~~[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint getDelimEncoding(char)[m[Kâ€™:
[01m[Kbalanced.cc:35:20:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  for(auto i = 0; [01;35m[Ki < sizeof(delimEncodings)/sizeof(delimEncodings[0])[m[K; i++){
                  [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kbalanced.cc:36:28:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
   if(a == delimEncodings[i][01;31m[K[[m[K0]){
                            [01;31m[K^[m[K
[01m[Kbalanced.cc:37:27:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
    ret = delimEncodings[i][01;31m[K[[m[K1];
                           [01;31m[K^[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[Kbalanced.cc:55:11:[m[K [01;31m[Kerror: [m[Kinvalid use of member function â€˜[01m[Kint Stack::size()[m[Kâ€™ (did you forget the â€˜[01m[K()[m[Kâ€™ ?)
    if([01;31m[Kstk.size[m[K <= 0){
       [01;31m[K~~~~^~~~[m[K
make: *** [<builtin>: balanced.o] Error 1
rgeary1@remote05:~/i240a/submit/lab11$ makelevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"balanced.cc" 67L, 1232C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<cstring>[m

[32mstruct[m DelimMap{[6;9H[32mint[m delim;[7;9H[32mint[m encoding;
};

DelimMap delimEncodings[] = {[11;9H{ [31m'('[m, [31m1[m},[12;9H{ [31m')'[m, -[31m1[m},[13;9H{ [31m'['[m, [31m2[m},[14;9H{ [31m']'[m, -[31m2[m},[15;9H{ [31m'<'[m, [31m3[m},[16;9H{ [31m'>'[m, -[31m3[m},[17;9H{ [31m'{'[m, [31m4[m},[18;9H{ [31m'}'[m, -[31m4[m}
};
[32mvoid[m checkDelim([32mchar[m a){[21;9H[32mbool[m isIn = [31mfalse[m;[22;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[23;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[24;25HisIn == [31mtrue[m;[25;25H[33mbreak[m;[26;17H}[27;9H}[28;9H[33mif[m(!isIn){[29;17Hstd::cerr<<[31m"invalid delimiter "[m << a << std::endl;[30;9H}
}
[32mint[m getDelimEncoding([32mchar[m a){[33;9H[32mint[m ret = [31m0[m;[34;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[35;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[36;25Hret = delimEncodings[i][[31m1[m];[37;17H}[38;9H}[39;9H[33mreturn[m ret;

}
[32mint[m main([32mint[m argc, [32mchar[m* argv[]){[43;9HStack stk;[44;9H[33mfor[m([32mauto[m i = [31m1[m; i < argc; i++){[45;17H[33mif[m(strlen[46m([margv[i][46m)[m != [31m1[m){[46;25Hstd::cerr<<[31m"invalid delimiter "[m << argv[i] << std::endl;[47;25H[33mreturn[m [31m1[m;[48;17H}[49;17HcheckDelim(argv[i][[31m0[m]);[50;17H[32mint[m delim = getDelimEncoding(argv[i][[31m0[m]);[51;76H46,20-34[7C5%[45;34H[?25h[?1000l[?1002h[?25l[1;50r[1;1H[3M[1;51r[48;17H[33mif[m(delim > [31m0[m){[49;25Hstk.push(delim);[50;17H}[33melse[m{[51;1H[K[51;76H46,20-34      23%[42;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;25H[33mif[m(stk.size <= [31m0[m){[49;33Hstd::cerr << [31m"unbalanced @ "[m << i << std::endl;[50;33H[33mreturn[m [31m2[m;[51;76H[K[51;76H46,20-34      41%[39;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;25H}[49;25H[33mif[m(delim != -[31m1[m*stk.pop()){[50;33Hstd::cerr << [31m"unbalanced @ "[m << i << std::endl;[51;76H[K[51;76H46,20-34      58%[36;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;33H[33mreturn[m [31m3[m;[49;25H}[50;17H}[51;76H[K[51;76H46,20-34      76%[33;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;9H}[49;9H[33mreturn[m [31m0[m;[51;76H[K[51;76H46,20-34      94%[30;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H}
[1m[34m~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H46,20-34      Bot[27;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H46,20-34      Bot[24;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H46,20-34      Bot[21;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H46,20-34      Bot[18;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H46,20-34      Bot[15;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H46,20-34      Bot[12;34H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H46,20-34      Bot[9;34H[?25h[?25l[9;26H([7C)[51;76H55,14-35[18;35H[?25h[?25l[51;66Hi[18;35H[51;66H [18;35H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H55,14-35      Bot[18;35H[?25h[?25l[51;80H5-36[18;36H[?25h[?25l( <= [31m0[m){[18;36H[46m([5C)[m[51;80H6-37[18;37H[?25h[?25l) <= [31m[46m0[m){[18;37H[46m)[m <= [31m0[m[51;80H7-38[18;38H[?25h[51;1H[K[18;37H[?25l[51;66H^[[18;37H[51;66H  [18;38H[51;76H55,16-37      Bot[18;37H[?25h[?25l[51;66H:[18;37H[51;66H[K[51;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"balanced.cc" 67L, 1234C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0trgeary1@remote05:~/i240a/submit/lab11$ male[K[Kke
g++ -g -Wall -std=c++17   -c -o balanced.o balanced.cc
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kvoid checkDelim(char)[m[Kâ€™:
[01m[Kbalanced.cc:23:20:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  for(auto i = 0; [01;35m[Ki < sizeof(delimEncodings)/sizeof(delimEncodings[0])[m[K; i++){
                  [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kbalanced.cc:24:28:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
   if(a == delimEncodings[i][01;31m[K[[m[K0]){
                            [01;31m[K^[m[K
[01m[Kbalanced.cc:25:16:[m[K [01;35m[Kwarning: [m[Kstatement has no effect [[01;35m[K-Wunused-value[m[K]
           [01;35m[KisIn == true[m[K;
           [01;35m[K~~~~~^~~~~~~[m[K
[01m[Kbalanced.cc:[m[K In function â€˜[01m[Kint getDelimEncoding(char)[m[Kâ€™:
[01m[Kbalanced.cc:35:20:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  for(auto i = 0; [01;35m[Ki < sizeof(delimEncodings)/sizeof(delimEncodings[0])[m[K; i++){
                  [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[Kbalanced.cc:36:28:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
   if(a == delimEncodings[i][01;31m[K[[m[K0]){
                            [01;31m[K^[m[K
[01m[Kbalanced.cc:37:27:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[KDelimMap[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™)
    ret = delimEncodings[i][01;31m[K[[m[K1];
                           [01;31m[K^[m[K
make: *** [<builtin>: balanced.o] Error 1
rgeary1@remote05:~/i240a/submit/lab11$ makevim balanced.cc
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;51r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[51;1H"balanced.cc" 67L, 1234C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1HDelimMap delimEncodings[] = {[2;9H{ [31m'('[m, [31m1[m},[3;9H{ [31m')'[m, -[31m1[m},[4;9H{ [31m'['[m, [31m2[m},[5;9H{ [31m']'[m, -[31m2[m},[6;9H{ [31m'<'[m, [31m3[m},[7;9H{ [31m'>'[m, -[31m3[m},[8;9H{ [31m'{'[m, [31m4[m},[9;9H{ [31m'}'[m, -[31m4[m}
};
[32mvoid[m checkDelim([32mchar[m a){[12;9H[32mbool[m isIn = [31mfalse[m;[13;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[14;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[15;25HisIn == [31mtrue[m;[16;25H[33mbreak[m;[17;17H}[18;9H}[19;9H[33mif[m(!isIn){[20;17Hstd::cerr<<[31m"invalid delimiter "[m << a << std::endl;[21;9H}
}
[32mint[m getDelimEncoding([32mchar[m a){[24;9H[32mint[m ret = [31m0[m;[25;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[26;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[27;25Hret = delimEncodings[i][[31m1[m];[28;17H}[29;9H}[30;9H[33mreturn[m ret;

}
[32mint[m main([32mint[m argc, [32mchar[m* argv[]){[34;9HStack stk;[35;9H[33mfor[m([32mauto[m i = [31m1[m; i < argc; i++){[36;17H[33mif[m(strlen(argv[i]) != [31m1[m){[37;25Hstd::cerr<<[31m"invalid delimiter "[m << argv[i] << std::endl;[38;25H[33mreturn[m [31m1[m;[39;17H}[40;17HcheckDelim(argv[i][[31m0[m]);[41;17H[32mint[m delim = getDelimEncoding(argv[i][[31m0[m]);[42;17H[33mif[m(delim > [31m0[m){[43;25Hstk.push(delim);[44;17H}[33melse[m{[45;25H[33mif[m(stk.size[46m()[m <= [31m0[m){[46;33Hstd::cerr << [31m"unbalanced @ "[m << i << std::endl;[47;33H[33mreturn[m [31m2[m;[48;25H}[49;25H[33mif[m(delim != -[31m1[m*stk.pop()){[50;33Hstd::cerr << [31m"unbalanced @ "[m << i << std::endl;[51;76H55,16-37      58%[45;37H[?25h[?1000l[?1002h[?25l[1;50r[1;1H[3L[1;51r[1;9H[32mint[m encoding;
};[45;30H[46m{[47;17H}[m[48;36H()[51;1H[K[51;76H52,16-30      41%[45;30H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[32mstruct[m DelimMap{[3;9H[32mint[m delim;[42;41H[46m{[45;17H}[m[48;30H{[50;17H}[51;76H[K[51;76H49,3-17[7C23%[45;17H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<cstring>[m[45;41H{[48;17H}[51;76H[K[51;76H46,23-37[7C5%[45;37H[?25h[?25l[1;50r[1;1H[L[1;51r[1;1H[35m#include [m[31m"stack.hh"[m[51;76H[K[51;76H45,30-37      Top[45;37H[?25h[?25l[?25h[?25l[1;50r[1;1H[3M[1;51r[48;17H[32mint[m delim = getDelimEncoding(argv[i][[31m0[m]);[49;17H[33mif[m(delim > [31m0[m){[50;25Hstk.push(delim);[51;76H[K[51;76H45,30-37      17%[42;37H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;17H}[33melse[m{[49;25H[33mif[m(stk.size() <= [31m0[m){[50;33Hstd::cerr << [31m"unbalanced @ "[m << i << std::endl;[51;76H[K[51;76H45,30-37      35%[39;37H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;33H[33mreturn[m [31m2[m;[49;25H}[50;25H[33mif[m(delim != -[31m1[m*stk.pop()){[51;76H[K[51;76H45,30-37      52%[36;37H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;33Hstd::cerr << [31m"unbalanced @ "[m << i << std::endl;[49;33H[33mreturn[m [31m3[m;[50;25H}[51;76H[K[51;76H45,30-37      70%[33;37H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;17H}[49;9H}[50;9H[33mreturn[m [31m0[m;[51;76H[K[51;76H45,30-37      88%[30;37H[?25h[?25l[1;50r[1;1H[3M[1;51r[49;1H}
[1m[34m~                                                                                            [m[51;76H[K[51;76H45,30-37      Bot[27;37H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H45,30-37      Bot[24;37H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H45,30-37      Bot[21;37H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H45,30-37      Bot[18;37H[?25h[?25l[1;50r[1;1H[3M[1;51r[48;1H[1m[34m~                                                                                            [49;1H~                                                                                            [50;1H~                                                                                            [m[51;76H[K[51;76H45,30-37      Bot[15;37H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9H}[2;9H[33mif[m(!isIn){[3;17Hstd::cerr<<[31m"invalid delimiter "[m << a << std::endl;[51;76H[K[51;76H45,30-37      Bot[18;37H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;25HisIn == [31mtrue[m;[2;25H[33mbreak[m;[3;17H}[51;76H[K[51;76H45,30-37      Bot[21;37H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9H[32mbool[m isIn = [31mfalse[m;[2;9H[33mfor[m([32mauto[m i = [31m0[m; i < [33msizeof[m(delimEncodings)/[33msizeof[m(delimEncodings[[31m0[m]); i++){[3;17H[33mif[m(a == delimEncodings[i][[31m0[m]){[51;76H[K[51;76H45,30-37      Bot[24;37H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9H{ [31m'}'[m, -[31m4[m}
};
[32mvoid[m checkDelim([32mchar[m a){[51;76H[K[51;76H45,30-37      Bot[27;37H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9H{ [31m'<'[m, [31m3[m},[2;9H{ [31m'>'[m, -[31m3[m},[3;9H{ [31m'{'[m, [31m4[m},[51;76H[K[51;76H45,30-37      88%[30;37H[?25h[?25l[51;66H9[22;51H;[7m 
                } 
        } 
        [m[7m[33mreturn[m[7m ret; 
 
} [m
[7m[32mint[m[7m main([m[7m[32mint[m[7m argc, [m[7m[32mchar[m[7m* argv[]){ 
        Stack stk; 
        [m[7m[33mfor[m[7m([m[7m[32mauto[m[7m i = [m[7m[31m1[m[7m; i < argc; i++[m[51;1H[1m-- VISUAL --[m[51;66H[K[51;66H9[22;51H[51;76H37,30-51      88%[22;51H[?25h[?25l[?25h[?25l[51;66H [21;44H[46m[[1C][m[22;52H[K[23;1H                }[23;18H[K[24;1H        }[24;10H[K[25;1H        [33mreturn[m ret;[25;20H[K[26;1H[K[27;1H}[27;2H[K[28;1H[32mint[m main([32mint[m argc, [32mchar[m* argv[]){[28;34H[K[29;1H        Stack stk;[29;19H[K[30;1H        [33mfor[m([32mauto[m i = [31m1[m; i < argc; i++[51;1H[K[51;76H36,30-44      88%[21;44H[?25h[?25l[21;19H[46m([m[22C[[1C][46m)[m[51;80H1-45[21;45H[?25h[?25l[51;66H~@k[21;45H[51;66H   [21;44H[21;19H([22C[46m[[1C][m)[51;80H0-44[21;44H[?25h[?25l[51;66H~@k[21;44H[51;66H   [21;43H[[1C][51;79H29-43[21;43H[?25h[?25l[51;66H~@k[21;43H[51;66H   [21;42H[46m[[1C][m[51;80H8-42[21;42H[?25h[?25l[51;66H~@k[21;42H[51;66H   [21;43H[[1C][51;80H9-43[21;43H[?25h[?25l[51;66H~@k[21;43H[51;66H   [21;44H[46m[[1C][m[51;79H30-44[21;44H[?25h[?25l[51;66H~@k[21;44H[51;66H   [21;45H[21;19H[46m([m[22C[[1C][46m)[m[51;80H1-45[21;45H[?25h[?25l[51;66Hi[21;45H[51;66H [21;45H[51;1H[1m-- INSERT --[m[51;76H[K[51;76H36,31-45      88%[21;45H[?25h[?25l[1m[37m[41m)[m[1m[37m[46m{[m[21;46H[K[22;51H[1m[37m[41m;[23;17H}[24;9H}[25;19H;

}[28;33H{[29;18H;[30;39H{[31;41H{[32;80H;[33;33H;[34;17H}[35;39H;[36;57H;[37;30H{[38;40H;[39;17H}[4C{[40;44H{[41;79H;[42;41H;[43;25H}[44;50H{[45;79H;[46;41H;[47;25H}[48;17H}[49;9H}[50;17H;[m[21;44H[1m[37m[46m)[m[1m[37m[41m{[m[51;80H0-44[21;44H[?25h[?25l[1m[37m[41m)[m[1m[37m[46m{[m[21;45H[K[21;43H[1m[37m[46m)[m[1m[37m[41m{[m[51;79H29-43[21;43H[?25h[?25l)[46m{[m[21;44H[K[22;51H;[23;17H}[24;9H}[25;19H;

}[28;33H{[29;18H;[30;39H{[31;41H{[32;80H;[33;33H;[34;17H}[35;39H;[36;57H;[37;30H{[38;40H;[39;17H}[33me[m[3C{[40;44H{[41;79H;[42;41H;[43;25H}[44;50H{[45;79H;[46;41H;[47;25H}[48;17H} [49;9H}[50;17H;[21;42H[46m)[m{[51;80H8-42[21;42H[?25h[?25l[46m.[m){.[46m)[m[51;80H9-43[21;43H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9H{ [31m')'[m, -[31m1[m},[2;9H{ [31m'['[m, [31m2[m},[3;9H{ [31m']'[m, -[31m2[m},[51;76H[K[51;76H36,29-43      70%[24;43H[?25h[?25l[1;50r[1;1H[3L[1;51r[2;1HDelimMap delimEncodings[] = {[3;9H{ [31m'('[m, [31m1[m},[51;76H[K[51;76H36,29-43      52%[27;43H[?25h[?25l[1;50r[1;1H[3L[1;51r[1;9H[32mint[m delim;[2;9H[32mint[m encoding;
};[51;76H[K[51;76H36,29-43      35%[30;43H[?25h[?25l[46md[m){d[46m)[m[51;79H30-44[30;44H[?25h[?25l[46me[m){e[46m)[m[51;80H1-45[30;45H[?25h[?25l[46ml[m){l[46m)[m[51;80H2-46[30;46H[?25h[?25l[46mi[m){i[46m)[m[51;80H3-47[30;47H[?25h[?25l[46mm[m){m[46m)[m[51;80H4-48[30;48H[?25h[?25l[30;19H([28C)[31;48H[46m[[1C][m[51;77H7,30-51[31;51H[?25h[?25l[1m[37m[46m;[m[31;51H[K[32;17H[1m[37m[41m}[33;9H}[34;19H;

}[37;33H{[38;18H;[39;39H{[40;41H{[41;80H;[42;33H;[43;17H}[44;39H;[45;57H;[46;30H{[47;40H;[48;17H}[4C{[49;44H{[50;79H;[m[31;48H[[1C[1m[37m[41m;[m[51;79H29-50[31;50H[?25h[?25l[1m[37m[41m;[m[31;50H[K[51;80H8-49[31;49H[?25h[?25l;[31;49H[K[32;17H}[33;9H}[34;19H;

}[37;33H{[38;18H;[39;39H{[40;41H{[41;80H;[42;33H;[43;17H}[44;39H;[45;57H;[46;30H{[47;40H;[48;17H}[33me[m[3C{[49;44H{[50;79H;[31;45H[46m[[mi[46m][m[51;80H7-48[31;48H[?25h[?25l.;[i][51;80H8-49[31;49H[?25h[?25le;[51;80H9-50[31;50H[?25h[?25ln;[51;79H30-51[31;51H[?25h[?25lc;[51;80H1-52[31;52H[?25h[?25lo;[51;80H2-53[31;53H[?25h[?25ld;[51;80H3-54[31;54H[?25h[?25li;[51;80H4-55[31;55H[?25h[?25ln;[51;80H5-56[31;56H[?25h[?25lg;[51;80H6-57[31;57H[?25h[?25l[18;19H[46m([25C)[m[51;76H24,31-45[18;45H[?25h[?25l[1m[37m[41m)[m[1m[37m[46m{[m[18;46H[K[19;37H[1m[37m[41m;[20;30H;[21;17H}[22;9H}[23;18H{[24;66H;[25;9H}
}[27;29H{[28;20H;[29;83H{[30;49H{[31;57H;[32;17H}[33;9H}[34;19H;

}[37;33H{[38;18H;[39;39H{[40;41H{[41;80H;[42;33H;[43;17H}[44;39H;[45;57H;[46;30H{[47;40H;[48;17H}[4C{[49;44H{[50;79H;[m[18;44H[1m[37m[46m)[m[1m[37m[41m{[m[51;80H0-44[18;44H[?25h[?25l[1m[37m[41m)[m[1m[37m[46m{[m[18;45H[K[18;43H[1m[37m[46m)[m[1m[37m[41m{[m[51;79H29-43[18;43H[?25h[?25l)[46m{[m[18;44H[K[19;37H;[20;30H;[21;17H}[22;9H}[23;18H{[24;66H;[25;9H} 
}[27;29H{[28;20H;[29;83H{[30;49H{[31;57H;[32;17H}[33;9H}[34;19H;

}[37;33H{[38;18H;[39;39H{[40;41H{[41;80H;[42;33H;[43;17H}[44;39H;[45;57H;[46;30H{[47;40H;[48;17H}[33me[m[3C{[49;44H{[50;79H;[18;42H[46m)[m{[51;80H8-42[18;42H[?25h[?25l[46m.[m){.[46m)[m[5